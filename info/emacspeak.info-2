This is emacspeak.info, produced by makeinfo version 6.8 from
emacspeak.texi.

INFO-DIR-SECTION Accessibility
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION Emacs
START-INFO-DIR-ENTRY
* Emacspeak:(emacspeak).		Speech-enabled Audio Desktop.
END-INFO-DIR-ENTRY

This manual documents *Emacspeak, The Complete Audio Desktop* and was
last updated on February 27, 2022.


File: emacspeak.info,  Node: emacspeak-hideshow,  Next: emacspeak-hydra,  Prev: emacspeak-hide-lines,  Up: Emacspeak Commands And Options

12.99 emacspeak-hideshow
========================

speech-enable hideshow.el


File: emacspeak.info,  Node: emacspeak-hydra,  Next: emacspeak-ibuffer,  Prev: emacspeak-hideshow,  Up: Emacspeak Commands And Options

12.100 emacspeak-hydra
======================

12.100.1 Emacspeak-Hydra Commands
---------------------------------

12.100.1.1 emacspeak-hydra-toggle-talkative
...........................................

 -- Command: emacspeak-hydra-toggle-talkative

     Toggle hydra-is-helpful


File: emacspeak.info,  Node: emacspeak-ibuffer,  Next: emacspeak-ido,  Prev: emacspeak-hydra,  Up: Emacspeak Commands And Options

12.101 emacspeak-ibuffer
========================

speech-enable ibuffer.el this is an alternative to buffer-menu

12.101.1 Emacspeak-Ibuffer Commands
-----------------------------------

12.101.1.1 emacspeak-ibuffer-speak-buffer-line
..............................................

 -- Command: emacspeak-ibuffer-speak-buffer-line

     Speak information about this buffer


File: emacspeak.info,  Node: emacspeak-ido,  Next: emacspeak-iedit,  Prev: emacspeak-ibuffer,  Up: Emacspeak Commands And Options

12.102 emacspeak-ido
====================

speech-enable ido.el This is an interesting task since most of the
value-add provided by package ido.el is visual feedback.  Speech UI
Challenge: What is the most efficient means of conveying a dynamically
updating set of choices?  current strategy is to walk the list using c-s
and c-r as provided by ido Set number matches shown (ido-max-prospects)
to 3 using Custom so you dont hear the entire list.

12.102.1 emacspeak-ido Options
------------------------------

 -- Variable: User Option emacspeak-ido-typing-delay
     How long we wait before speaking completions.


File: emacspeak.info,  Node: emacspeak-iedit,  Next: emacspeak-indium,  Prev: emacspeak-ido,  Up: Emacspeak Commands And Options

12.103 emacspeak-iedit
======================

IEDIT == Edit multiple regions This module speech-enables iedit.


File: emacspeak.info,  Node: emacspeak-indium,  Next: emacspeak-info,  Prev: emacspeak-iedit,  Up: Emacspeak Commands And Options

12.104 emacspeak-indium
=======================

INDIUM == Javascript IDE This module speech-enables Indium.


File: emacspeak.info,  Node: emacspeak-info,  Next: emacspeak-ispell,  Prev: emacspeak-indium,  Up: Emacspeak Commands And Options

12.105 emacspeak-info
=====================

This module speech-enables the Emacs Info Reader.

12.105.1 Emacspeak-Info Commands
--------------------------------

12.105.1.1 emacspeak-info-next-section
......................................

 -- Command: emacspeak-info-next-section

     Move forward to next section in this node.

12.105.1.2 emacspeak-info-previous-section
..........................................

 -- Command: emacspeak-info-previous-section

     Move backward to previous section in this node.

12.105.1.3 emacspeak-info-speak-header
......................................

 -- Command: emacspeak-info-speak-header

     Speak info header line.

12.105.1.4 emacspeak-info-wizard
................................

 -- Command: emacspeak-info-wizard (node-spec)
     ‘C-h TAB’
     ‘<f1> TAB’
     ‘<help> TAB’

     Read a node spec from the minibuffer and launch
     Info-goto-node.
     See documentation for command ‘Info-goto-node’ for details on
     node-spec.

     (fn NODE-SPEC)

12.105.2 emacspeak-info Options
-------------------------------

 -- Variable: User Option emacspeak-info-select-node-speak-chunk
     Specifies how much of the selected node gets spoken.  Possible
     values are: screenfull – speak the displayed screen node – speak
     the entire node.


File: emacspeak.info,  Node: emacspeak-ispell,  Next: emacspeak-ivy,  Prev: emacspeak-info,  Up: Emacspeak Commands And Options

12.106 emacspeak-ispell
=======================

This module speech enables ispell.  Implementation note: This is hard
because of how ispell.el is written Namely, all of the work is done by
one huge hairy function.  This makes advising it hard.  The ispell
commands work well with Emacspeak as long as the list of correction
choices are few.  For interactively moving through corrections, install
package flyspell-correct from MELPA (package-install "flyspell-correct")
Then use M-x flyspell-mode.  Package flyspell is speech-enabled by
Emacspeak module emacspeak-flyspell And that module sets up
flyspell-correct to use IDO-style completion, i.e.  you can move through
corrections with C-r and C-s.

12.106.1 emacspeak-ispell Options
---------------------------------

 -- Variable: User Option emacspeak-ispell-max-choices
     Emacspeak will not speak the choices if there are more than this
     many available corrections.


File: emacspeak.info,  Node: emacspeak-ivy,  Next: emacspeak-jabber,  Prev: emacspeak-ispell,  Up: Emacspeak Commands And Options

12.107 emacspeak-ivy
====================

IVY == One More Smart Completion Technique Speech-enable ivy-style
completion.  This is still experimental and preliminary.


File: emacspeak.info,  Node: emacspeak-jabber,  Next: emacspeak-jdee,  Prev: emacspeak-ivy,  Up: Emacspeak Commands And Options

12.108 emacspeak-jabber
=======================

emacs-jabber.el implements a jabber client for emacs emacs-jabber is
hosted at sourceforge.  I use emacs-jabber with my gmail.com account

12.108.1 Emacspeak-Jabber Commands
----------------------------------

12.108.1.1 emacspeak-jabber-chat-next-message
.............................................

 -- Command: emacspeak-jabber-chat-next-message

     Move forward to and speak the next message in this chat session.

12.108.1.2 emacspeak-jabber-chat-previous-message
.................................................

 -- Command: emacspeak-jabber-chat-previous-message

     Move backward to and speak the previous message in this chat session.

12.108.1.3 emacspeak-jabber-chat-speak-this-message
...................................................

 -- Command: emacspeak-jabber-chat-speak-this-message (&optional
          copy-as-kill)

     Speak chat message under point.
     With optional interactive prefix arg ‘copy-as-kill’, copy it to
     the kill ring as well.

     (fn &optional COPY-AS-KILL)

12.108.1.4 emacspeak-jabber-popup-roster
........................................

 -- Command: emacspeak-jabber-popup-roster
     ‘C-e x j’
     ‘<fn> x j’

     Pop to Jabber roster.

12.108.1.5 emacspeak-jabber-speak-recent-message
................................................

 -- Command: emacspeak-jabber-speak-recent-message
     ‘C-e x SPC’
     ‘<fn> x SPC’

     Speak most recent message if one exists.

12.108.2 emacspeak-jabber Options
---------------------------------

 -- Variable: User Option emacspeak-jabber-speak-presence-alerts
     Set to T if you want to hear presence alerts.


File: emacspeak.info,  Node: emacspeak-jdee,  Next: emacspeak-js2,  Prev: emacspeak-jabber,  Up: Emacspeak Commands And Options

12.109 emacspeak-jdee
=====================

Speech enable Java IDE. The Java IDE –JDEE– can be found at
http://sunsite.auc.dk/jdee/


File: emacspeak.info,  Node: emacspeak-js2,  Next: emacspeak-keymap,  Prev: emacspeak-jdee,  Up: Emacspeak Commands And Options

12.110 emacspeak-js2
====================

JS2-mode http://js2-mode.googlecode.com/svn/trunk is a new, powerful
Emacs mode for working with JavaScript.  This module speech-enables js2.


File: emacspeak.info,  Node: emacspeak-keymap,  Next: emacspeak-kmacro,  Prev: emacspeak-js2,  Up: Emacspeak Commands And Options

12.111 emacspeak-keymap
=======================

This module defines the emacspeak keybindings.  Note that the <fn> key
found on laptops is denoted <fn>

12.111.1 emacspeak-keymap Options
---------------------------------

 -- Variable: User Option emacspeak-alt-keys
     Alt key bindings.

 -- Variable: User Option emacspeak-ctl-z-keys
     CTL-z keymap.

 -- Variable: User Option emacspeak-hyper-keys
     Hyper-Key bindings.

 -- Variable: User Option emacspeak-personal-ctlx-keys
     Key bindings for use with C-e C-x.

 -- Variable: User Option emacspeak-personal-keys
     Key bindings for C-e x.

 -- Variable: User Option emacspeak-super-keys
     Super key bindings.


File: emacspeak.info,  Node: emacspeak-kmacro,  Next: emacspeak-librivox,  Prev: emacspeak-keymap,  Up: Emacspeak Commands And Options

12.112 emacspeak-kmacro
=======================

speech-enables kmacro — a kbd macro interface


File: emacspeak.info,  Node: emacspeak-librivox,  Next: emacspeak-lispy,  Prev: emacspeak-kmacro,  Up: Emacspeak Commands And Options

12.113 emacspeak-librivox
=========================

LIBRIVOX == <http://www.librivox.org> — Free Audio Books.  API Info:
<https://librivox.org/api/info> It provides a simple Web API This module
implements an Emacspeak Librivox client.

12.113.1 Usage
--------------

main entry point is command ‘emacspeak-librivox’ bound to ‘C-; l’.

12.113.2 Emacspeak-Librivox Commands
------------------------------------

12.113.2.1 emacspeak-librivox
.............................

 -- Command: emacspeak-librivox (search-type)
     ‘C-; l’
     ‘C-x @ h l’

     Launch a Librivox Search.

     (fn SEARCH-TYPE)

12.113.2.2 emacspeak-librivox-play
..................................

 -- Command: emacspeak-librivox-play (rss-url)

     Play book stream

     (fn RSS-URL)

12.113.2.3 emacspeak-librivox-search-by-author
..............................................

 -- Command: emacspeak-librivox-search-by-author (author &optional
          offset)

     Search by author. Both exact and partial matches for
     ‘author’. Optional interactive prefix arg ‘offset’ prompts for offset
     — use this for retrieving next set of results.

     (fn AUTHOR &optional OFFSET)

12.113.2.4 emacspeak-librivox-search-by-genre
.............................................

 -- Command: emacspeak-librivox-search-by-genre (genre &optional offset)

     Search by genre.
     Optional prefix arg ‘offset’ prompts for offset.

     (fn GENRE &optional OFFSET)

12.113.2.5 emacspeak-librivox-search-by-title
.............................................

 -- Command: emacspeak-librivox-search-by-title (title &optional offset)

     Search by title. Both exact and partial matches for ‘title’. Optional
     prefix arg ‘offset’ prompts for offset — use this for retrieving
     more results.

     (fn TITLE &optional OFFSET)

12.113.3 emacspeak-librivox Options
-----------------------------------

 -- Variable: User Option emacspeak-librivox-local-cache
     Location where we cache LIBRIVOX playlists.


File: emacspeak.info,  Node: emacspeak-lispy,  Next: emacspeak-lua,  Prev: emacspeak-librivox,  Up: Emacspeak Commands And Options

12.114 emacspeak-lispy
======================

LISPY == smart Navigation Of Lisp code This module speech-enables lispy.

12.114.1 Overview
-----------------

Lispy editing keeps delimiters balanced and Lispy navigators reliably
place point on either the opening or closing delimiter of the current
s-expression.  Emacspeak leverages this fact in the


File: emacspeak.info,  Node: emacspeak-lua,  Next: emacspeak-m-player,  Prev: emacspeak-lispy,  Up: Emacspeak Commands And Options

12.115 emacspeak-lua
====================

LUA == lua-mode Speech-enable lua-mode.


File: emacspeak.info,  Node: emacspeak-m-player,  Next: emacspeak-magit,  Prev: emacspeak-lua,  Up: Emacspeak Commands And Options

12.116 emacspeak-m-player
=========================

Defines an Emacspeak front-end for interacting with ‘mplayer’.  Program
‘mplayer’ is a versatile media player capable of playing many streaming
media formats.  This module provides complete access to all ‘mplayer’
functionality from a convenient Emacs interface.

12.116.1 Usage
--------------

The main entry-point is command ‘emacspeak-multimedia’ bound to ‘C-e ;’.
This prompts for and launches the desired media stream.  Once a stream
is playing, you can control it with single-letter keystrokes in the
‘*M-Player*’ buffer.  Alternatively, you can switch away from that
buffer to do real work, And invoke ‘m-player’ commands by first pressing
‘C-e ;’.  As an example, pressing ‘v’ in the ‘*M-Player*’ buffer prompts
for and sets the volume; When not in the ‘*M-Player*’ buffer, you can
achieve the same by pressing ‘C-e ; v’.  Press ‘C-h b’ in the
‘*M-Player*’ buffer to list ‘m-player’ keybindings.

12.116.2 Emacspeak-M-Player Commands
------------------------------------

12.116.2.1 emacspeak-m-player
.............................

 -- Command: emacspeak-m-player (resource &optional play-list)

     Play  resource, or play dynamic playlist if set.  Optional prefix argument
     play-list interprets resource as a play-list.  Second interactive
     prefix arg adds option -allow-dangerous-playlist-parsing to mplayer.
     See command M-x emacspeak-m-player-add-to-dynamic for adding to the
     dynamic playlist.

     (fn RESOURCE &optional PLAY-LIST)

12.116.2.2 emacspeak-m-player-add-autopan
.........................................

 -- Command: emacspeak-m-player-add-autopan

     Add autopan effect.

12.116.2.3 emacspeak-m-player-add-autosat
.........................................

 -- Command: emacspeak-m-player-add-autosat

     Add ZamAutoSat (auto saturation) effect.

12.116.2.4 emacspeak-m-player-add-equalizer
...........................................

 -- Command: emacspeak-m-player-add-equalizer (&optional reset)

     Add equalizer.  Equalizer is updated as each change
     is made, and the final effect set by pressing RET.  Interactive prefix
     arg ‘reset’ starts with all filters set to 0.

     (fn &optional RESET)

12.116.2.5 emacspeak-m-player-add-filter
........................................

 -- Command: emacspeak-m-player-add-filter (filter-name &optional edit)

     Adds  filter with completion.
      Optional interactive prefix arg ‘edit’ edits the.

     (fn FILTER-NAME &optional EDIT)

12.116.2.6 emacspeak-m-player-add-ladspa
........................................

 -- Command: emacspeak-m-player-add-ladspa

     Apply plugin to running MPlayer.
     Copies  invocation string to kill-ring so it can be added easily to
     our pre-defined filters if appropriate.

12.116.2.7 emacspeak-m-player-add-to-dynamic
............................................

 -- Command: emacspeak-m-player-add-to-dynamic (file)

     Add file to the current  dynamic playlist.

     (fn FILE)

12.116.2.8 emacspeak-m-player-alt-src-step
..........................................

 -- Command: emacspeak-m-player-alt-src-step (step)

     Move within an ASF playlist.

     (fn STEP)

12.116.2.9 emacspeak-m-player-amark-add
.......................................

 -- Command: emacspeak-m-player-amark-add (name &optional
          prompt-position)

     Set AMark ‘name’ at current position.
     Interactive prefix arg prompts for position.
     As the default, use current position.

     (fn NAME &optional PROMPT-POSITION)

12.116.2.10 emacspeak-m-player-amark-jump
.........................................

 -- Command: emacspeak-m-player-amark-jump

     Jump to AMark.

12.116.2.11 emacspeak-m-player-amark-save
.........................................

 -- Command: emacspeak-m-player-amark-save

     Save amarks.

12.116.2.12 emacspeak-m-player-apply-reverb-preset
..................................................

 -- Command: emacspeak-m-player-apply-reverb-preset (preset)

     Prompt for and apply a reverb preset.
     You need to use mplayer built with ladspa support, and have package
     tap-reverb already installed.

     (fn PRESET)

12.116.2.13 emacspeak-m-player-backward-10min
.............................................

 -- Command: emacspeak-m-player-backward-10min

     Move backward ten minutes.

12.116.2.14 emacspeak-m-player-backward-10s
...........................................

 -- Command: emacspeak-m-player-backward-10s

     Move back 10 seconds.

12.116.2.15 emacspeak-m-player-backward-1min
............................................

 -- Command: emacspeak-m-player-backward-1min

     Move back 1 minute.

12.116.2.16 emacspeak-m-player-balance
......................................

 -- Command: emacspeak-m-player-balance

     Set left/right balance.

12.116.2.17 emacspeak-m-player-beginning-of-track
.................................................

 -- Command: emacspeak-m-player-beginning-of-track

     Move to beginning.

12.116.2.18 emacspeak-m-player-bind-accelerator
...............................................

 -- Command: emacspeak-m-player-bind-accelerator (directory key)

     Binds key to invoke m-player  on specified directory.

     (fn DIRECTORY KEY)

12.116.2.19 emacspeak-m-player-clear-filters
............................................

 -- Command: emacspeak-m-player-clear-filters

     Clear all filters

12.116.2.20 emacspeak-m-player-command
......................................

 -- Command: emacspeak-m-player-command (key)

     Invoke MPlayer commands.

     (fn KEY)

12.116.2.21 emacspeak-m-player-customize-options
................................................

 -- Command: emacspeak-m-player-customize-options

     Use Customize to set MPlayer options.

12.116.2.22 emacspeak-m-player-delete-filter
............................................

 -- Command: emacspeak-m-player-delete-filter (filter)

     Delete filter.

     (fn FILTER)

12.116.2.23 emacspeak-m-player-delete-ladspa
............................................

 -- Command: emacspeak-m-player-delete-ladspa

     Delete plugin from  running MPlayer.

12.116.2.24 emacspeak-m-player-display-metadata
...............................................

 -- Command: emacspeak-m-player-display-metadata

     Display metadata after refreshing it if needed.

12.116.2.25 emacspeak-m-player-display-percent
..............................................

 -- Command: emacspeak-m-player-display-percent

     Display current percentage.

12.116.2.26 emacspeak-m-player-display-position
...............................................

 -- Command: emacspeak-m-player-display-position

     Display current position in track.

12.116.2.27 emacspeak-m-player-double-speed
...........................................

 -- Command: emacspeak-m-player-double-speed

     Scale speed by 2.0

12.116.2.28 emacspeak-m-player-edit-reverb
..........................................

 -- Command: emacspeak-m-player-edit-reverb

     Edit ladspa reverb filter.
     You need to use mplayer built with ladspa support, and have package
     tap-reverb already installed.

12.116.2.29 emacspeak-m-player-end-of-track
...........................................

 -- Command: emacspeak-m-player-end-of-track

     Move to end.

12.116.2.30 emacspeak-m-player-equalizer-control
................................................

 -- Command: emacspeak-m-player-equalizer-control (v)

     Manipulate values in  vector using minibuffer.
     Applies  the resulting value at each step.

     (fn V)

12.116.2.31 emacspeak-m-player-equalizer-preset
...............................................

 -- Command: emacspeak-m-player-equalizer-preset (name)

     Prompts for  and apply equalizer preset.

     The following presets are available:

     flat classical club dance full-bass full-bass-and-treble
      full-treble headphones large-hall live party pop reggae rock
      ska soft soft-rock techno

     (fn NAME)

12.116.2.32 emacspeak-m-player-faster
.....................................

 -- Command: emacspeak-m-player-faster

     Speed up  playback.

12.116.2.33 emacspeak-m-player-forward-10min
............................................

 -- Command: emacspeak-m-player-forward-10min

     Move forward ten minutes.

12.116.2.34 emacspeak-m-player-forward-10s
..........................................

 -- Command: emacspeak-m-player-forward-10s

     Move forward 10 seconds.

12.116.2.35 emacspeak-m-player-forward-1min
...........................................

 -- Command: emacspeak-m-player-forward-1min

     Move forward by 1 minute.

12.116.2.36 emacspeak-m-player-from-history
...........................................

 -- Command: emacspeak-m-player-from-history (posn)
     ‘C-; h’
     ‘C-x @ h h’

     Play media from position ‘posn’media-history.

     (fn POSN)

12.116.2.37 emacspeak-m-player-get-length
.........................................

 -- Command: emacspeak-m-player-get-length

     Display length of track.

12.116.2.38 emacspeak-m-player-half-speed
.........................................

 -- Command: emacspeak-m-player-half-speed

     Scale speed by 0.5.

12.116.2.39 emacspeak-m-player-left-channel
...........................................

 -- Command: emacspeak-m-player-left-channel

     Play both channels on left.

12.116.2.40 emacspeak-m-player-load
...................................

 -- Command: emacspeak-m-player-load (resource &optional append)

     Load specified resource into a running  m-player.
     Interactive prefix arg appends the new resource to what is playing.

     (fn RESOURCE &optional APPEND)

12.116.2.41 emacspeak-m-player-load-playlist
............................................

 -- Command: emacspeak-m-player-load-playlist (f)

     Load playlist.

     (fn F)

12.116.2.42 emacspeak-m-player-locate-media
...........................................

 -- Command: emacspeak-m-player-locate-media (pattern)
     ‘C-. l’
     ‘C-' l’
     ‘C-x @ s l’

     Locate media matching  pattern.  The results can be
     played as a play-list by pressing [RET] on the first line, see
      M-x emacspeak-dired-open-this-file locally bound to C-RET
     to play  tracks.

     (fn PATTERN)

12.116.2.43 emacspeak-m-player-loop
...................................

 -- Command: emacspeak-m-player-loop (&optional raw)
     ‘C-e x ;’
     ‘<fn> x ;’

     M-Player with repeat indefinitely  turned on.
     Interactive prefix ‘raw’ reads a raw URL.

     (fn &optional RAW)

12.116.2.44 emacspeak-m-player-mode
...................................

 -- Command: emacspeak-m-player-mode

     Major mode for m-player interaction.

     Key             Binding
     ——————————————————————————-
     C-l		ladspa
     RET		emacspeak-m-player-load
     SPC		emacspeak-m-player-pause
     %		emacspeak-m-player-display-percent
     (		emacspeak-m-player-left-channel
     )		emacspeak-m-player-right-channel
     +		emacspeak-m-player-volume-up
     ,		emacspeak-m-player-backward-10s
     -		emacspeak-m-player-volume-down
     .		emacspeak-m-player-forward-10s
     /		emacspeak-m-player-restore-process
     1 .. 9		emacspeak-m-player-volume-set
     ;		emacspeak-m-player-pop-to-player
     <		emacspeak-m-player-backward-1min
     =		emacspeak-m-player-volume-up
     >		emacspeak-m-player-forward-1min
     ?		emacspeak-m-player-display-position
     A		emacspeak-m-player-amark-add
     C		emacspeak-m-player-clear-filters
     E		emacspeak-m-player-add-equalizer
     G		emacspeak-m-player-seek-percentage
     L		emacspeak-m-player-locate-media
     M		emacspeak-m-player-display-metadata
     O		emacspeak-m-player-reset-options
     P		emacspeak-m-player-apply-reverb-preset
     Q		emacspeak-m-player-quit
     R		emacspeak-m-player-edit-reverb
     S		emacspeak-m-player-amark-save
     [		emacspeak-m-player-slower
     \		emacspeak-m-player-persist-process
     ]		emacspeak-m-player-faster
     a		emacspeak-m-player-add-autopan
     b		emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     c		emacspeak-m-player-slave-command
     d		emacspeak-m-player-delete-filter
     e		emacspeak-m-player-equalizer-preset
     f		emacspeak-m-player-add-filter
     g		emacspeak-m-player-seek-absolute
     i		emacspeak-m-player-stream-info
     j		emacspeak-m-player-amark-jump
     k		emacspeak-m-player-quit
     l		emacspeak-m-player-get-length
     m		emacspeak-m-player-mode-line
     n		emacspeak-m-player-next-track
     o		emacspeak-m-player-customize-options
     p		emacspeak-m-player-previous-track
     q		bury-buffer
     r		emacspeak-m-player-seek-relative
     s		emacspeak-m-player-scale-speed
     t		emacspeak-m-player-play-tracks-jump
     u		emacspeak-m-player-url
     v		emacspeak-m-player-volume-change
     w		emacspeak-m-player-write-clip
     x		emacspeak-m-player-pan
     z		emacspeak-m-player-add-autosat
     {		emacspeak-m-player-half-speed
     }		emacspeak-m-player-double-speed
     DEL		emacspeak-m-player-reset-speed
     <down>		emacspeak-m-player-forward-1min
     <end>		emacspeak-m-player-end-of-track
     <home>		emacspeak-m-player-beginning-of-track
     <left>		emacspeak-m-player-backward-10s
     <next>		emacspeak-m-player-forward-10min
     <prior>		emacspeak-m-player-backward-10min
     <right>		emacspeak-m-player-forward-10s
     <up>		emacspeak-m-player-backward-1min

     M-,		emacspeak-m-player-set-clip-start
     M-.		emacspeak-m-player-set-clip-end
     M-l		emacspeak-m-player-load-playlist

     In addition to any hooks its parent mode ‘comint-mode’ might have run,
     this mode runs the hook ‘emacspeak-m-player-mode-hook’, as the final
     or penultimate step during initialization.

12.116.2.45 emacspeak-m-player-mode-line
........................................

 -- Command: emacspeak-m-player-mode-line

     Mode-line for M-Player buffers.

12.116.2.46 emacspeak-m-player-next-track
.........................................

 -- Command: emacspeak-m-player-next-track

     Next track.

12.116.2.47 emacspeak-m-player-pan
..................................

 -- Command: emacspeak-m-player-pan

     Pan from left to right   and back  one step at a time.

12.116.2.48 emacspeak-m-player-pause
....................................

 -- Command: emacspeak-m-player-pause

     Pause or unpause.

12.116.2.49 emacspeak-m-player-persist-process
..............................................

 -- Command: emacspeak-m-player-persist-process (&optional name)

     Persists  m-player process instance by renaming its buffer.
     Optional interactive prefix arg prompts for name to use for  player.

     (fn &optional NAME)

12.116.2.50 emacspeak-m-player-play-rss
.......................................

 -- Command: emacspeak-m-player-play-rss (rss-url)

     Play an RSS stream.

     (fn RSS-URL)

12.116.2.51 emacspeak-m-player-play-tracks-jump
...............................................

 -- Command: emacspeak-m-player-play-tracks-jump (step)

     Skip tracks.

     (fn STEP)

12.116.2.52 emacspeak-m-player-play-tree-up
...........................................

 -- Command: emacspeak-m-player-play-tree-up (step)

     Move within the play tree.

     (fn STEP)

12.116.2.53 emacspeak-m-player-pop-to-player
............................................

 -- Command: emacspeak-m-player-pop-to-player

     Pop to m-player buffer.

12.116.2.54 emacspeak-m-player-previous-track
.............................................

 -- Command: emacspeak-m-player-previous-track

     Previous track.

12.116.2.55 emacspeak-m-player-quit
...................................

 -- Command: emacspeak-m-player-quit

     Quit.

12.116.2.56 emacspeak-m-player-reset-options
............................................

 -- Command: emacspeak-m-player-reset-options

     Reset MPlayer options.

12.116.2.57 emacspeak-m-player-reset-speed
..........................................

 -- Command: emacspeak-m-player-reset-speed

     Reset  speed.

12.116.2.58 emacspeak-m-player-restore-process
..............................................

 -- Command: emacspeak-m-player-restore-process

     Restore emacspeak-m-player-process from current buffer.
     Check first if current buffer is in emacspeak-m-player-mode.

12.116.2.59 emacspeak-m-player-right-channel
............................................

 -- Command: emacspeak-m-player-right-channel

     Play on right channel.

12.116.2.60 emacspeak-m-player-scale-speed
..........................................

 -- Command: emacspeak-m-player-scale-speed (factor)

     Scale speed by factor.

     (fn FACTOR)

12.116.2.61 emacspeak-m-player-seek-absolute
............................................

 -- Command: emacspeak-m-player-seek-absolute (pos)

     Seek  to absolute pos in seconds.
     The time position can also be specified as HH:MM:SS.

     (fn POS)

12.116.2.62 emacspeak-m-player-seek-percentage
..............................................

 -- Command: emacspeak-m-player-seek-percentage (pos)

     Seek  to absolute pos in percent.

     (fn POS)

12.116.2.63 emacspeak-m-player-seek-relative
............................................

 -- Command: emacspeak-m-player-seek-relative (offset)

     Seek  by offset from current position.
     Time offset can be specified as a number of seconds, or as HH:MM:SS.

     (fn OFFSET)

12.116.2.64 emacspeak-m-player-set-clip-end
...........................................

 -- Command: emacspeak-m-player-set-clip-end (&optional prompt)

     Set end of clip marker.
      Optional interactive prefix arg prompts for the timestamp.

     (fn &optional PROMPT)

12.116.2.65 emacspeak-m-player-set-clip-start
.............................................

 -- Command: emacspeak-m-player-set-clip-start (&optional prompt)

     Set start of clip marker.
     Interactive prefix arg prompts for the timestamp.

     (fn &optional PROMPT)

12.116.2.66 emacspeak-m-player-shuffle
......................................

 -- Command: emacspeak-m-player-shuffle
     ‘C-e :’
     ‘<fn> :’

     M-Player with shuffle turned on.

12.116.2.67 emacspeak-m-player-slave-command
............................................

 -- Command: emacspeak-m-player-slave-command (command)

     Dispatch slave command.

     (fn COMMAND)

12.116.2.68 emacspeak-m-player-slower
.....................................

 -- Command: emacspeak-m-player-slower

     Slow down playback.

12.116.2.69 emacspeak-m-player-stream-info
..........................................

 -- Command: emacspeak-m-player-stream-info (&optional toggle-cue)

     Speak and display metadata.
     Interactive prefix arg toggles automatic cueing of ICY info updates.

     (fn &optional TOGGLE-CUE)

12.116.2.70 emacspeak-m-player-toggle-extrastereo
.................................................

 -- Command: emacspeak-m-player-toggle-extrastereo

     Toggle application of extrastereo filter to all streams.

12.116.2.71 emacspeak-m-player-url
..................................

 -- Command: emacspeak-m-player-url (url &optional playlist-p)
     ‘C-, u’
     ‘C-x @ a u’

     Call emacspeak-m-player on  URL.

     (fn URL &optional PLAYLIST-P)

12.116.2.72 emacspeak-m-player-using-hrtf
.........................................

 -- Command: emacspeak-m-player-using-hrtf
     ‘C-; '’
     ‘C-x @ h '’

     Add af resample=48000,hrtf to startup options.
     This will work if the soundcard is set to 48000.

12.116.2.73 emacspeak-m-player-using-openal
...........................................

 -- Command: emacspeak-m-player-using-openal (resource &optional
          play-list)
     ‘C-; ;’
     ‘C-x @ h ;’

     Use openal.

     (fn RESOURCE &optional PLAY-LIST)

12.116.2.74 emacspeak-m-player-volume-change
............................................

 -- Command: emacspeak-m-player-volume-change (value)

     Set volume.

     (fn VALUE)

12.116.2.75 emacspeak-m-player-volume-down
..........................................

 -- Command: emacspeak-m-player-volume-down

     Volume down.

12.116.2.76 emacspeak-m-player-volume-set
.........................................

 -- Command: emacspeak-m-player-volume-set (&optional arg)

     Set Volume in steps from 1 to 9.

     (fn &optional ARG)

12.116.2.77 emacspeak-m-player-volume-up
........................................

 -- Command: emacspeak-m-player-volume-up

     Volume up.

12.116.2.78 emacspeak-m-player-write-clip
.........................................

 -- Command: emacspeak-m-player-write-clip

     Split selected range using SoX

12.116.2.79 emacspeak-m-player-youtube-live
...........................................

 -- Command: emacspeak-m-player-youtube-live (url)
     ‘C-e x l’
     ‘<fn> x l’

     Use youtube-dl and mplayer to live-stream   from Youtube.

     (fn URL)

12.116.2.80 emacspeak-m-player-youtube-player
.............................................

 -- Command: emacspeak-m-player-youtube-player (url &optional best)
     ‘C-, y’
     ‘C-x @ a y’

     Use youtube-dl and mplayer to stream  audio from Youtube.
     Default picks lowest quality —
     Optional prefix arg ‘best’ chooses highest.

     (fn URL &optional BEST)

12.116.2.81 emacspeak-multimedia
................................

 -- Command: emacspeak-multimedia
     ‘C-e ;’
     ‘<fn> ;’

     Start or control Emacspeak multimedia player.
     Controls media playback when already playing.

     Key             Binding
     ——————————————————————————-
     C-l		ladspa
     RET		emacspeak-m-player-load
     SPC		emacspeak-m-player-pause
     %		emacspeak-m-player-display-percent
     (		emacspeak-m-player-left-channel
     )		emacspeak-m-player-right-channel
     +		emacspeak-m-player-volume-up
     ,		emacspeak-m-player-backward-10s
     -		emacspeak-m-player-volume-down
     .		emacspeak-m-player-forward-10s
     /		emacspeak-m-player-restore-process
     1 .. 9		emacspeak-m-player-volume-set
     ;		emacspeak-m-player-pop-to-player
     <		emacspeak-m-player-backward-1min
     =		emacspeak-m-player-volume-up
     >		emacspeak-m-player-forward-1min
     ?		emacspeak-m-player-display-position
     A		emacspeak-m-player-amark-add
     C		emacspeak-m-player-clear-filters
     E		emacspeak-m-player-add-equalizer
     G		emacspeak-m-player-seek-percentage
     L		emacspeak-m-player-locate-media
     M		emacspeak-m-player-display-metadata
     O		emacspeak-m-player-reset-options
     P		emacspeak-m-player-apply-reverb-preset
     Q		emacspeak-m-player-quit
     R		emacspeak-m-player-edit-reverb
     S		emacspeak-m-player-amark-save
     [		emacspeak-m-player-slower
     \		emacspeak-m-player-persist-process
     ]		emacspeak-m-player-faster
     a		emacspeak-m-player-add-autopan
     b		emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     c		emacspeak-m-player-slave-command
     d		emacspeak-m-player-delete-filter
     e		emacspeak-m-player-equalizer-preset
     f		emacspeak-m-player-add-filter
     g		emacspeak-m-player-seek-absolute
     i		emacspeak-m-player-stream-info
     j		emacspeak-m-player-amark-jump
     k		emacspeak-m-player-quit
     l		emacspeak-m-player-get-length
     m		emacspeak-m-player-mode-line
     n		emacspeak-m-player-next-track
     o		emacspeak-m-player-customize-options
     p		emacspeak-m-player-previous-track
     q		bury-buffer
     r		emacspeak-m-player-seek-relative
     s		emacspeak-m-player-scale-speed
     t		emacspeak-m-player-play-tracks-jump
     u		emacspeak-m-player-url
     v		emacspeak-m-player-volume-change
     w		emacspeak-m-player-write-clip
     x		emacspeak-m-player-pan
     z		emacspeak-m-player-add-autosat
     {		emacspeak-m-player-half-speed
     }		emacspeak-m-player-double-speed
     DEL		emacspeak-m-player-reset-speed
     <down>		emacspeak-m-player-forward-1min
     <end>		emacspeak-m-player-end-of-track
     <home>		emacspeak-m-player-beginning-of-track
     <left>		emacspeak-m-player-backward-10s
     <next>		emacspeak-m-player-forward-10min
     <prior>		emacspeak-m-player-backward-10min
     <right>		emacspeak-m-player-forward-10s
     <up>		emacspeak-m-player-backward-1min

     M-,		emacspeak-m-player-set-clip-start
     M-.		emacspeak-m-player-set-clip-end
     M-l		emacspeak-m-player-load-playlist
     .

12.116.3 emacspeak-m-player Options
-----------------------------------

 -- Variable: User Option emacspeak-m-player-clips
     Directory where we store clips.

 -- Variable: User Option emacspeak-m-player-custom-filters
     Additional filters to apply to streams.

 -- Variable: User Option emacspeak-m-player-program
     Media player program.

 -- Variable: User Option emacspeak-media-location-bindings
     Map keys to launch MPlayer on a directory.


File: emacspeak.info,  Node: emacspeak-magit,  Next: emacspeak-make-mode,  Prev: emacspeak-m-player,  Up: Emacspeak Commands And Options

12.117 emacspeak-magit
======================

MAGIT == Git interface in Emacs git clone
git://github.com/magit/magit.git


File: emacspeak.info,  Node: emacspeak-make-mode,  Next: emacspeak-man,  Prev: emacspeak-magit,  Up: Emacspeak Commands And Options

12.118 emacspeak-make-mode
==========================

This module speech enables make-mode


File: emacspeak.info,  Node: emacspeak-man,  Next: emacspeak-markdown,  Prev: emacspeak-make-mode,  Up: Emacspeak Commands And Options

12.119 emacspeak-man
====================

Provide additional advice to man-mode

12.119.1 Emacspeak-Man Commands
-------------------------------

12.119.1.1 emacspeak-man-browse-man-page
........................................

 -- Command: emacspeak-man-browse-man-page

     Browse the man page –read it a paragraph at a time

12.119.1.2 emacspeak-man-speak-this-section
...........................................

 -- Command: emacspeak-man-speak-this-section

     Speak current section


File: emacspeak.info,  Node: emacspeak-markdown,  Next: emacspeak-maths,  Prev: emacspeak-man,  Up: Emacspeak Commands And Options

12.120 emacspeak-markdown
=========================

MARKDOWN == Light-weight markup.  This module speech-enables markdown.el


File: emacspeak.info,  Node: emacspeak-maths,  Next: emacspeak-message,  Prev: emacspeak-markdown,  Up: Emacspeak Commands And Options

12.121 emacspeak-maths
======================

12.121.1 Setup
--------------

Do not try what follows until you have read js/node/README.org and
successfully set up nvm (Node Version Manager) as described there.

12.121.2 Technical Overview
---------------------------

Spoken mathematics on the emacspeak audio desktop.  Use a NodeJS based
speech-rule-engine for Mathematics as the backend for processing
mathematical markup.  The result of this processing is an annotated
S-expression that is rendered via Emacspeak’s speech facilities.
Annotations follow Aural CSS as implemented in Emacspeak, This allows us
to map these expressions to aural properties supported by specific TTS
engines.

   Start the server/client: M-x emacspeak-maths-start.  Once the server
and client are started, you can browse any number of math expressions
using the emacspeak-maths-navigator defined in module *Note
emacspeak-maths:: as described below.

   Note: In general, once everything is configured correctly, using the
maths navigator automatically starts the server and client.  Invoke the
Navigator using ‘s-spc’ — this is the <windows> key on Linux laptops.

12.121.3 Emacspeak-Maths Commands
---------------------------------

12.121.3.1 emacspeak-maths-depth
................................

 -- Command: emacspeak-maths-depth

     Move depth in current Math expression. (auto-generated)

12.121.3.2 emacspeak-maths-down
...............................

 -- Command: emacspeak-maths-down

     Move down in current Math expression. (auto-generated)

12.121.3.3 emacspeak-maths-enter
................................

 -- Command: emacspeak-maths-enter (latex)

     Send a LaTeX expression to Maths server,
      guess  based on context.

12.121.3.4 emacspeak-maths-enter-guess
......................................

 -- Command: emacspeak-maths-enter-guess

     Send the guessed  LaTeX expression to Maths server.

12.121.3.5 emacspeak-maths-flush-output
.......................................

 -- Command: emacspeak-maths-flush-output

     Flush client buffer if things go out of sync.

12.121.3.6 emacspeak-maths-left
...............................

 -- Command: emacspeak-maths-left

     Move left in current Math expression. (auto-generated)

12.121.3.7 emacspeak-maths-restart
..................................

 -- Command: emacspeak-maths-restart

     Restart Node math-server if running. Otherwise starts a new one.

12.121.3.8 emacspeak-maths-right
................................

 -- Command: emacspeak-maths-right

     Move right in current Math expression. (auto-generated)

12.121.3.9 emacspeak-maths-root
...............................

 -- Command: emacspeak-maths-root

     Move root in current Math expression. (auto-generated)

12.121.3.10 emacspeak-maths-shutdown
....................................

 -- Command: emacspeak-maths-shutdown

     Shutdown client and server processes.

12.121.3.11 emacspeak-maths-speak-alt
.....................................

 -- Command: emacspeak-maths-speak-alt

     Speak alt text as Maths.
     For use on Wikipedia pages  for example.

12.121.3.12 emacspeak-maths-spoken-mode
.......................................

 -- Command: emacspeak-maths-spoken-mode

     Special mode for interacting with Spoken Math.

     This mode is used by the special buffer that displays spoken math
     returned from the Node server.
     This mode is similar to Emacs’ ‘view-mode’.
     see the key-binding list at the end of this description.
     Emacs online help facility to look up help on these commands.

     Key             Binding
     ——————————————————————————-
     [		backward-page
     ]		forward-page
     h		emacspeak-maths-left
     j		emacspeak-maths-down
     k		emacspeak-maths-up
     l		emacspeak-maths-right

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-maths-spoken-mode-hook’, as
     the final or penultimate step during initialization.

12.121.3.13 emacspeak-maths-start
.................................

 -- Command: emacspeak-maths-start

     Start Maths server bridge.

12.121.3.14 emacspeak-maths-switch-to-output
............................................

 -- Command: emacspeak-maths-switch-to-output

     Switch to output buffer.

12.121.3.15 emacspeak-maths-up
..............................

 -- Command: emacspeak-maths-up

     Move up in current Math expression. (auto-generated)


File: emacspeak.info,  Node: emacspeak-message,  Next: emacspeak-metapost,  Prev: emacspeak-maths,  Up: Emacspeak Commands And Options

12.122 emacspeak-message
========================

advice for posting message commands

12.122.1 emacspeak-message Options
----------------------------------

 -- Variable: User Option emacspeak-message-punctuation-mode
     Pronunciation mode to use for message buffers.


File: emacspeak.info,  Node: emacspeak-metapost,  Next: emacspeak-midge,  Prev: emacspeak-message,  Up: Emacspeak Commands And Options

12.123 emacspeak-metapost
=========================

Speech-enables metapost mode.  metapost is a powerful drawing package
typically installed as mpost by modern TeX installations.


File: emacspeak.info,  Node: emacspeak-midge,  Next: emacspeak-mines,  Prev: emacspeak-metapost,  Up: Emacspeak Commands And Options

12.124 emacspeak-midge
======================

This module speech enables midge.  Midge is a MIDI composer/editor tool.
From the package README file: ; Midge, for midi generator, is a text to
midi translator.  ; It creates type 1 (ie multitrack) midi files from
text ; descriptions of music.  It is a single perl script, which ; does
not require any additional modules.  The package also provides a
convenient emacs mode for editing and playing midge files.  Midge’s
homepage is at: http://www.dmriley.demon.co.uk/code/midge/


File: emacspeak.info,  Node: emacspeak-mines,  Next: emacspeak-mspools,  Prev: emacspeak-midge,  Up: Emacspeak Commands And Options

12.125 emacspeak-mines
======================

MINES == Minesweeper game in emacs.  The game itself provides a fully
keyboard driven interface.  In addition, Emacspeak provides

12.125.1 Emacspeak-Mines Commands
---------------------------------

12.125.1.1 emacspeak-mines-beginning-of-row
...........................................

 -- Command: emacspeak-mines-beginning-of-row

     Move to beginning of row

12.125.1.2 emacspeak-mines-end-of-row
.....................................

 -- Command: emacspeak-mines-end-of-row

     Move to end of row

12.125.1.3 emacspeak-mines-goto
...............................

 -- Command: emacspeak-mines-goto (index)

     Move to specified cell.

     (fn INDEX)

12.125.1.4 emacspeak-mines-jump-to-uncovered-cell
.................................................

 -- Command: emacspeak-mines-jump-to-uncovered-cell (from-beginning)

     Jump to next uncovered cell. With interactive prefix-arg, jump
     to beginning of board before searching.

     (fn FROM-BEGINNING)

12.125.1.5 emacspeak-mines-speak-board
......................................

 -- Command: emacspeak-mines-speak-board

     Speak the board.

12.125.1.6 emacspeak-mines-speak-cell
.....................................

 -- Command: emacspeak-mines-speak-cell

     Speak current cell.

12.125.1.7 emacspeak-mines-speak-mark-count
...........................................

 -- Command: emacspeak-mines-speak-mark-count

     Count and speak number of marks.

12.125.1.8 emacspeak-mines-speak-neighbors
..........................................

 -- Command: emacspeak-mines-speak-neighbors

     Speak neighboring cells in sorted order.

12.125.1.9 emacspeak-mines-speak-uncovered-count
................................................

 -- Command: emacspeak-mines-speak-uncovered-count

     Speak number of uncovered cells.


File: emacspeak.info,  Node: emacspeak-mspools,  Next: emacspeak-muggles,  Prev: emacspeak-mines,  Up: Emacspeak Commands And Options

12.126 emacspeak-mspools
========================

Speech-enable mspools –a package that lets you monitor multiple
maildrops


File: emacspeak.info,  Node: emacspeak-muggles,  Next: emacspeak-muse,  Prev: emacspeak-mspools,  Up: Emacspeak Commands And Options

12.127 emacspeak-muggles
========================

MUGGLES == Emacspeak spells for power-users.  This module implements no
new functionality — contrast with emacspeak-wizards.  Instead, it uses
package hydra to provide convenience key-bindings that access existing
Emacspeak functionality.

12.127.1 Emacspeak-Muggles Commands
-----------------------------------

12.127.1.1 emacspeak-muggles-brightness/body
............................................

 -- Command: emacspeak-muggles-brightness/body
     ‘<print>’

     Call the body in the "emacspeak-muggles-brightness" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-brightness")’,
     "s":    ‘xbacklight-set’,
     "g":    ‘xbacklight-get’,
     "t":    ‘emacspeak-hydra-toggle-talkative’,
     "<print>":    ‘xbacklight-black’,
     "0":    ‘xbacklight-black’,
     "1":    ‘xbacklight-white’,
     "d":    ‘xbacklight-decrement’,
     "i":    ‘xbacklight-increment’,
     "SPC":    ‘xbacklight-increment’

     The body can be accessed via ‘emacspeak-muggles-brightness/body’.

12.127.1.2 emacspeak-muggles-hideshow/body
..........................................

 -- Command: emacspeak-muggles-hideshow/body
     ‘C-, h’
     ‘C-x @ a h’

     Call the body in the "emacspeak-muggles-hideshow" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-hideshow")’,
     "h":    ‘hs-hide-block’,
     "s":    ‘hs-show-block’,
     "H":    ‘hs-hide-all’,
     "S":    ‘hs-show-all’,
     "a":    ‘hs-show-all’,
     "l":    ‘hs-hide-level’,
     "i":    ‘hs-hide-initial-comment-block’

     The body can be accessed via ‘emacspeak-muggles-hideshow/body’.

12.127.1.3 emacspeak-muggles-ido-yank
.....................................

 -- Command: emacspeak-muggles-ido-yank
     ‘C-M-y’

     Pick what to yank using ido completion.

12.127.1.4 emacspeak-muggles-lispy-or-sp
........................................

 -- Command: emacspeak-muggles-lispy-or-sp

     Toggle between lispy and smartparens.

12.127.1.5 emacspeak-muggles-maths-navigator/body
.................................................

 -- Command: emacspeak-muggles-maths-navigator/body
     ‘s-SPC’

     Call the body in the "emacspeak-muggles-maths-navigator" hydra.

     The heads for the associated hydra are:

     "o":    ‘emacspeak-maths-switch-to-output’,
     "RET":    ‘emacspeak-maths-enter-guess’,
     "SPC":    ‘emacspeak-maths-enter’,
     "a":    ‘emacspeak-maths-speak-alt’,
     "d":    ‘emacspeak-maths-depth’,
     "r":    ‘emacspeak-maths-root’,
     "<up>":    ‘emacspeak-maths-up’,
     "<down>":    ‘emacspeak-maths-down’,
     "<left>":    ‘emacspeak-maths-left’,
     "<right>":    ‘emacspeak-maths-right’

     The body can be accessed via ‘emacspeak-muggles-maths-navigator/body’.

12.127.1.6 emacspeak-muggles-navigate/body
..........................................

 -- Command: emacspeak-muggles-navigate/body
     ‘s-n’

     Call the body in the "emacspeak-muggles-navigate" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-navigate")’,
     "s":    ‘emacspeak-hydra-toggle-talkative’,
     "n":    ‘next-line’,
     "p":    ‘previous-line’,
     "f":    ‘forward-char’,
     "b":    ‘backward-char’,
     "a":    ‘beginning-of-line’,
     "e":    ‘move-end-of-line’,
     "j":    ‘next-line’,
     "k":    ‘previous-line’,
     "v":    ‘scroll-up-command’,
     "V":    ‘scroll-down-command’,
     "l":    ‘recenter-top-bottom’,
     "<":    ‘beginning-of-buffer’,
     ">":    ‘end-of-buffer’

     The body can be accessed via ‘emacspeak-muggles-navigate/body’.

12.127.1.7 emacspeak-muggles-org-nav/body
.........................................

 -- Command: emacspeak-muggles-org-nav/body

     Call the body in the "emacspeak-muggles-org-nav" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-nav")’,
     "SPC":    ‘emacspeak-outline-speak-this-heading’,
     "n":    ‘emacspeak-outline-speak-next-heading’,
     "p":    ‘emacspeak-outline-speak-previous-heading’,
     "f":    ‘org-forward-heading-same-level’,
     "b":    ‘org-backward-heading-same-level’,
     "u":    ‘outline-up-heading’,
     "g":    ‘org-goto’

     The body can be accessed via ‘emacspeak-muggles-org-nav/body’.

12.127.1.8 emacspeak-muggles-org-table/body
...........................................

 -- Command: emacspeak-muggles-org-table/body

     Call the body in the "emacspeak-muggles-org-table" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-org-table")’,
     "j":    ‘org-table-next-row’,
     "k":    ‘org-table-previous-row’,
     "h":    ‘org-table-previous-field’,
     "l":    ‘org-table-next-field’,
     "SPC":    ‘emacspeak-org-table-speak-current-element’,
     ".":    ‘emacspeak-org-table-speak-coordinates’,
     "b":    ‘emacspeak-org-table-speak-both-headers-and-element’,
     "r":    ‘emacspeak-org-table-speak-row-header-and-element’,
     "c":    ‘emacspeak-org-table-speak-column-header-and-element’

     The body can be accessed via ‘emacspeak-muggles-org-table/body’.

12.127.1.9 emacspeak-muggles-toggle-option/body
...............................................

 -- Command: emacspeak-muggles-toggle-option/body
     ‘C-c o’

     Call the body in the "emacspeak-muggles-toggle-option" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-toggle-option")’,
     "C-f":    ‘(call-interactively #’folding-mode)’,
     "C":    ‘(call-interactively #’flycheck-mode)’,
     "F":    ‘(call-interactively #’flyspell-mode)’,
     "a":    ‘(call-interactively #’abbrev-mode)’,
     "d":    ‘(call-interactively #’toggle-debug-on-error)’,
     "f":    ‘(call-interactively #’auto-fill-mode)’,
     "e":    ‘(call-interactively #’emacspeak-m-player-toggle-extrastereo)’,
     "g":    ‘(call-interactively #’toggle-debug-on-quit)’,
     "h":    ‘(setq hydra-is-helpful (not hydra-is-helpful))’,
     "i":    ‘(call-interactively #’ido-everywhere)’,
     "I":    ‘(call-interactively #’flx-ido-mode)’,
     "p":    ‘emacspeak-muggles-lispy-or-sp’,
     "t":    ‘(call-interactively #’toggle-truncate-lines)’,
     "u":    ‘(call-interactively #’ido-ubiquitous-mode)’,
     "q":    nil

     The body can be accessed via ‘emacspeak-muggles-toggle-option/body’.

12.127.1.10 emacspeak-muggles-undo-only/undo-redo/body
......................................................

 -- Command: emacspeak-muggles-undo-only/undo-redo/body
     ‘C-/’

     Call the body in the "emacspeak-muggles-undo-only/undo-redo" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-undo-only/undo-redo")’,
     "/":    ‘undo-only’,
     "\":    ‘undo-redo’

     The body can be accessed via ‘emacspeak-muggles-undo-only/undo-redo/body’.

12.127.1.11 emacspeak-muggles-yank-pop/body
...........................................

 -- Command: emacspeak-muggles-yank-pop/body

     Call the body in the "emacspeak-muggles-yank-pop" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-yank-pop")’,
     "C-y":    ‘yank’,
     "M-y":    ‘yank-pop’,
     "y":    ‘(funcall-interactively #’yank-pop 1)’,
     "Y":    ‘(funcall-interactively #’yank-pop -1)’,
     "i":    ‘emacspeak-muggles-ido-yank’,
     "s":    ‘emacspeak-muggles-ido-yank’,
     "l":    ‘browse-kill-ring’

     The body can be accessed via ‘emacspeak-muggles-yank-pop/body’.


File: emacspeak.info,  Node: emacspeak-muse,  Next: emacspeak-navi-mode,  Prev: emacspeak-muggles,  Up: Emacspeak Commands And Options

12.128 emacspeak-muse
=====================

Speech enable Muse


File: emacspeak.info,  Node: emacspeak-navi-mode,  Next: emacspeak-net-utils,  Prev: emacspeak-muse,  Up: Emacspeak Commands And Options

12.129 emacspeak-navi-mode
==========================

NAVI-MODE == Remote control for buffer navigation


File: emacspeak.info,  Node: emacspeak-net-utils,  Next: emacspeak-newsticker,  Prev: emacspeak-navi-mode,  Up: Emacspeak Commands And Options

12.130 emacspeak-net-utils
==========================

This module speech enables net-utils


File: emacspeak.info,  Node: emacspeak-newsticker,  Next: emacspeak-nov,  Prev: emacspeak-net-utils,  Up: Emacspeak Commands And Options

12.131 emacspeak-newsticker
===========================

Newsticker provides a continuously updating newsticker using RSS
Provides functionality similar to amphetadesk –but in pure elisp


File: emacspeak.info,  Node: emacspeak-nov,  Next: emacspeak-nxml,  Prev: emacspeak-newsticker,  Up: Emacspeak Commands And Options

12.132 emacspeak-nov
====================

NOV == Yet Another EPub Reader Package nov.el is an alternative to
Emacspeak’s built-in EPub reader.  This module speech-enables nov.el In
addition, opening an epub using nov results in directory-specific
settings being loaded from file EMACSPEAK-SPEAK-DIRECTORY-SETTINGS —
That file can set book-specific settings such as speech-rate and
punctuation-mode among others.


File: emacspeak.info,  Node: emacspeak-nxml,  Next: emacspeak-ocr,  Prev: emacspeak-nov,  Up: Emacspeak Commands And Options

12.133 emacspeak-nxml
=====================

nxml-mode is a new XML mode for emacs by James Clark.  Package nxml is
available from the Emacs package archive.

12.133.1 Emacspeak-Nxml Commands
--------------------------------

12.133.1.1 emacspeak-nxml-summarize-outline
...........................................

 -- Command: emacspeak-nxml-summarize-outline

     Intelligent spoken display of current outline entry.


File: emacspeak.info,  Node: emacspeak-ocr,  Next: emacspeak-org,  Prev: emacspeak-nxml,  Up: Emacspeak Commands And Options

12.134 emacspeak-ocr
====================

This module defines Emacspeak front-end to OCR. This module assumes that
sane is installed and working for image acquisition, and that there is
an OCR engine that can take acquired images and produce text.

12.134.1 Emacspeak-Ocr Commands
-------------------------------

12.134.1.1 emacspeak-ocr
........................

 -- Command: emacspeak-ocr
     ‘C-e C-o’
     ‘<fn> C-o’

     An OCR front-end for the Emacspeak desktop.

     Page image is acquired using tools from the SANE package.
     The acquired image is run through the OCR engine if one is
     available, and the results placed in a buffer that is
     suitable for browsing the results.

     For detailed help, invoke command emacspeak-ocr bound to
     C-e C-o to launch emacspeak-ocr-mode, and press
     ‘?’ to display mode-specific help for emacspeak-ocr-mode.

12.134.1.2 emacspeak-ocr-backward-page
......................................

 -- Command: emacspeak-ocr-backward-page (&optional count-ignored)

     Like backward page, but tracks page number of current document.

     (fn &optional COUNT-IGNORED)

12.134.1.3 emacspeak-ocr-customize
..................................

 -- Command: emacspeak-ocr-customize

     Customize OCR settings.

12.134.1.4 emacspeak-ocr-flipflop-and-recognize-image
.....................................................

 -- Command: emacspeak-ocr-flipflop-and-recognize-image

     Run OCR engine on current image after flip-flopping it.
     Useful if you’ve scanned a page upside down and are using an
     engine that does not automatically flip the image for you.  You
     need the imagemagik family of tools — we use mogrify to
     transform the image.  Prompts for image file if file
     corresponding to the expected ‘current page’ is not found.

12.134.1.5 emacspeak-ocr-forward-page
.....................................

 -- Command: emacspeak-ocr-forward-page (&optional count-ignored)

     Like forward page, but tracks page number of current document.

     (fn &optional COUNT-IGNORED)

12.134.1.6 emacspeak-ocr-mode
.............................

 -- Command: emacspeak-ocr-mode

      An OCR front-end for the Emacspeak desktop.

     Pre-requisites:

     1) A working scanner back-end like SANE on Linux.

     2) An OCR engine.

     1: Make sure your scanner back-end works, and that you have
     the utilities to scan a document and acquire an image as a
     tiff file.  Then set variable
     emacspeak-ocr-scan-image-program to point at this utility.
     By default, this is set to ‘scanimage’ which is the image
     scanning utility provided by SANE.

     By default, this front-end attempts to compress the acquired
     tiff image; make sure you have a utility like tiffcp.
     Variable emacspeak-ocr-compress-image is set to ‘tiffcp’ by
     default; if you use something else, you should customize
     this variable.

     2: Next, make sure you have an OCR engine installed and
     working.  By default this front-end assumes that OCR is
     available as /usr/bin/ocr.

     Once you have ensured that acquiring an image and applying
     OCR to it work independently of Emacs, you can use this
     Emacspeak front-end to enable easy OCR access from within
     Emacspeak.

     The Emacspeak OCR front-end is launched by command
     emacspeak-ocr bound to C-e C-o.

     This command switches to a special buffer that has OCR
     commands bounds to single keystrokes– see the key-binding
     list at the end of this description.  Use Emacs online help
     facility to look up help on these commands.

     emacspeak-ocr-mode provides the necessary functionality to
     scan, OCR, read and save documents.  By default, scanned
     images and the resulting text are saved under directory
     ~/ocr; see variable emacspeak-ocr-working-directory.
     Invoking command emacspeak-ocr-open-working-directory bound
     to M-x emacspeak-ocr-open-working-directory will open this directory.

     By default, the document being scanned is named ‘untitled’.
     You can name the document by using command
     emacspeak-ocr-name-document bound to
     M-x emacspeak-ocr-name-document.  The document name is used
     in constructing the name of the image and text files.

     Key Bindings:

     See
     Key             Binding
     ——————————————————————————-
     RET		emacspeak-ocr-scan-and-recognize
     SPC		emacspeak-ocr-read-current-page
     1 .. 9		emacspeak-ocr-page
     ?		describe-mode
     C		emacspeak-ocr-set-compress-image-options
     I		emacspeak-ocr-set-scan-image-options
     [		emacspeak-ocr-backward-page
     ]		emacspeak-ocr-forward-page
     c		emacspeak-ocr-customize
     d		emacspeak-ocr-open-working-directory
     f		emacspeak-ocr-flipflop-and-recognize-image
     i		emacspeak-ocr-scan-image
     j		emacspeak-ocr-scan-photo
     n		emacspeak-ocr-name-document
     o		emacspeak-ocr-recognize-image
     p		emacspeak-ocr-page
     q		bury-buffer
     s		emacspeak-ocr-save-current-page
     w		emacspeak-ocr-write-document
     .

     In addition to any hooks its parent mode ‘text-mode’ might have run,
     this mode runs the hook ‘emacspeak-ocr-mode-hook’, as the final or
     penultimate step during initialization.

12.134.1.7 emacspeak-ocr-name-document
......................................

 -- Command: emacspeak-ocr-name-document (name)

     Name document being scanned in the current OCR buffer.
     Pick a short but meaningful name.

     (fn NAME)

12.134.1.8 emacspeak-ocr-open-working-directory
...............................................

 -- Command: emacspeak-ocr-open-working-directory

     Launch dired on OCR working directory.

12.134.1.9 emacspeak-ocr-page
.............................

 -- Command: emacspeak-ocr-page

     Move to specified page.

12.134.1.10 emacspeak-ocr-read-current-page
...........................................

 -- Command: emacspeak-ocr-read-current-page

     Speaks current page.

12.134.1.11 emacspeak-ocr-recognize-image
.........................................

 -- Command: emacspeak-ocr-recognize-image

     Run OCR engine on current image.
     Prompts for image file if file corresponding to the expected
     ‘current page’ is not found.

12.134.1.12 emacspeak-ocr-save-current-page
...........................................

 -- Command: emacspeak-ocr-save-current-page

     Writes out recognized text from current page
     to an appropriately named file.

12.134.1.13 emacspeak-ocr-scan-and-recognize
............................................

 -- Command: emacspeak-ocr-scan-and-recognize

     Scan in a page and run OCR engine on it.
     Use this command once you’ve verified that the separate
     steps of acquiring an image and running the OCR engine work
     correctly by themselves.

12.134.1.14 emacspeak-ocr-scan-image
....................................

 -- Command: emacspeak-ocr-scan-image

     Acquire page image.

12.134.1.15 emacspeak-ocr-scan-photo
....................................

 -- Command: emacspeak-ocr-scan-photo (&optional metadata)

     Scan in a photograph.
     The scanned image is converted to JPEG.

     (fn &optional METADATA)

12.134.1.16 emacspeak-ocr-set-compress-image-options
....................................................

 -- Command: emacspeak-ocr-set-compress-image-options (setting)

     Interactively update  image compression options.
     Prompts with current setting in the minibuffer.
     Setting persists for current Emacs session.

     (fn SETTING)

12.134.1.17 emacspeak-ocr-set-scan-image-options
................................................

 -- Command: emacspeak-ocr-set-scan-image-options (setting)

     Interactively update scan image options.
     Prompts with current setting in the minibuffer.
     Setting persists for current Emacs session.

     (fn SETTING)

12.134.1.18 emacspeak-ocr-write-document
........................................

 -- Command: emacspeak-ocr-write-document

     Writes out recognized text from all pages in current document.

12.134.2 emacspeak-ocr Options
------------------------------

 -- Variable: User Option emacspeak-ocr-compress-image
     Command used to compress the scanned tiff file.

 -- Variable: User Option emacspeak-ocr-compress-image-options
     Options used for compressing tiff image.

 -- Variable: User Option emacspeak-ocr-compress-photo-options
     Options used when created JPEG from scanned photographs.

 -- Variable: User Option emacspeak-ocr-engine
     OCR engine to process acquired image.

 -- Variable: User Option emacspeak-ocr-engine-options
     Command line options to pass to OCR engine.

 -- Variable: User Option emacspeak-ocr-image-extension
     Filename extension used for acquired image.

 -- Variable: User Option emacspeak-ocr-jpeg-metadata-writer
     Program to add metadata to JPEG files.

 -- Variable: User Option emacspeak-ocr-keep-uncompressed-image
     If set to T, uncompressed image is not removed.

 -- Variable: User Option emacspeak-ocr-photo-compress
     Program to create JPEG compressed images.

 -- Variable: User Option emacspeak-ocr-scan-image
     Name of image acquisition program.

 -- Variable: User Option emacspeak-ocr-scan-image-options
     Command line options to pass to image acquisition program.

 -- Variable: User Option emacspeak-ocr-scan-photo-options
     Options used when scanning in photographs.

 -- Variable: User Option emacspeak-ocr-working-directory
     Directory where images and OCR results will be placed.


File: emacspeak.info,  Node: emacspeak-org,  Next: emacspeak-orgalist,  Prev: emacspeak-ocr,  Up: Emacspeak Commands And Options

12.135 emacspeak-org
====================

Speech-enable org — Org allows you to keep organized notes and todo
lists.  Homepage: http://www.astro.uva.nl/~dominik/Tools/org/ or
http://orgmode.org/

12.135.1 Emacspeak-Org Commands
-------------------------------

12.135.1.1 emacspeak-org-capture-link
.....................................

 -- Command: emacspeak-org-capture-link (&optional open)
     ‘C-. h’
     ‘C-' h’
     ‘C-x @ s h’

     Capture hyperlink to current context.
     To use this command, first do ‘customize-variable’
     ‘org-capture-template’ and assign letter ‘h’ to a template that
     creates the hyperlink on capture.  Optional interactive prefix
     arg just opens the file

     (fn &optional OPEN)

12.135.1.2 emacspeak-org-popup-input
....................................

 -- Command: emacspeak-org-popup-input

     Pops up an org input area.

12.135.1.3 emacspeak-org-popup-input-buffer
...........................................

 -- Command: emacspeak-org-popup-input-buffer (mode)

     Provide an input buffer in a specified mode.

     (fn MODE)

12.135.1.4 emacspeak-org-table-speak-both-headers-and-element
.............................................................

 -- Command: emacspeak-org-table-speak-both-headers-and-element

     echoes both row and col headers.

12.135.1.5 emacspeak-org-table-speak-column-header
..................................................

 -- Command: emacspeak-org-table-speak-column-header

     echoes column header

12.135.1.6 emacspeak-org-table-speak-column-header-and-element
..............................................................

 -- Command: emacspeak-org-table-speak-column-header-and-element

     echoes col header and element

12.135.1.7 emacspeak-org-table-speak-coordinates
................................................

 -- Command: emacspeak-org-table-speak-coordinates

     echoes coordinates

12.135.1.8 emacspeak-org-table-speak-current-element
....................................................

 -- Command: emacspeak-org-table-speak-current-element

     echoes current table element

12.135.1.9 emacspeak-org-table-speak-row-header
...............................................

 -- Command: emacspeak-org-table-speak-row-header

     echoes row header

12.135.1.10 emacspeak-org-table-speak-row-header-and-element
............................................................

 -- Command: emacspeak-org-table-speak-row-header-and-element

     echoes row header and element

12.135.2 emacspeak-org Options
------------------------------

 -- Variable: User Option emacspeak-org-table-after-movement-function
     The function to call after moving in a table


File: emacspeak.info,  Node: emacspeak-orgalist,  Next: emacspeak-origami,  Prev: emacspeak-org,  Up: Emacspeak Commands And Options

12.136 emacspeak-orgalist
=========================

Speech-enable orgalist — create org-like lists everywhere.


File: emacspeak.info,  Node: emacspeak-origami,  Next: emacspeak-outline,  Prev: emacspeak-orgalist,  Up: Emacspeak Commands And Options

12.137 emacspeak-origami
========================

ORIGAMI == One More Flexible Folding Mechanism This module
speech-enables origami-mode.


File: emacspeak.info,  Node: emacspeak-outline,  Next: emacspeak-package,  Prev: emacspeak-origami,  Up: Emacspeak Commands And Options

12.138 emacspeak-outline
========================

Provide additional advice to outline-mode

12.138.1 Emacspeak-Outline Commands
-----------------------------------

12.138.1.1 emacspeak-outline-speak-backward-heading
...................................................

 -- Command: emacspeak-outline-speak-backward-heading

     Analogous to outline-backward-same-level
     except that the outline section is  spoken

12.138.1.2 emacspeak-outline-speak-forward-heading
..................................................

 -- Command: emacspeak-outline-speak-forward-heading

     Analogous to outline-forward-same-level,
     except that the outline section is  spoken

12.138.1.3 emacspeak-outline-speak-next-heading
...............................................

 -- Command: emacspeak-outline-speak-next-heading

     Analogous to outline-next-visible-heading,
     except that the outline section is  spoken

12.138.1.4 emacspeak-outline-speak-previous-heading
...................................................

 -- Command: emacspeak-outline-speak-previous-heading

     Analogous to outline-previous-visible-heading,
     except that the outline section is  spoken

12.138.1.5 emacspeak-outline-speak-this-heading
...............................................

 -- Command: emacspeak-outline-speak-this-heading

     Speak current outline section starting from point


File: emacspeak.info,  Node: emacspeak-package,  Next: emacspeak-paradox,  Prev: emacspeak-outline,  Up: Emacspeak Commands And Options

12.139 emacspeak-package
========================

PACKAGE == package.el Manage Emacs packages.  This module speech-enables
package.el with a few convenience commands.

12.139.1 Emacspeak-Package Commands
-----------------------------------

12.139.1.1 emacspeak-package-next-line
......................................

 -- Command: emacspeak-package-next-line

     Move to next line and speak it.

12.139.1.2 emacspeak-package-previous-line
..........................................

 -- Command: emacspeak-package-previous-line

     Move to next line and speak it.

12.139.1.3 emacspeak-package-summarize-line
...........................................

 -- Command: emacspeak-package-summarize-line

     Succinct Summary.


File: emacspeak.info,  Node: emacspeak-paradox,  Next: emacspeak-perl,  Prev: emacspeak-package,  Up: Emacspeak Commands And Options

12.140 emacspeak-paradox
========================

PARADOX == paradox.el Improved package management interface Manage Emacs
packages.  This module speech-enables paradox.el with a few convenience
commands.

12.140.1 Emacspeak-Paradox Commands
-----------------------------------

12.140.1.1 emacspeak-paradox-summarize-line
...........................................

 -- Command: emacspeak-paradox-summarize-line

     Succinct Summary.


File: emacspeak.info,  Node: emacspeak-perl,  Next: emacspeak-pianobar,  Prev: emacspeak-paradox,  Up: Emacspeak Commands And Options

12.141 emacspeak-perl
=====================

Provide additional advice to perl-mode


File: emacspeak.info,  Node: emacspeak-pianobar,  Next: emacspeak-popup,  Prev: emacspeak-perl,  Up: Emacspeak Commands And Options

12.142 emacspeak-pianobar
=========================

12.142.1 PIANOBAR == Pandora Client for Emacs
---------------------------------------------

12.142.2 Emacspeak-Pianobar Commands
------------------------------------

12.142.2.1 emacspeak-pianobar
.............................

 -- Command: emacspeak-pianobar
     ‘C-e '’
     ‘<fn> '’

     Start or control Emacspeak Pianobar player.

12.142.2.2 emacspeak-pianobar-command
.....................................

 -- Command: emacspeak-pianobar-command (key)

     Invoke Pianobar  commands.

     (fn KEY)

12.142.2.3 emacspeak-pianobar-electric-mode-toggle
..................................................

 -- Command: emacspeak-pianobar-electric-mode-toggle

     Toggle electric mode in pianobar buffer.
     If electric mode is on, keystrokes invoke pianobar commands directly.

12.142.2.4 emacspeak-pianobar-next-preset
.........................................

 -- Command: emacspeak-pianobar-next-preset

     Switch to next preset.

12.142.2.5 emacspeak-pianobar-previous-preset
.............................................

 -- Command: emacspeak-pianobar-previous-preset

     Switch to previous preset.

12.142.2.6 emacspeak-pianobar-send-raw
......................................

 -- Command: emacspeak-pianobar-send-raw (string)

     Send raw string with newline added to pianobar.

     (fn STRING)

12.142.2.7 emacspeak-pianobar-switch-to-preset
..............................................

 -- Command: emacspeak-pianobar-switch-to-preset

     Switch to one of the  presets.

12.142.2.8 emacspeak-pianobar-volume-down
.........................................

 -- Command: emacspeak-pianobar-volume-down

     Decrease volume

12.142.2.9 emacspeak-pianobar-volume-up
.......................................

 -- Command: emacspeak-pianobar-volume-up

     Increase volume


File: emacspeak.info,  Node: emacspeak-popup,  Next: emacspeak-proced,  Prev: emacspeak-pianobar,  Up: Emacspeak Commands And Options

12.143 emacspeak-popup
======================

POPUP == popup.el from MELPA


File: emacspeak.info,  Node: emacspeak-proced,  Next: emacspeak-project,  Prev: emacspeak-popup,  Up: Emacspeak Commands And Options

12.144 emacspeak-proced
=======================

PROCED == Process Editor A new Task Manager for Emacs.  Proced is part
of emacs 23.

12.144.1 Emacspeak-Proced Commands
----------------------------------

12.144.1.1 emacspeak-proced-jump-to-process
...........................................

 -- Command: emacspeak-proced-jump-to-process (name)

     Jump to process by name.

     (fn NAME)

12.144.1.2 emacspeak-proced-next-field
......................................

 -- Command: emacspeak-proced-next-field

     Navigate to next field.

12.144.1.3 emacspeak-proced-next-line
.....................................

 -- Command: emacspeak-proced-next-line

     Move to next line and speak a summary.

12.144.1.4 emacspeak-proced-previous-field
..........................................

 -- Command: emacspeak-proced-previous-field

     Navigate to previous field.

12.144.1.5 emacspeak-proced-previous-line
.........................................

 -- Command: emacspeak-proced-previous-line

     Move to next line and speak a summary.

12.144.1.6 emacspeak-proced-speak-args
......................................

 -- Command: emacspeak-proced-speak-args

     Speak command  invocation  for this process.

12.144.1.7 emacspeak-proced-speak-field
.......................................

 -- Command: emacspeak-proced-speak-field (field-name)

     Speak value of specified field in current line.

     (fn FIELD-NAME)

12.144.1.8 emacspeak-proced-speak-that-field
............................................

 -- Command: emacspeak-proced-speak-that-field

     Speak desired field via single keystroke.

12.144.1.9 emacspeak-proced-speak-this-field
............................................

 -- Command: emacspeak-proced-speak-this-field (&optional position)

     Speak field at specified column — defaults to current column.

     (fn &optional POSITION)


File: emacspeak.info,  Node: emacspeak-project,  Next: emacspeak-projectile,  Prev: emacspeak-proced,  Up: Emacspeak Commands And Options

12.145 emacspeak-project
========================

Speech-enable project.el


File: emacspeak.info,  Node: emacspeak-projectile,  Next: emacspeak-pronounce,  Prev: emacspeak-project,  Up: Emacspeak Commands And Options

12.146 emacspeak-projectile
===========================

PROJECTILE == ‘M-x package-install projectile’.  Project management in
Emacs.


File: emacspeak.info,  Node: emacspeak-pronounce,  Next: emacspeak-py,  Prev: emacspeak-projectile,  Up: Emacspeak Commands And Options

12.147 emacspeak-pronounce
==========================

This module implements user customizable pronunciation dictionaries for
emacspeak.  Custom pronunciations can be defined per file, per directory
and/or per major mode.  Emacspeak maintains a persistent user dictionary
upon request and loads these in new emacspeak sessions.  This module
implements the user interface to the custom dictionary as well as
providing the internal API used by the rest of emacspeak in using the
dictionary.

12.147.1 Emacspeak-Pronounce Commands
-------------------------------------

12.147.1.1 emacspeak-pronounce-clear-dictionaries
.................................................

 -- Command: emacspeak-pronounce-clear-dictionaries

     Clear all current pronunciation dictionaries.

12.147.1.2 emacspeak-pronounce-define-local-pronunciation
.........................................................

 -- Command: emacspeak-pronounce-define-local-pronunciation (word pron)

     Define buffer local pronunciation.
     Argument ‘word’ specified the word to be pronounced.
     Argument ‘pron’ specifies the new pronunciation.

     (fn WORD PRON)

12.147.1.3 emacspeak-pronounce-define-pronunciation
...................................................

 -- Command: emacspeak-pronounce-define-pronunciation

     Interactively define entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.147.1.4 emacspeak-pronounce-define-template-pronunciation
............................................................

 -- Command: emacspeak-pronounce-define-template-pronunciation

     Interactively define template entries in the pronunciation dictionaries.
     Default term to define is delimited by region.
     First loads any persistent dictionaries if not already loaded.

12.147.1.5 emacspeak-pronounce-dispatch
.......................................

 -- Command: emacspeak-pronounce-dispatch
     ‘C-e M-d’
     ‘<fn> M-d’

     Pronounce Frontend

12.147.1.6 emacspeak-pronounce-edit-pronunciations
..................................................

 -- Command: emacspeak-pronounce-edit-pronunciations (key)

     Prompt for and launch a pronunciation editor on the
     specified pronunciation dictionary key.

     (fn KEY)

12.147.1.7 emacspeak-pronounce-load-dictionaries
................................................

 -- Command: emacspeak-pronounce-load-dictionaries (&optional filename)

     Load pronunciation dictionaries.
     Optional argument FILENAME specifies the dictionary file,
     Default is emacspeak-pronounce-dictionaries-file.

     (fn &optional FILENAME)

12.147.1.8 emacspeak-pronounce-merge-dictionaries
.................................................

 -- Command: emacspeak-pronounce-merge-dictionaries (from into)

     Merge dic ‘from’ into dict ‘into’

     (fn FROM INTO)

12.147.1.9 emacspeak-pronounce-refresh-pronunciations
.....................................................

 -- Command: emacspeak-pronounce-refresh-pronunciations

     Refresh pronunciation table for current buffer.

12.147.1.10 emacspeak-pronounce-save-dictionaries
.................................................

 -- Command: emacspeak-pronounce-save-dictionaries

     Saves  pronunciation dictionaries.

12.147.1.11 emacspeak-pronounce-toggle-use-of-dictionaries
..........................................................

 -- Command: emacspeak-pronounce-toggle-use-of-dictionaries (&optional
          state)

     Toggle  pronunciation dictionaries.

     (fn &optional STATE)

12.147.1.12 emacspeak-pronounce-toggle-voice
............................................

 -- Command: emacspeak-pronounce-toggle-voice

     Toggle use of pronunciation personality.

12.147.2 emacspeak-pronounce Options
------------------------------------

 -- Variable: User Option
          emacspeak-pronounce-common-xml-namespace-uri-pronunciations
     Namespace URIs.

 -- Variable: User Option emacspeak-pronounce-dictionaries-file
     File that holds emacspeak pronunciations.

 -- Variable: User Option
          emacspeak-pronounce-internet-smileys-pronunciations
     Smileys


File: emacspeak.info,  Node: emacspeak-py,  Next: emacspeak-pydoc,  Prev: emacspeak-pronounce,  Up: Emacspeak Commands And Options

12.148 emacspeak-py
===================

This speech-enables python-mode available on sourceforge and ELPA


File: emacspeak.info,  Node: emacspeak-pydoc,  Next: emacspeak-python,  Prev: emacspeak-py,  Up: Emacspeak Commands And Options

12.149 emacspeak-pydoc
======================

PYDOC == Python Documentation Viewer


File: emacspeak.info,  Node: emacspeak-python,  Next: emacspeak-racer,  Prev: emacspeak-pydoc,  Up: Emacspeak Commands And Options

12.150 emacspeak-python
=======================

This speech-enables python-mode bundled with Emacs


File: emacspeak.info,  Node: emacspeak-racer,  Next: emacspeak-racket,  Prev: emacspeak-python,  Up: Emacspeak Commands And Options

12.151 emacspeak-racer
======================

RACER == Rust documentation and completion


File: emacspeak.info,  Node: emacspeak-racket,  Next: emacspeak-re-builder,  Prev: emacspeak-racer,  Up: Emacspeak Commands And Options

12.152 emacspeak-racket
=======================

racket-mode implements an IDE for racket, a dialect of scheme.


File: emacspeak.info,  Node: emacspeak-re-builder,  Next: emacspeak-reftex,  Prev: emacspeak-racket,  Up: Emacspeak Commands And Options

12.153 emacspeak-re-builder
===========================

Speech-enable re-builder.  Will be used to advantage in efficiently
setting up outline regexp wizards


File: emacspeak.info,  Node: emacspeak-reftex,  Next: emacspeak-related,  Prev: emacspeak-re-builder,  Up: Emacspeak Commands And Options

12.154 emacspeak-reftex
=======================

This module speech-enables refteex – reftex is a minor mode that makes
navigation of TeX documents possible via a table of contents buffer.


File: emacspeak.info,  Node: emacspeak-related,  Next: emacspeak-rg,  Prev: emacspeak-reftex,  Up: Emacspeak Commands And Options

12.155 emacspeak-related
========================

RELATED == Switch among related buffers (melpa).  Speech-enable
interactive commands.


File: emacspeak.info,  Node: emacspeak-rg,  Next: emacspeak-rmail,  Prev: emacspeak-related,  Up: Emacspeak Commands And Options

12.156 emacspeak-rg
===================

RG == Emacs front-end to ripgrep (rg).


File: emacspeak.info,  Node: emacspeak-rmail,  Next: emacspeak-rpm-spec,  Prev: emacspeak-rg,  Up: Emacspeak Commands And Options

12.157 emacspeak-rmail
======================

emacspeak extensions to rmail

12.157.1 Emacspeak-Rmail Commands
---------------------------------

12.157.1.1 emacspeak-rmail-speak-current-message-labels
.......................................................

 -- Command: emacspeak-rmail-speak-current-message-labels

     Speak labels of current message

12.157.1.2 emacspeak-rmail-summarize-current-message
....................................................

 -- Command: emacspeak-rmail-summarize-current-message

     Summarize current message


File: emacspeak.info,  Node: emacspeak-rpm-spec,  Next: emacspeak-rst,  Prev: emacspeak-rmail,  Up: Emacspeak Commands And Options

12.158 emacspeak-rpm-spec
=========================

speech-enable rpm-spec-mode –part of Emacs 21 on RH 7.3


File: emacspeak.info,  Node: emacspeak-rst,  Next: emacspeak-ruby,  Prev: emacspeak-rpm-spec,  Up: Emacspeak Commands And Options

12.159 emacspeak-rst
====================

RST == rst-mode for editing rst text files.  This module speech-enables
rst-mode.


File: emacspeak.info,  Node: emacspeak-ruby,  Next: emacspeak-rust-mode,  Prev: emacspeak-rst,  Up: Emacspeak Commands And Options

12.160 emacspeak-ruby
=====================

Provide additional advice to Ruby mode


File: emacspeak.info,  Node: emacspeak-rust-mode,  Next: emacspeak-sage,  Prev: emacspeak-ruby,  Up: Emacspeak Commands And Options

12.161 emacspeak-rust-mode
==========================

Speech-enable rust-mode


File: emacspeak.info,  Node: emacspeak-sage,  Next: emacspeak-sdcv,  Prev: emacspeak-rust-mode,  Up: Emacspeak Commands And Options

12.162 emacspeak-sage
=====================

Speech-enable ‘sage-shell-mode’.  This is a major mode for interacting
with ‘sage’, <http://www.sagemath.org/> An Open-source Mathematical
Software System.

12.162.1 Emacspeak-Sage Commands
--------------------------------

12.162.1.1 emacspeak-sage-describe-symbol
.........................................

 -- Command: emacspeak-sage-describe-symbol (s)

     Describe Sage symbol at point.

     (fn S)

12.162.1.2 emacspeak-sage-get-output
....................................

 -- Command: emacspeak-sage-get-output

     Return most recent Sage output

12.162.1.3 emacspeak-sage-get-output-as-latex
.............................................

 -- Command: emacspeak-sage-get-output-as-latex

     Return most recent Sage output as LaTeX markup.

12.162.1.4 emacspeak-sage-speak-output
......................................

 -- Command: emacspeak-sage-speak-output

     Speak last output from Sage.


File: emacspeak.info,  Node: emacspeak-sdcv,  Next: emacspeak-selectrum,  Prev: emacspeak-sage,  Up: Emacspeak Commands And Options

12.163 emacspeak-sdcv
=====================

SDCV == Stardict Dictionary Interface This module sets up Emacspeak for
use with sdcv.  You need to have command-line sdcv installed.  You can
install additional stardict dictionaries, see
https://wiki.archlinux.org/index.php/sdcv This module sets up Emacs
module sdcv to use all the installed dictionaries found on the system.


File: emacspeak.info,  Node: emacspeak-selectrum,  Next: emacspeak-ses,  Prev: emacspeak-sdcv,  Up: Emacspeak Commands And Options

12.164 emacspeak-selectrum
==========================

SELECTRUM == Flexibly select from lists.


File: emacspeak.info,  Node: emacspeak-ses,  Next: emacspeak-setup,  Prev: emacspeak-selectrum,  Up: Emacspeak Commands And Options

12.165 emacspeak-ses
====================

ses implements a simple spread sheet and is part of Emacs This module
speech-enables ses

12.165.1 Emacspeak-Ses Commands
-------------------------------

12.165.1.1 emacspeak-ses-backward-column-and-summarize
......................................................

 -- Command: emacspeak-ses-backward-column-and-summarize

     Move to previous column and summarize.

12.165.1.2 emacspeak-ses-backward-row-and-summarize
...................................................

 -- Command: emacspeak-ses-backward-row-and-summarize

     Move to previous row  and summarize.

12.165.1.3 emacspeak-ses-forward-column-and-summarize
.....................................................

 -- Command: emacspeak-ses-forward-column-and-summarize

     Move to next column and summarize.

12.165.1.4 emacspeak-ses-forward-row-and-summarize
..................................................

 -- Command: emacspeak-ses-forward-row-and-summarize

     Move to next row and summarize.

12.165.1.5 emacspeak-ses-summarize-cell
.......................................

 -- Command: emacspeak-ses-summarize-cell (cell-name)

     Summarize specified  cell.

     (fn CELL-NAME)

12.165.1.6 emacspeak-ses-summarize-current-cell
...............................................

 -- Command: emacspeak-ses-summarize-current-cell (&rest ignore)

     Summarize current cell.

     (fn &rest IGNORE)


File: emacspeak.info,  Node: emacspeak-setup,  Next: emacspeak-sgml-mode,  Prev: emacspeak-ses,  Up: Emacspeak Commands And Options

12.166 emacspeak-setup
======================

Entry point for Emacspeak.


File: emacspeak.info,  Node: emacspeak-sgml-mode,  Next: emacspeak-sh-script,  Prev: emacspeak-setup,  Up: Emacspeak Commands And Options

12.167 emacspeak-sgml-mode
==========================

emacspeak extensions to sgml mode


File: emacspeak.info,  Node: emacspeak-sh-script,  Next: emacspeak-shx,  Prev: emacspeak-sgml-mode,  Up: Emacspeak Commands And Options

12.168 emacspeak-sh-script
==========================

This module speech-enables sh-script.el


File: emacspeak.info,  Node: emacspeak-shx,  Next: emacspeak-slime,  Prev: emacspeak-sh-script,  Up: Emacspeak Commands And Options

12.169 emacspeak-shx
====================

SHX == Shell Extras For emacs


File: emacspeak.info,  Node: emacspeak-slime,  Next: emacspeak-smart-window,  Prev: emacspeak-shx,  Up: Emacspeak Commands And Options

12.170 emacspeak-slime
======================

SLIME == Superior Lisp Interaction Mode For Emacs Slime is a powerful
IDE for developing in Common Lisp and Clojure.  It’s similar but more
modern than package ILisp that I used as a graduate student when
developing AsTeR.


File: emacspeak.info,  Node: emacspeak-smart-window,  Next: emacspeak-smartparens,  Prev: emacspeak-slime,  Up: Emacspeak Commands And Options

12.171 emacspeak-smart-window
=============================

SMART-WINDOW == Smart Window switching for Emacs


File: emacspeak.info,  Node: emacspeak-smartparens,  Next: emacspeak-solitaire,  Prev: emacspeak-smart-window,  Up: Emacspeak Commands And Options

12.172 emacspeak-smartparens
============================

SMARTPARENS == Automatic insertion, wrapping and paredit-like navigation
with user defined pairs this module speech-enables smartparens.
Insertion of a matching delimiter is indicated by a short auditory icon.
Structured navigation speaks the current line with the position of point
aurally highlighted.


File: emacspeak.info,  Node: emacspeak-solitaire,  Next: emacspeak-sounds,  Prev: emacspeak-smartparens,  Up: Emacspeak Commands And Options

12.173 emacspeak-solitaire
==========================

Auditory interface to solitaire

12.173.1 Emacspeak-Solitaire Commands
-------------------------------------

12.173.1.1 emacspeak-solitaire-show-column
..........................................

 -- Command: emacspeak-solitaire-show-column

     Audio format current column.

12.173.1.2 emacspeak-solitaire-show-row
.......................................

 -- Command: emacspeak-solitaire-show-row

     Audio format current row.

12.173.1.3 emacspeak-solitaire-speak-coordinates
................................................

 -- Command: emacspeak-solitaire-speak-coordinates

     Speak coordinates of current position

12.173.1.4 emacspeak-solitaire-speak-row
........................................

 -- Command: emacspeak-solitaire-speak-row

     Speak current row.

12.173.1.5 emacspeak-solitaire-speak-stones
...........................................

 -- Command: emacspeak-solitaire-speak-stones

     Speak number of stones remaining.


File: emacspeak.info,  Node: emacspeak-sounds,  Next: emacspeak-speak,  Prev: emacspeak-solitaire,  Up: Emacspeak Commands And Options

12.174 emacspeak-sounds
=======================

This module provides the interface for generating auditory icons in
emacspeak.

12.174.1 Emacspeak-Sounds Commands
----------------------------------

12.174.1.1 emacspeak-audio-setup
................................

 -- Command: emacspeak-audio-setup (&optional prefix)
     ‘C-e (’
     ‘<fn> (’

     Call amixer  command.

     (fn &optional PREFIX)

12.174.1.2 emacspeak-sounds-select-theme
........................................

 -- Command: emacspeak-sounds-select-theme (theme)
     ‘C-e )’
     ‘<fn> )’

     Select theme for auditory icons.

     (fn THEME)

12.174.1.3 emacspeak-toggle-auditory-icons
..........................................

 -- Command: emacspeak-toggle-auditory-icons (&optional prefix)
     ‘C-e C-a’
     ‘<fn> C-a’

     Toggle use of auditory icons.
     Optional interactive PREFIX arg toggles global value.

     (fn &optional PREFIX)

12.174.2 emacspeak-sounds Options
---------------------------------

 -- Variable: User Option emacspeak-play-args
     Set this to nil if using paplay from pulseaudio.

 -- Variable: User Option emacspeak-play-program
     Play program.

 -- Variable: User Option emacspeak-sounds-default-theme
     Default theme for auditory icons.


File: emacspeak.info,  Node: emacspeak-speak,  Next: emacspeak-speedbar,  Prev: emacspeak-sounds,  Up: Emacspeak Commands And Options

12.175 emacspeak-speak
======================

This module defines the core speech services used by emacspeak.  It
depends on the speech server interface modules It protects other parts
of emacspeak from becoming dependent on the speech server modules

12.175.1 Emacspeak-Speak Commands
---------------------------------

12.175.1.1 emacspeak–choose-completion
......................................

 -- Command: emacspeak--choose-completion

     Choose the completion at point.

12.175.1.2 emacspeak–persist-variable
.....................................

 -- Command: emacspeak--persist-variable (var file)

     Persist variable  ‘var’ to file ‘FILE’.
     Arranges for ‘VAR’ to be restored when ‘file’ is loaded.

     (fn VAR FILE)

12.175.1.3 emacspeak-blink-matching-open
........................................

 -- Command: emacspeak-blink-matching-open

     Move cursor momentarily to the beginning of the sexp before point.
     Also display match context in minibuffer.

12.175.1.4 emacspeak-completions-move-to-completion-group
.........................................................

 -- Command: emacspeak-completions-move-to-completion-group

     Move to group of choices beginning with character last
     typed. If no such group exists, then we try to search for that
     char, or dont move.

12.175.1.5 emacspeak-describe-tapestry
......................................

 -- Command: emacspeak-describe-tapestry (&optional details)
     ‘C-e M-t’
     ‘<fn> M-t’

     Describe the current layout of visible buffers in current frame.
     Use interactive prefix arg to get coordinate positions of the
     displayed buffers.

     (fn &optional DETAILS)

12.175.1.6 emacspeak-execute-repeatedly
.......................................

 -- Command: emacspeak-execute-repeatedly (command)

     Execute COMMAND repeatedly.

     (fn COMMAND)

12.175.1.7 emacspeak-goto-percent
.................................

 -- Command: emacspeak-goto-percent (percent)
     ‘C-e M-%’
     ‘<fn> M-%’

     Move to end  PERCENT of buffer like in View mode.
     Display is centered at point.
     Also set the mark at the position where point was.

     (fn PERCENT)

12.175.1.8 emacspeak-mark-backward-mark
.......................................

 -- Command: emacspeak-mark-backward-mark
     ‘C-<up>’

     Cycle backward through the mark ring.
     To cycle forward, use pop-to-mark-command bound to C-<down>

12.175.1.9 emacspeak-minibuffer-choose-completion
.................................................

 -- Command: emacspeak-minibuffer-choose-completion

     Choose current completion.

12.175.1.10 emacspeak-minibuffer-next-completion
................................................

 -- Command: emacspeak-minibuffer-next-completion

     Move to next available minibuffer completion.

12.175.1.11 emacspeak-minibuffer-previous-completion
....................................................

 -- Command: emacspeak-minibuffer-previous-completion

     Move to previous available minibuffer completion.

12.175.1.12 emacspeak-open-info
...............................

 -- Command: emacspeak-open-info
     ‘C-e TAB’
     ‘<fn> TAB’

     Open Emacspeak Info Manual.

12.175.1.13 emacspeak-owindow-next-line
.......................................

 -- Command: emacspeak-owindow-next-line (count)
     ‘ESC <down>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT can specify number of lines to move.

     (fn COUNT)

12.175.1.14 emacspeak-owindow-previous-line
...........................................

 -- Command: emacspeak-owindow-previous-line (count)
     ‘ESC <up>’

     Move to the next line in the other window and speak it.
     Numeric prefix arg COUNT specifies number of lines to move.

     (fn COUNT)

12.175.1.15 emacspeak-owindow-scroll-down
.........................................

 -- Command: emacspeak-owindow-scroll-down
     ‘ESC <prior>’

     Scroll down  the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.175.1.16 emacspeak-owindow-scroll-up
.......................................

 -- Command: emacspeak-owindow-scroll-up
     ‘ESC <next>’

     Scroll up the window that command ‘other-window’ would move to.
     Speak the window contents after scrolling.

12.175.1.17 emacspeak-owindow-speak-line
........................................

 -- Command: emacspeak-owindow-speak-line

     Speak the current line in the other window.

12.175.1.18 emacspeak-read-next-line
....................................

 -- Command: emacspeak-read-next-line (&optional arg)
     ‘C-e <down>’
     ‘<fn> <down>’

     Read next line, specified by an offset, without moving.
     Default is to read the next line.

     (fn &optional ARG)

12.175.1.19 emacspeak-read-previous-line
........................................

 -- Command: emacspeak-read-previous-line (&optional arg)
     ‘C-e <up>’
     ‘<fn> <up>’

     Read previous line, specified by an offset, without moving.
     Default is to read the previous line.

     (fn &optional ARG)

12.175.1.20 emacspeak-select-window-by-name
...........................................

 -- Command: emacspeak-select-window-by-name (buffer-name)
     ‘C-e W’
     ‘<fn> W’

     Select window by the name of the buffer it displays.
     This is useful when using modes like ECB or the new GDB UI where
       you want to preserve the window layout
     but quickly switch to a window by name.

     (fn BUFFER-NAME)

12.175.1.21 emacspeak-shell-command
...................................

 -- Command: emacspeak-shell-command (command)
     ‘C-e $’
     ‘<fn> $’

     Run shell command COMMANDAND speak its output.

     (fn COMMAND)

12.175.1.22 emacspeak-silence
.............................

 -- Command: emacspeak-silence
     ‘<silence>’

     Silence is golden. Stop speech, and pause/resume any media
     streams. Runs ‘emacspeak-silence-hook’ which can be used to
     configure which media players get silenced or paused/resumed.

12.175.1.23 emacspeak-speak-buffer
..................................

 -- Command: emacspeak-speak-buffer (&optional arg)
     ‘C-e b’
     ‘<fn> b’

     Speak current buffer  contents.
     With prefix ARG, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.175.1.24 emacspeak-speak-buffer-filename
...........................................

 -- Command: emacspeak-speak-buffer-filename (&optional filename)
     ‘C-e f’
     ‘<fn> f’

     Speak name of file being visited in current buffer.
     Speak default directory if invoked in a dired buffer, or when the
     buffer is not visiting any file.  Interactive prefix arg
     ‘filename’ speaks only the final path component.  The result is
     put in the kill ring for convenience.

     (fn &optional FILENAME)

12.175.1.25 emacspeak-speak-buffer-interactively
................................................

 -- Command: emacspeak-speak-buffer-interactively
     ‘C-e B’
     ‘<fn> B’

     Speak the start of, rest of, or the entire buffer.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire buffer.

12.175.1.26 emacspeak-speak-char
................................

 -- Command: emacspeak-speak-char (&optional prefix)
     ‘C-e c’
     ‘<fn> c’

     Speak character under point.
     Pronounces character phonetically unless  called with a PREFIX arg.

     (fn &optional PREFIX)

12.175.1.27 emacspeak-speak-char-name
.....................................

 -- Command: emacspeak-speak-char-name (char)

     tell me what this is

     (fn CHAR)

12.175.1.28 emacspeak-speak-completions-if-available
....................................................

 -- Command: emacspeak-speak-completions-if-available

     Speak completions if available.

12.175.1.29 emacspeak-speak-continuously
........................................

 -- Command: emacspeak-speak-continuously
     ‘C-e RET’
     ‘<fn> RET’

     Speak a buffer continuously.
     First prompts using the minibuffer for the kind of action to
     perform after speaking each chunk.  E.G.  speak a line at a time
     etc.  Speaking commences at current buffer position.  Pressing
     C-g breaks out, leaving point on last chunk that
     was spoken.  Any other key continues to speak the buffer.

12.175.1.30 emacspeak-speak-current-column
..........................................

 -- Command: emacspeak-speak-current-column
     ‘C-e =’
     ‘<fn> =’

     Speak the current column.

12.175.1.31 emacspeak-speak-current-kill
........................................

 -- Command: emacspeak-speak-current-kill (&optional count)
     ‘C-e k’
     ‘<fn> k’

     Speak the current kill.
     This is what will be yanked by the next S-<insertchar>. Prefix numeric
     arg, COUNT, specifies that the text that will be yanked as a
     result of a S-<insertchar> followed by count-1 M-x yank-pop be
     spoken. The kill number that is spoken says what numeric prefix
     arg to give to command yank.

     (fn &optional COUNT)

12.175.1.32 emacspeak-speak-current-mark
........................................

 -- Command: emacspeak-speak-current-mark (count)
     ‘C-e C-SPC’
     ‘C-e C-@’
     ‘<fn> C-SPC’
     ‘<fn> C-@’

     Speak the line containing the mark.
     With no argument, speaks the line containing the mark–this is
     where ‘exchange-point-and-mark’ C-x C-x would
     jump.  Numeric prefix arg ’COUNT’ speaks line containing mark ’n’
     where ’n’ is one less than the number of times one has to jump
     using ‘set-mark-command’ to get to this marked position.  The
     location of the mark is indicated by an aural highlight.

     (fn COUNT)

12.175.1.33 emacspeak-speak-current-percentage
..............................................

 -- Command: emacspeak-speak-current-percentage
     ‘C-e %’
     ‘<fn> %’

     Announce the percentage into the current buffer.

12.175.1.34 emacspeak-speak-current-window
..........................................

 -- Command: emacspeak-speak-current-window

     Speak contents of current window.
     Speaks entire window irrespective of point.

12.175.1.35 emacspeak-speak-date-as-seconds
...........................................

 -- Command: emacspeak-speak-date-as-seconds (time)

     Read time value as a human-readable string, return seconds.
     Seconds value is also placed in the kill-ring.

     (fn TIME)

12.175.1.36 emacspeak-speak-face-backward
.........................................

 -- Command: emacspeak-speak-face-backward

     Property search for face at point see M-x text-property-search-backward

12.175.1.37 emacspeak-speak-face-browse
.......................................

 -- Command: emacspeak-speak-face-browse
     ‘C-e C-.’
     ‘<fn> C-.’

     Use C-f and C-b to browse by current face.

12.175.1.38 emacspeak-speak-face-forward
........................................

 -- Command: emacspeak-speak-face-forward

     Property search for face — see M-x text-property-search-forward

12.175.1.39 emacspeak-speak-field
.................................

 -- Command: emacspeak-speak-field

     Speak current field.

12.175.1.40 emacspeak-speak-header-line
.......................................

 -- Command: emacspeak-speak-header-line
     ‘C-e SPC’
     ‘<fn> SPC’

     Speak header line if set.

12.175.1.41 emacspeak-speak-help
................................

 -- Command: emacspeak-speak-help (&optional arg)
     ‘C-e h’
     ‘<fn> h’

     Speak help buffer if one present.
     With prefix arg, speaks the rest of the buffer from point.
     Negative prefix arg speaks from start of buffer to point.

     (fn &optional ARG)

12.175.1.42 emacspeak-speak-help-interactively
..............................................

 -- Command: emacspeak-speak-help-interactively

     Speak the start of, rest of, or the entire help.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire help.

12.175.1.43 emacspeak-speak-line
................................

 -- Command: emacspeak-speak-line (&optional arg)
     ‘C-e l’
     ‘<fn> l’

     Speaks current line.  With prefix ARG, speaks the rest of the
     line from point.  Negative prefix optional arg speaks from start
     of line to point.  Indicates indentation with a spoken message if
     audio indentation is on see ‘emacspeak-toggle-audio-indentation’
     bound to C-e d i.  Indicates
     position of point with an aural highlight if option
     ‘emacspeak-show-point’ is on –see command
     ‘emacspeak-toggle-show-point’ bound to
     C-e C-d.  Lines that start hidden blocks
     of text, e.g.  outline header lines, or header lines of blocks
     created by command ‘emacspeak-hide-or-expose-block’ are indicated
     with auditory icon ellipses. Presence of additional
     presentational overlays (created via property display,
     before-string, or after-string) is indicated with auditory icon
     ‘more’.  These can then be spoken using command
     C-e C-M-l.

     (fn &optional ARG)

12.175.1.44 emacspeak-speak-line-interactively
..............................................

 -- Command: emacspeak-speak-line-interactively
     ‘C-e L’
     ‘<fn> L’

     Speak the start of, rest of, or the entire line.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire line.

12.175.1.45 emacspeak-speak-line-set-column-filter
..................................................

 -- Command: emacspeak-speak-line-set-column-filter (filter)
     ‘C-e |’
     ‘<fn> |’

     Set up filter for selectively speaking or ignoring portions of lines.
     The filter is specified as a list of pairs.
     For example, to filter  columns 1 – 10 and 20 – 25,
     specify filter as
     ((0 9) (20 25)). Filter settings are persisted across sessions.  A
     persisted filter is used as the default when prompting for a filter.
     This allows one to accumulate a set of filters for specific files like
     /var/adm/messages and /var/adm/maillog over time.
     Option emacspeak-speak-line-invert-filter determines
     the sense of the filter.

     (fn FILTER)

12.175.1.46 emacspeak-speak-load-directory-settings
...................................................

 -- Command: emacspeak-speak-load-directory-settings (&optional dir)
     ‘C-e x d’
     ‘<fn> x d’

     Load a directory specific Emacspeak settings file.
     This is typically used to load up settings that are specific to
     an electronic book consisting of many files in the same
     directory.

     (fn &optional DIR)

12.175.1.47 emacspeak-speak-message-again
.........................................

 -- Command: emacspeak-speak-message-again (&optional
          from-message-cache)
     ‘C-e a’
     ‘<fn> a’

     Speak the last message from Emacs once again.
     The message is also placed in the kill ring for convenient yanking

     (fn &optional FROM-MESSAGE-CACHE)

12.175.1.48 emacspeak-speak-message-at-time
...........................................

 -- Command: emacspeak-speak-message-at-time (time message)
     ‘C-e @’
     ‘<fn> @’

     Speak message at specified time.
     Provides simple stop watch functionality.
     See documentation for command run-at-time for details on time-spec.

     (fn TIME MESSAGE)

12.175.1.49 emacspeak-speak-microseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-microseconds-since-epoch (ms)

     Speaks time value specified as microseconds  since epoch.

     (fn MS)

12.175.1.50 emacspeak-speak-milliseconds-since-epoch
....................................................

 -- Command: emacspeak-speak-milliseconds-since-epoch (ms)

     Speaks time value specified as milliseconds  since epoch..

     (fn MS)

12.175.1.51 emacspeak-speak-minor-mode-line
...........................................

 -- Command: emacspeak-speak-minor-mode-line (&optional log-msg)
     ‘C-e M’
     ‘<fn> M’

     Speak the minor mode-information.
     Optional interactive prefix arg ‘log-msg’ logs spoken info to
     *Messages*.

     (fn &optional LOG-MSG)

12.175.1.52 emacspeak-speak-mode-line
.....................................

 -- Command: emacspeak-speak-mode-line (&optional buffer-info)
     ‘C-e m’
     ‘<fn> m’

     Speak the mode-line.
     Speaks header-line if that is set when called non-interactively.
     Interactive prefix arg speaks buffer info.

     (fn &optional BUFFER-INFO)

12.175.1.53 emacspeak-speak-next-field
......................................

 -- Command: emacspeak-speak-next-field

     Move to and speak next field.

12.175.1.54 emacspeak-speak-other-buffer
........................................

 -- Command: emacspeak-speak-other-buffer (buffer)
     ‘C-e M-b’
     ‘<fn> M-b’

     Speak specified buffer.
     Useful to listen to a buffer without switching  contexts.

     (fn BUFFER)

12.175.1.55 emacspeak-speak-overlay-properties
..............................................

 -- Command: emacspeak-speak-overlay-properties
     ‘C-e C-M-l’
     ‘<fn> C-M-l’

     Speak display, before-string or after-string property if any.

12.175.1.56 emacspeak-speak-page
................................

 -- Command: emacspeak-speak-page (&optional arg)
     ‘C-e [’
     ‘<fn> [’

     Speak a page.
     With prefix ARG, speaks rest of current page.
     Negative prefix arg will read from start of current page to point.

     (fn &optional ARG)

12.175.1.57 emacspeak-speak-page-interactively
..............................................

 -- Command: emacspeak-speak-page-interactively
     ‘C-e ]’
     ‘<fn> ]’

     Speak the start of, rest of, or the entire page.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire page.

12.175.1.58 emacspeak-speak-paragraph
.....................................

 -- Command: emacspeak-speak-paragraph (&optional arg)
     ‘C-e p’
     ‘<fn> p’

     Speak paragraph.
     With prefix arg, speaks rest of current paragraph.
     Negative prefix arg will read from start of current paragraph to point.

     (fn &optional ARG)

12.175.1.59 emacspeak-speak-paragraph-interactively
...................................................

 -- Command: emacspeak-speak-paragraph-interactively
     ‘C-e P’
     ‘<fn> P’

     Speak the start of, rest of, or the entire paragraph.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire paragraph.

12.175.1.60 emacspeak-speak-preceding-char
..........................................

 -- Command: emacspeak-speak-preceding-char

     Speak character before point.

12.175.1.61 emacspeak-speak-predefined-window
.............................................

 -- Command: emacspeak-speak-predefined-window (&optional arg)
     ‘C-e 9’
     ‘C-e 8’
     ‘C-e 7’
     ‘C-e 6’
     ‘C-e 5’
     ‘C-e 4’
     ‘C-e 3’
     ‘C-e 2’
     ‘C-e 1’
     ‘C-e 0’
     ‘<fn> 9’
     ‘<fn> 8’
     ‘<fn> 7’
     ‘<fn> 6’
     ‘<fn> 5’
     ‘<fn> 4’
     ‘<fn> 3’
     ‘<fn> 2’
     ‘<fn> 1’
     ‘<fn> 0’

     Speak one of the first 10 windows on the screen, 0 is current window.
     Speaks entire window irrespective of point.  Semantics of ‘other’
     is the same as for the Emacs builtin ‘other-window’.

     (fn &optional ARG)

12.175.1.62 emacspeak-speak-previous-field
..........................................

 -- Command: emacspeak-speak-previous-field

     Move to previous field and speak it.

12.175.1.63 emacspeak-speak-range
.................................

 -- Command: emacspeak-speak-range (&optional prop)

     Speak and return  range at point

     (fn &optional PROP)

12.175.1.64 emacspeak-speak-rectangle
.....................................

 -- Command: emacspeak-speak-rectangle (start end)
     ‘C-e R’
     ‘<fn> R’

     Speak a rectangle of text.
     Rectangle is delimited by point and mark.  When call from a
     program, arguments specify the START and END of the rectangle.

     (fn START END)

12.175.1.65 emacspeak-speak-region
..................................

 -- Command: emacspeak-speak-region (start end)
     ‘C-e r’
     ‘<fn> r’

     Speak region bounded by start and end.

     (fn START END)

12.175.1.66 emacspeak-speak-rest-of-buffer
..........................................

 -- Command: emacspeak-speak-rest-of-buffer
     ‘C-e n’
     ‘<fn> n’

     Speak remainder of the buffer starting at point

12.175.1.67 emacspeak-speak-run-shell-command
.............................................

 -- Command: emacspeak-speak-run-shell-command (command &optional
          read-as-csv)
     ‘C-e !’
     ‘<fn> !’

     Invoke shell COMMAND and display its output as a table. The
     results are placed in a buffer in Emacspeak’s table browsing
     mode. Optional interactive prefix arg read-as-csv interprets the
     result as csv. . Use this for running shell commands that produce
     tabulated output. This command should be used for shell commands
     that produce tabulated output that works with Emacspeak’s table
     recognizer. Verify this first by running the command in a shell
     and executing command ‘emacspeak-table-display-table-in-region’
     normally bound to C-e M-i.

     (fn COMMAND &optional READ-AS-CSV)

12.175.1.68 emacspeak-speak-seconds-since-epoch
...............................................

 -- Command: emacspeak-speak-seconds-since-epoch (seconds)

     Speaks time value specified as seconds  since epoch.

     (fn SECONDS)

12.175.1.69 emacspeak-speak-sentence
....................................

 -- Command: emacspeak-speak-sentence (&optional arg)

     Speak current sentence.
     With prefix ARG, speaks the rest of the sentence  from point.
     Negative prefix arg speaks from start of sentence to point.

     (fn &optional ARG)

12.175.1.70 emacspeak-speak-sexp
................................

 -- Command: emacspeak-speak-sexp (&optional arg)
     ‘C-e "’
     ‘<fn> "’

     Speak current sexp.
     With prefix ARG, speaks the rest of the sexp  from point.
     Negative prefix arg speaks from start of sexp to point.

     (fn &optional ARG)

12.175.1.71 emacspeak-speak-sexp-interactively
..............................................

 -- Command: emacspeak-speak-sexp-interactively

     Speak the start of, rest of, or the entire sexp.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire sexp.

12.175.1.72 emacspeak-speak-skim-buffer
.......................................

 -- Command: emacspeak-speak-skim-buffer
     ‘C-e C-<return>’
     ‘<fn> C-<return>’

     Skim the current buffer  a paragraph at a time.

12.175.1.73 emacspeak-speak-spaces-at-point
...........................................

 -- Command: emacspeak-speak-spaces-at-point
     ‘C-e C-M-SPC’
     ‘C-e C-M-@’
     ‘<fn> C-M-SPC’
     ‘<fn> C-M-@’

     Speak the white space at point.

12.175.1.74 emacspeak-speak-spell-current-word
..............................................

 -- Command: emacspeak-speak-spell-current-word

     Spell word at  point.

12.175.1.75 emacspeak-speak-time
................................

 -- Command: emacspeak-speak-time (&optional world)
     ‘C-e t’
     ‘<fn> t’

     Speak the time.
     Spoken time  is available via C-h N.
     Optional interactive prefix arg ‘C-u’invokes world clock.
     Timezone is specified using minibuffer completion.
     Second interactive prefix sets clock to new timezone.

     (fn &optional WORLD)

12.175.1.76 emacspeak-speak-version
...................................

 -- Command: emacspeak-speak-version (&optional speak-rev)
     ‘C-e V’
     ‘<fn> V’

     Announce version information for running emacspeak.
     Optional interactive prefix arg ‘speak-rev’ speaks only the Git revision.

     (fn &optional SPEAK-REV)

12.175.1.77 emacspeak-speak-visual-line
.......................................

 -- Command: emacspeak-speak-visual-line

     Speaks current visual line.
     Cues the start of a physical line with auditory icon ‘left’.

12.175.1.78 emacspeak-speak-voice-annotate-paragraphs
.....................................................

 -- Command: emacspeak-speak-voice-annotate-paragraphs

     Locate paragraphs and voice annotate the first word.
     Here, paragraph is taken to mean a chunk of text preceded by a blank line.
     Useful to do this before you listen to an entire buffer.

12.175.1.79 emacspeak-speak-which-function
..........................................

 -- Command: emacspeak-speak-which-function
     ‘C-e M-w’
     ‘<fn> M-w’

     Speak which function we are on.  Uses which-function from
     which-func without turning that mode on.

12.175.1.80 emacspeak-speak-window-information
..............................................

 -- Command: emacspeak-speak-window-information
     ‘C-e C-w’
     ‘<fn> C-w’

     Speaks information about current window.

12.175.1.81 emacspeak-speak-word
................................

 -- Command: emacspeak-speak-word (&optional arg)
     ‘C-e w’
     ‘<fn> w’

     Speak current word.
     With prefix ARG, speaks the rest of the word from point.
     Negative prefix arg speaks from start of word to point.
     If executed  on the same buffer position a second time, the word is
     spelled out  instead of being spoken.

     (fn &optional ARG)

12.175.1.82 emacspeak-speak-word-interactively
..............................................

 -- Command: emacspeak-speak-word-interactively

     Speak the start of, rest of, or the entire word.
     ’s’ to speak the start.
     ’r’ to speak the rest.
     any other key to speak entire word.

12.175.1.83 emacspeak-speak-world-clock
.......................................

 -- Command: emacspeak-speak-world-clock (zone &optional set)

     Display current date and time  for specified zone.
     Optional second arg ‘set’ sets the TZ environment variable as well.

     (fn ZONE &optional SET)

12.175.1.84 emacspeak-switch-to-reference-buffer
................................................

 -- Command: emacspeak-switch-to-reference-buffer

     Switch back to buffer that generated completions.

12.175.1.85 emacspeak-toggle-action-mode
........................................

 -- Command: emacspeak-toggle-action-mode (&optional prefix)

     Toggle state of  Emacspeak  action mode.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.86 emacspeak-toggle-audio-indentation
..............................................

 -- Command: emacspeak-toggle-audio-indentation (&optional prefix)
     ‘C-e d i’
     ‘<fn> d i’

     Toggle state of  Emacspeak  audio indentation.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Specifying the method of indentation as ‘tones’
     results in the Dectalk producing a tone whose length is a function of the
     line’s indentation.  Specifying ‘speak’
     results in the number of initial spaces being spoken.

12.175.1.87 emacspeak-toggle-character-echo
...........................................

 -- Command: emacspeak-toggle-character-echo (&optional prefix)
     ‘C-e d k’
     ‘<fn> d k’

     Toggle state of  Emacspeak  character echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.88 emacspeak-toggle-header-line
........................................

 -- Command: emacspeak-toggle-header-line

     Toggle Emacspeak’s default header line.

12.175.1.89 emacspeak-toggle-line-echo
......................................

 -- Command: emacspeak-toggle-line-echo (&optional prefix)
     ‘C-e d l’
     ‘<fn> d l’

     Toggle state of  Emacspeak  line echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.90 emacspeak-toggle-mail-alert
.......................................

 -- Command: emacspeak-toggle-mail-alert (&optional prefix)
     ‘C-e M-m’
     ‘<fn> M-m’

     Toggle state of  Emacspeak  mail alert.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.
     Turning on this option results in Emacspeak producing an auditory icon
     indicating the arrival  of new mail when displaying the mode line.

12.175.1.91 emacspeak-toggle-show-point
.......................................

 -- Command: emacspeak-toggle-show-point (&optional prefix)
     ‘C-e C-d’
     ‘<fn> C-d’

     Toggle state of  Emacspeak-show-point.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.92 emacspeak-toggle-speak-line-invert-filter
.....................................................

 -- Command: emacspeak-toggle-speak-line-invert-filter (&optional
          prefix)
     ‘C-e \’
     ‘<fn> \’

     Toggle state of   how column filter is interpreted.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.93 emacspeak-toggle-speak-messages
...........................................

 -- Command: emacspeak-toggle-speak-messages (&optional prefix)
     ‘C-e q’
     ‘<fn> q’

     Toggle  state of whether emacspeak echoes messages.

12.175.1.94 emacspeak-toggle-word-echo
......................................

 -- Command: emacspeak-toggle-word-echo (&optional prefix)
     ‘C-e d w’
     ‘<fn> d w’

     Toggle state of  Emacspeak  word echo.
     Interactive PREFIX arg means toggle  the global default value, and then set the
     current local  value to the result.

12.175.1.95 emacspeak-view-notifications
........................................

 -- Command: emacspeak-view-notifications
     ‘C-h N’
     ‘<f1> N’
     ‘<help> N’

     Display notifications.

12.175.1.96 emacspeak-zap-tts
.............................

 -- Command: emacspeak-zap-tts
     ‘C-e d z’
     ‘<fn> d z’

     Send this command to the TTS directly.

12.175.2 emacspeak-speak Options
--------------------------------

 -- Variable: User Option emacspeak-audio-indentation
     Option indicating if line indentation is cued.  You can use command
     ‘emacspeak-toggle-audio-indentation’ bound to C-e d i to toggle
     this setting.

 -- Variable: User Option emacspeak-character-echo
     If t, then emacspeak echoes characters as you type.  You can use
     C-e d k to toggle this setting.

 -- Variable: User Option emacspeak-line-echo
     If t, then emacspeak echoes lines as you type.  You can use C-e d l
     to set this option.

 -- Variable: User Option emacspeak-mail-alert
     If t, emacspeak will alert you about newly arrived mail with an
     auditory icon when displaying the mode line.  You can use command
     ‘emacspeak-toggle-mail-alert’ bound to C-e M-m to set this option.

 -- Variable: User Option emacspeak-mail-alert-interval
     Interval in seconds between mail alerts for the same pending
     message.

 -- Variable: User Option emacspeak-mail-spool-file
     Mail spool file examined to alert you about newly arrived mail.

 -- Variable: User Option emacspeak-silence-hook
     Functions run after emacspeak-silence is called.

 -- Variable: User Option emacspeak-speak-filter-persistent-store
     File where emacspeak filters are persisted.

 -- Variable: User Option emacspeak-speak-messages
     Option indicating if messages are spoken.  If nil, emacspeak will
     not speak messages as they are echoed to the message area.  You can
     use command ‘emacspeak-toggle-speak-messages’ bound to C-e q.

 -- Variable: User Option emacspeak-speak-time-format-string
     Format string that specifies how the time should be spoken.  See
     the documentation for function ‘format-time-string’

 -- Variable: User Option emacspeak-speak-zoneinfo-directory
     Directory containing timezone data.

 -- Variable: User Option emacspeak-word-echo
     If t, then emacspeak echoes words as you type.  You can use C-e d w
     to toggle this option.


File: emacspeak.info,  Node: emacspeak-speedbar,  Next: emacspeak-sql,  Prev: emacspeak-speak,  Up: Emacspeak Commands And Options

12.176 emacspeak-speedbar
=========================

This module advises speedbar.el for use with Emacs.  The latest speedbar
can be obtained from ftp://ftp.ultranet.com/pub/zappo/ This module
ensures that speedbar works smoothly outside a windowing system in
addition to speech enabling all interactive commands.  Emacspeak also
adds an Emacspeak environment specific entry point to speedbar
–emacspeak-speedbar-goto-speedbar– and binds this

12.176.1 Emacspeak-Speedbar Commands
------------------------------------

12.176.1.1 emacspeak-speedbar-click
...................................

 -- Command: emacspeak-speedbar-click

     Does the equivalent of the mouse click from the keyboard

12.176.1.2 emacspeak-speedbar-goto-speedbar
...........................................

 -- Command: emacspeak-speedbar-goto-speedbar

     Switch to the speedbar


File: emacspeak.info,  Node: emacspeak-sql,  Next: emacspeak-sudoku,  Prev: emacspeak-speedbar,  Up: Emacspeak Commands And Options

12.177 emacspeak-sql
====================

This module speech enables sql-mode– available from the Emacs package
archive.  sql-mode.el implemented by the above package sets up an Emacs
to SQL interface where you can interactively evaluate SQL expressions.


File: emacspeak.info,  Node: emacspeak-sudoku,  Next: emacspeak-supercite,  Prev: emacspeak-sql,  Up: Emacspeak Commands And Options

12.178 emacspeak-sudoku
=======================

Playing SuDoku using speech output.  Written to discover what type of
feedback one needs for this task.  See
http://emacspeak.blogspot.com/2006/02/playing-sudoku-using-auditory-feedback.html

12.178.1 Emacspeak-Sudoku Commands
----------------------------------

12.178.1.1 emacspeak-sudoku-board-columns-summarize
...................................................

 -- Command: emacspeak-sudoku-board-columns-summarize

     Summarize columns — speaks number of remaining cells.

12.178.1.2 emacspeak-sudoku-board-distribution-summarize
........................................................

 -- Command: emacspeak-sudoku-board-distribution-summarize

     Shows distribution of filled numbers.

12.178.1.3 emacspeak-sudoku-board-rows-summarize
................................................

 -- Command: emacspeak-sudoku-board-rows-summarize

     Summarize rows — speaks number of remaining cells.

12.178.1.4 emacspeak-sudoku-board-sub-squares-summarize
.......................................................

 -- Command: emacspeak-sudoku-board-sub-squares-summarize

     Summarize sub-squares — speaks number of remaining cells.

12.178.1.5 emacspeak-sudoku-board-summarizer
............................................

 -- Command: emacspeak-sudoku-board-summarizer

     Dispatch to  appropriate summarizer.

     d   Number Distribution
     r   Row Distribution
     c   Column Distribution
     s   Sub-square Distribution.


12.178.1.6 emacspeak-sudoku-down-sub-square
...........................................

 -- Command: emacspeak-sudoku-down-sub-square

     Move to top-left corner of  sub-square below current one.

12.178.1.7 emacspeak-sudoku-erase-current-column
................................................

 -- Command: emacspeak-sudoku-erase-current-column

     Erase current column.

12.178.1.8 emacspeak-sudoku-erase-current-row
.............................................

 -- Command: emacspeak-sudoku-erase-current-row

     Erase current row.

12.178.1.9 emacspeak-sudoku-erase-current-sub-square
....................................................

 -- Command: emacspeak-sudoku-erase-current-sub-square

     Erase current sub-square.

12.178.1.10 emacspeak-sudoku-hint
.................................

 -- Command: emacspeak-sudoku-hint

     Provide hint for current cell.

12.178.1.11 emacspeak-sudoku-history-pop
........................................

 -- Command: emacspeak-sudoku-history-pop

     Pop saved state off stack and redraw board.

12.178.1.12 emacspeak-sudoku-history-push
.........................................

 -- Command: emacspeak-sudoku-history-push

     Push current state on to history stack.

12.178.1.13 emacspeak-sudoku-how-many-remaining
...............................................

 -- Command: emacspeak-sudoku-how-many-remaining

     Speak number of remaining squares to fill.

12.178.1.14 emacspeak-sudoku-next-sub-square
............................................

 -- Command: emacspeak-sudoku-next-sub-square

     Move to top-left corner of next sub-square.

12.178.1.15 emacspeak-sudoku-previous-sub-square
................................................

 -- Command: emacspeak-sudoku-previous-sub-square

     Move to top-left corner of previous sub-square.

12.178.1.16 emacspeak-sudoku-speak-current-cell-coordinates
...........................................................

 -- Command: emacspeak-sudoku-speak-current-cell-coordinates

     speak current cell coordinates.

12.178.1.17 emacspeak-sudoku-speak-current-cell-value
.....................................................

 -- Command: emacspeak-sudoku-speak-current-cell-value

     Speak value in current cell.

12.178.1.18 emacspeak-sudoku-speak-current-column
.................................................

 -- Command: emacspeak-sudoku-speak-current-column

     Speak current column.

12.178.1.19 emacspeak-sudoku-speak-current-row
..............................................

 -- Command: emacspeak-sudoku-speak-current-row

     Speak current row.

12.178.1.20 emacspeak-sudoku-speak-current-sub-square
.....................................................

 -- Command: emacspeak-sudoku-speak-current-sub-square

     Speak current sub-square.

12.178.1.21 emacspeak-sudoku-speak-remaining-in-column
......................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-column

     Speaks number of remaining cells in current column.

12.178.1.22 emacspeak-sudoku-speak-remaining-in-row
...................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-row

     Speaks number of remaining cells in current row.

12.178.1.23 emacspeak-sudoku-speak-remaining-in-sub-square
..........................................................

 -- Command: emacspeak-sudoku-speak-remaining-in-sub-square

     Speaks number of remaining cells in current sub-square.

12.178.1.24 emacspeak-sudoku-up-sub-square
..........................................

 -- Command: emacspeak-sudoku-up-sub-square

     Move to top-left corner of  sub-square above current one.


File: emacspeak.info,  Node: emacspeak-supercite,  Next: emacspeak-syslog,  Prev: emacspeak-sudoku,  Up: Emacspeak Commands And Options

12.179 emacspeak-supercite
==========================

Speech-enable supercite.


File: emacspeak.info,  Node: emacspeak-syslog,  Next: emacspeak-tab-bar,  Prev: emacspeak-supercite,  Up: Emacspeak Commands And Options

12.180 emacspeak-syslog
=======================

SYSLOG-MODE == Working with various log files.  Install package
syslog-mode from melpa.


File: emacspeak.info,  Node: emacspeak-tab-bar,  Next: emacspeak-table,  Prev: emacspeak-syslog,  Up: Emacspeak Commands And Options

12.181 emacspeak-tab-bar
========================

tab-bar == tabs for window configuration.  Speech-enable tab-bar
interaction.  If you have BROWSE-URL-NEW-WINDOW-FLAG set to T to have
EWW open Web pages in a new buffer, then set
EWW-BROWSE-URL-NEW-WINDOW-IS-TAB to nil to avoid leaking tabs.


File: emacspeak.info,  Node: emacspeak-table,  Next: emacspeak-table-ui,  Prev: emacspeak-tab-bar,  Up: Emacspeak Commands And Options

12.182 emacspeak-table
======================

Implements a module that provides a high level interface to tabulated
information.


File: emacspeak.info,  Node: emacspeak-table-ui,  Next: emacspeak-tabulate,  Prev: emacspeak-table,  Up: Emacspeak Commands And Options

12.183 emacspeak-table-ui
=========================

User interface to tables

12.183.1 Emacspeak-Table-Ui Commands
------------------------------------

12.183.1.1 emacspeak-table-copy-current-element-to-kill-ring
............................................................

 -- Command: emacspeak-table-copy-current-element-to-kill-ring
     ‘C-e C-t w’
     ‘<fn> C-t w’

     Copy current table element to kill ring.

12.183.1.2 emacspeak-table-copy-current-element-to-register
...........................................................

 -- Command: emacspeak-table-copy-current-element-to-register (register)
     ‘C-e C-t x’
     ‘<fn> C-t x’

     Copy current table element to specified register.

     (fn REGISTER)

12.183.1.3 emacspeak-table-copy-to-clipboard
............................................

 -- Command: emacspeak-table-copy-to-clipboard
     ‘C-e C-t k’
     ‘<fn> C-t k’

     Copy table in current buffer to the table clipboard.
     Current buffer must be in emacspeak-table mode.

12.183.1.4 emacspeak-table-display-table-in-region
..................................................

 -- Command: emacspeak-table-display-table-in-region (start end)
     ‘C-e M-i’
     ‘<fn> M-i’

     Recognize tabular data in current region and display it in table
     browsing mode in a a separate buffer.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn START END)

12.183.1.5 emacspeak-table-find-csv-file
........................................

 -- Command: emacspeak-table-find-csv-file (filename)
     ‘C-e C-t ,’
     ‘<fn> C-t ,’

     Process a csv (comma separated values) file.
     The processed  data is presented using emacspeak table navigation.

     (fn FILENAME)

12.183.1.6 emacspeak-table-find-file
....................................

 -- Command: emacspeak-table-find-file (filename)

     Open a file containing table data and display it in table mode.
     emacspeak table mode is designed to let you browse tabular data using
     all the power of the two-dimensional spatial layout while giving you
     sufficient contextual information.  The etc/tables subdirectory of the
     emacspeak distribution contains some sample tables –these are the
     CalTrain schedules.  Execute command ‘describe-mode’ bound to
     C-h m in a buffer that is in emacspeak table mode to read
     the documentation on the table browser.

     (fn FILENAME)

12.183.1.7 emacspeak-table-goto
...............................

 -- Command: emacspeak-table-goto (row column)
     ‘C-e C-t j’
     ‘<fn> C-t j’

     Prompt for a table cell coordinates and jump to it.

     (fn ROW COLUMN)

12.183.1.8 emacspeak-table-goto-bottom
......................................

 -- Command: emacspeak-table-goto-bottom
     ‘C-e C-t B’
     ‘<fn> C-t B’
     ‘C-e C-t M->’
     ‘<fn> C-t M->’

     Goes to the bottom of the current column.

12.183.1.9 emacspeak-table-goto-left
....................................

 -- Command: emacspeak-table-goto-left
     ‘C-e C-t A’
     ‘C-e C-t <’
     ‘<fn> C-t A’
     ‘<fn> C-t <’

     Goes to the left of the current row.

12.183.1.10 emacspeak-table-goto-right
......................................

 -- Command: emacspeak-table-goto-right
     ‘C-e C-t E’
     ‘C-e C-t >’
     ‘<fn> C-t E’
     ‘<fn> C-t >’

     Goes to the right of the current row.

12.183.1.11 emacspeak-table-goto-top
....................................

 -- Command: emacspeak-table-goto-top
     ‘C-e C-t T’
     ‘<fn> C-t T’
     ‘C-e C-t M-<’
     ‘<fn> C-t M-<’

     Goes to the top of the current column.

12.183.1.12 emacspeak-table-mode
................................

 -- Command: emacspeak-table-mode

     Major mode for browsing tables.
     Table mode is designed to allow speech users to browse tabular
     data with full contextual feedback while retaining all the power
     of the two-dimensional spatial layout of tables.

     In table mode, the arrow keys move between cells of the table.
     Emacspeak speaks the cell contents in a user-customizable way.  The
     visual display is kept in sync with the speech you hear; however
     Emacspeak is examining the entire table in order to speak the current
     cell content intelligently.

     You can interactively specify that emacspeak should speak either the row or
     column header (or both) while speaking each cell.  You can also specify a row
     or column filter that should be applied when speaking entire rows or columns
     –this lets you view slices of a table.  You can move to a specific row or
     column by searching the cell contents or by searching the row or column
     headers to locate items of interest.

     Here is a short description of the special commands provided in this mode.

     The next four commands help you move to the edges of the table:

     E               emacspeak-table-goto-right
     A               emacspeak-table-goto-left
     B               emacspeak-table-goto-bottom
     T               emacspeak-table-goto-top

     The next two commands let you search the table.
     The commands ask you if you want to search rows or columns.
     When searching headers remember that row 0 is the column header,
     and that column 0 is the row header.

     h               emacspeak-table-search-headers
     s               emacspeak-table-search

     The next command lets you specify how cell contents should be spoken.  Specify
     one of: ‘b’ for both, ‘c’ for column, ‘r’ for row, ‘f’ for row filtering and
     ‘g’ for column filtering. –table cells with then be spoken with both (or
     either)row and column headers, or with the filter applied.

     a               emacspeak-table-select-automatic-speaking-method

     The next set of commands speak the current table cell:

     .               emacspeak-table-speak-coordinates
     b               emacspeak-table-speak-both-headers-and-element
     SPC             emacspeak-table-speak-current-element
     c               emacspeak-table-speak-column-header-and-element
     r               e macspeak-table-speak-row-header-and-element

     The next set of commands navigate the table:

     right               emacspeak-table-next-column
     left               emacspeak-table-previous-column
     down               emacspeak-table-next-row
     up               emacspeak-table-previous-row
     j               emacspeak-table-goto
     S-tab               emacspeak-table-previous-column
     TAB               emacspeak-table-next-column

     Row and Column Filtering

     Filtering is designed to let you view slices of a table.
     They are specified as lists of numbers and strings.
     The concept is best explained with an example.

     A row filter specifies which of the entries in the current row should be
     spoken.Entries are numbered starting with 0.  Thus, when working with a table
     having 8 columns, a row filter of (1 2 3) will speak only entries 1 2 and 3.
     Use the sample tables in etc/tables   to familiarize yourself with this
     feature. Note that you can intersperse meaningful strings in the list that
     specifies the filter.

     Full List Of Keybindings:

     Key             Binding
     ——————————————————————————-
     C-b		emacspeak-table-previous-column
     C-f		emacspeak-table-next-column
     TAB		emacspeak-table-next-column
     C-n		emacspeak-table-next-row
     C-p		emacspeak-table-previous-row
     SPC		emacspeak-table-speak-current-element
     #		emacspeak-table-sort-on-current-column
     ,		emacspeak-table-find-csv-file
     .		emacspeak-table-speak-coordinates
     <		emacspeak-table-goto-left
     =		emacspeak-table-speak-dimensions
     >		emacspeak-table-goto-right
     A		emacspeak-table-goto-left
     B		emacspeak-table-goto-bottom
     C		emacspeak-table-search-column
     E		emacspeak-table-goto-right
     Q		emacspeak-kill-buffer-quietly
     R		emacspeak-table-search-row
     T		emacspeak-table-goto-top
     a		emacspeak-table-select-automatic-speaking-method
     b		emacspeak-table-speak-both-headers-and-element
     c		emacspeak-table-speak-column-header-and-element
     f		emacspeak-table-speak-row-filtered
     g		emacspeak-table-speak-column-filtered
     h		emacspeak-table-search-headers
     j		emacspeak-table-goto
     k		emacspeak-table-copy-to-clipboard
     n		emacspeak-table-next-row
     p		emacspeak-table-previous-row
     q		quit-window
     r		emacspeak-table-speak-row-header-and-element
     s		emacspeak-table-search
     v		emacspeak-table-view-csv-buffer
     w		emacspeak-table-copy-current-element-to-kill-ring
     x		emacspeak-table-copy-current-element-to-register
     S-<tab>		emacspeak-table-previous-column
     <down>		emacspeak-table-next-row
     <left>		emacspeak-table-previous-column
     <right>		emacspeak-table-next-column
     <up>		emacspeak-table-previous-row

     M-<		emacspeak-table-goto-top
     M->		emacspeak-table-goto-bottom
     M-l		emacspeak-table-ui-filter-load
     M-s		emacspeak-table-ui-filter-save

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-table-mode-hook’, as the final
     or penultimate step during initialization.

12.183.1.13 emacspeak-table-next-column
.......................................

 -- Command: emacspeak-table-next-column (&optional count)
     ‘C-e C-t TAB’
     ‘C-e C-t C-f’
     ‘C-e C-t <right>’
     ‘<fn> C-t TAB’
     ‘<fn> C-t C-f’
     ‘<fn> C-t <right>’

     Move to the next column if possible

     (fn &optional COUNT)

12.183.1.14 emacspeak-table-next-row
....................................

 -- Command: emacspeak-table-next-row (&optional count)
     ‘C-e C-t n’
     ‘C-e C-t C-n’
     ‘C-e C-t <down>’
     ‘<fn> C-t n’
     ‘<fn> C-t C-n’
     ‘<fn> C-t <down>’

     Move to the next row if possible

     (fn &optional COUNT)

12.183.1.15 emacspeak-table-paste-from-clipboard
................................................

 -- Command: emacspeak-table-paste-from-clipboard

     Paste the emacspeak table clipboard into the current buffer.
     Use the major  mode of this buffer to  decide what kind of table
     markup to use.

12.183.1.16 emacspeak-table-previous-column
...........................................

 -- Command: emacspeak-table-previous-column (&optional count)
     ‘C-e C-t C-b’
     ‘C-e C-t <left>’
     ‘C-e C-t S-<tab>’
     ‘<fn> C-t C-b’
     ‘<fn> C-t <left>’
     ‘<fn> C-t S-<tab>’

     Move to the previous column  if possible

     (fn &optional COUNT)

12.183.1.17 emacspeak-table-previous-row
........................................

 -- Command: emacspeak-table-previous-row (&optional count)
     ‘C-e C-t p’
     ‘C-e C-t C-p’
     ‘C-e C-t <up>’
     ‘<fn> C-t p’
     ‘<fn> C-t C-p’
     ‘<fn> C-t <up>’

     Move to the previous row if possible

     (fn &optional COUNT)

12.183.1.18 emacspeak-table-search
..................................

 -- Command: emacspeak-table-search (&optional what)
     ‘C-e C-t s’
     ‘<fn> C-t s’

     Search the table for matching elements.  Interactively prompts for
     row or column to search and pattern to look for.    If there is a match, makes
     the matching cell current. When called from a program, ‘what’ can
       be either ‘row’ or ‘column’.

     (fn &optional WHAT)

12.183.1.19 emacspeak-table-search-column
.........................................

 -- Command: emacspeak-table-search-column
     ‘C-e C-t C’
     ‘<fn> C-t C’

     Search in current table column.

12.183.1.20 emacspeak-table-search-headers
..........................................

 -- Command: emacspeak-table-search-headers
     ‘C-e C-t h’
     ‘<fn> C-t h’

     Search the table row or column headers.  Interactively prompts for
     row or column to search and pattern to look for.  If there is a
     match, makes the matching row or column current.

12.183.1.21 emacspeak-table-search-row
......................................

 -- Command: emacspeak-table-search-row
     ‘C-e C-t R’
     ‘<fn> C-t R’

     Search in current table row.

12.183.1.22 emacspeak-table-select-automatic-speaking-method
............................................................

 -- Command: emacspeak-table-select-automatic-speaking-method
     ‘C-e C-t a’
     ‘<fn> C-t a’

     Interactively select the kind of automatic speech to produce when
     browsing table elements

12.183.1.23 emacspeak-table-sort-on-current-column
..................................................

 -- Command: emacspeak-table-sort-on-current-column
     ‘C-e C-t #’
     ‘<fn> C-t #’

     Sort table on current column.

12.183.1.24 emacspeak-table-speak-both-headers-and-element
..........................................................

 -- Command: emacspeak-table-speak-both-headers-and-element
     ‘C-e C-t b’
     ‘<fn> C-t b’

     Speak  both row and column header and table element

12.183.1.25 emacspeak-table-speak-column-filtered
.................................................

 -- Command: emacspeak-table-speak-column-filtered (&optional prefix)
     ‘C-e C-t g’
     ‘<fn> C-t g’

     Speaks a table column after applying a specified column filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.183.1.26 emacspeak-table-speak-column-header-and-element
...........................................................

 -- Command: emacspeak-table-speak-column-header-and-element
     ‘C-e C-t c’
     ‘<fn> C-t c’

     Speak  column header and table element

12.183.1.27 emacspeak-table-speak-coordinates
.............................................

 -- Command: emacspeak-table-speak-coordinates
     ‘C-e C-t .’
     ‘<fn> C-t .’

     Speak current table coordinates.

12.183.1.28 emacspeak-table-speak-current-element
.................................................

 -- Command: emacspeak-table-speak-current-element
     ‘C-e C-t SPC’
     ‘<fn> C-t SPC’

     Speak current table element

12.183.1.29 emacspeak-table-speak-dimensions
............................................

 -- Command: emacspeak-table-speak-dimensions
     ‘C-e C-t =’
     ‘<fn> C-t =’

     Speak current table dimensions.

12.183.1.30 emacspeak-table-speak-row-filtered
..............................................

 -- Command: emacspeak-table-speak-row-filtered (&optional prefix)
     ‘C-e C-t f’
     ‘<fn> C-t f’

     Speaks a table row after applying a specified row filter.
     Optional prefix arg prompts for a new filter.

     (fn &optional PREFIX)

12.183.1.31 emacspeak-table-speak-row-header-and-element
........................................................

 -- Command: emacspeak-table-speak-row-header-and-element
     ‘C-e C-t r’
     ‘<fn> C-t r’

     Speak  row header and table element

12.183.1.32 emacspeak-table-ui-filter-load
..........................................

 -- Command: emacspeak-table-ui-filter-load (file)
     ‘C-e C-t M-l’
     ‘<fn> C-t M-l’

     Load saved filter settings.

     (fn FILE)

12.183.1.33 emacspeak-table-ui-filter-save
..........................................

 -- Command: emacspeak-table-ui-filter-save (file)
     ‘C-e C-t M-s’
     ‘<fn> C-t M-s’

     Save out filter settings.

     (fn FILE)

12.183.1.34 emacspeak-table-view-csv-buffer
...........................................

 -- Command: emacspeak-table-view-csv-buffer (&optional buffer-name)
     ‘C-e C-t v’
     ‘<fn> C-t v’

     Process a csv (comma separated values) data.
     The processed  data is  presented using emacspeak table navigation.

     (fn &optional BUFFER-NAME)

12.183.1.35 emacspeak-table-view-csv-url
........................................

 -- Command: emacspeak-table-view-csv-url (url &optional buffer-name)

     Process a csv (comma separated values) data at  ‘URL’.
     The processed  data is  presented using emacspeak table navigation.

     (fn URL &optional BUFFER-NAME)


File: emacspeak.info,  Node: emacspeak-tabulate,  Next: emacspeak-tar,  Prev: emacspeak-table-ui,  Up: Emacspeak Commands And Options

12.184 emacspeak-tabulate
=========================

This module is a simple table recognizer.  Can recognize the columns in
tabulated output, e.g.  ps, ls output


File: emacspeak.info,  Node: emacspeak-tar,  Next: emacspeak-tcl,  Prev: emacspeak-tabulate,  Up: Emacspeak Commands And Options

12.185 emacspeak-tar
====================

Auditory interface to tar mode

12.185.1 Emacspeak-Tar Commands
-------------------------------

12.185.1.1 emacspeak-tar-speak-file-date
........................................

 -- Command: emacspeak-tar-speak-file-date

     Speak date of file current entry

12.185.1.2 emacspeak-tar-speak-file-permissions
...............................................

 -- Command: emacspeak-tar-speak-file-permissions

     Speak permissions of file current entry

12.185.1.3 emacspeak-tar-speak-file-size
........................................

 -- Command: emacspeak-tar-speak-file-size

     Speak size of file current entry


File: emacspeak.info,  Node: emacspeak-tcl,  Next: emacspeak-tempo,  Prev: emacspeak-tar,  Up: Emacspeak Commands And Options

12.186 emacspeak-tcl
====================

Provide additional advice to tcl-mode


File: emacspeak.info,  Node: emacspeak-tempo,  Next: emacspeak-tetris,  Prev: emacspeak-tcl,  Up: Emacspeak Commands And Options

12.187 emacspeak-tempo
======================

tempo.el provides the infrastructure for building up templates.  This is
used by html-helper-mode to allow for easy writing of HTML This module
extends Emacspeak to provide fluent spoken feedback


File: emacspeak.info,  Node: emacspeak-tetris,  Next: emacspeak-texinfo,  Prev: emacspeak-tempo,  Up: Emacspeak Commands And Options

12.188 emacspeak-tetris
=======================

Speech-enables tetris.

12.188.1 Emacspeak-Tetris Commands
----------------------------------

12.188.1.1 emacspeak-tetris-goto-bottom-row
...........................................

 -- Command: emacspeak-tetris-goto-bottom-row

     Move to and speak bottom row

12.188.1.2 emacspeak-tetris-goto-top-row
........................................

 -- Command: emacspeak-tetris-goto-top-row

     Move to and speak the top row

12.188.1.3 emacspeak-tetris-speak-column
........................................

 -- Command: emacspeak-tetris-speak-column (&optional x)

     Speak  column –default is to speak current column

     (fn &optional X)

12.188.1.4 emacspeak-tetris-speak-coordinates
.............................................

 -- Command: emacspeak-tetris-speak-coordinates

     Speak current position

12.188.1.5 emacspeak-tetris-speak-current-shape
...............................................

 -- Command: emacspeak-tetris-speak-current-shape

     Speak current shape

12.188.1.6 emacspeak-tetris-speak-current-shape-and-coordinates
...............................................................

 -- Command: emacspeak-tetris-speak-current-shape-and-coordinates

     Speak shape orientation and coordinates

12.188.1.7 emacspeak-tetris-speak-next-shape
............................................

 -- Command: emacspeak-tetris-speak-next-shape

     Speak next shape

12.188.1.8 emacspeak-tetris-speak-row
.....................................

 -- Command: emacspeak-tetris-speak-row

     Speak current tetris row

12.188.1.9 emacspeak-tetris-speak-row-number
............................................

 -- Command: emacspeak-tetris-speak-row-number

     Speak where on the tetris board we are

12.188.1.10 emacspeak-tetris-speak-score
........................................

 -- Command: emacspeak-tetris-speak-score

     Speak the score

12.188.1.11 emacspeak-tetris-speak-x-coordinate
...............................................

 -- Command: emacspeak-tetris-speak-x-coordinate

     Speak current position


File: emacspeak.info,  Node: emacspeak-texinfo,  Next: emacspeak-threes,  Prev: emacspeak-tetris,  Up: Emacspeak Commands And Options

12.189 emacspeak-texinfo
========================

This module speech enables net-texinfo mode


File: emacspeak.info,  Node: emacspeak-threes,  Next: emacspeak-tide,  Prev: emacspeak-texinfo,  Up: Emacspeak Commands And Options

12.190 emacspeak-threes
=======================

THREES == threes game.  This module speech-enable the game.
<https://en.wikipedia.org/wiki/Threes> for history of the game and
details of game play.  This module adds additional convenience
keybindings to the default arrow-key bindings implemented in threes.el.
In addition, this module implements commands that speak the board as
well as getting a column-specific view of the board.

‘f’
     Move right
‘b’
     Move left
‘n’
     Move down
‘p’
     Move up
‘SPC’
     Speak the board
‘/’
     Speak board by column.
‘.’
     Speak current score.
‘,’
     Speak number of zeros on the board.
‘s’
     Save current state
‘u’
     Pop state from stack
‘?’
     Speak next tile
   The updated board is spoken after each turn.  The next upcoming tile
is spoken after the current state of the board.  You can use ‘SPC’ and
‘/’ to review the board.

12.190.1 Emacspeak-Threes Commands
----------------------------------

12.190.1.1 emacspeak-threes-0
.............................

 -- Command: emacspeak-threes-0

     Set next tile.

12.190.1.2 emacspeak-threes-1
.............................

 -- Command: emacspeak-threes-1

     Set next tile.

12.190.1.3 emacspeak-threes-2
.............................

 -- Command: emacspeak-threes-2

     Set next tile.

12.190.1.4 emacspeak-threes-3
.............................

 -- Command: emacspeak-threes-3

     Set next tile.

12.190.1.5 emacspeak-threes-export
..................................

 -- Command: emacspeak-threes-export (&optional prompt)

     Exports game stack to a file.
     Optional interactive prefix arg prompts for a file.
     Note that the file is overwritten silently.

     (fn &optional PROMPT)

12.190.1.6 emacspeak-threes-import
..................................

 -- Command: emacspeak-threes-import (&optional prompt)

     Import game.
     Optional interactive prefix arg prompts for a filename.

     (fn &optional PROMPT)

12.190.1.7 emacspeak-threes-pop-state
.....................................

 -- Command: emacspeak-threes-pop-state

     Reset state from stack.

12.190.1.8 emacspeak-threes-prune-stack
.......................................

 -- Command: emacspeak-threes-prune-stack (drop)

     Prune game stack to specified length.

     (fn DROP)

12.190.1.9 emacspeak-threes-push-state
......................................

 -- Command: emacspeak-threes-push-state

     Push current game state on stack.

12.190.1.10 emacspeak-threes-score
..................................

 -- Command: emacspeak-threes-score

     Speak the score.

12.190.1.11 emacspeak-threes-speak-board
........................................

 -- Command: emacspeak-threes-speak-board

     Speak the board.

12.190.1.12 emacspeak-threes-speak-empty-count
..............................................

 -- Command: emacspeak-threes-speak-empty-count

     Speak number of cells that are non-empty.

12.190.1.13 emacspeak-threes-speak-next
.......................................

 -- Command: emacspeak-threes-speak-next

     Speak upcoming tile.

12.190.1.14 emacspeak-threes-speak-transposed-board
...................................................

 -- Command: emacspeak-threes-speak-transposed-board

     Speak the board by columns.


File: emacspeak.info,  Node: emacspeak-tide,  Next: emacspeak-todo-mode,  Prev: emacspeak-threes,  Up: Emacspeak Commands And Options

12.191 emacspeak-tide
=====================

TIDE == Typescript IDE for emacs.  This module speech-enables both tide
and typescript-mode.


File: emacspeak.info,  Node: emacspeak-todo-mode,  Next: emacspeak-transient,  Prev: emacspeak-tide,  Up: Emacspeak Commands And Options

12.192 emacspeak-todo-mode
==========================

todo-mode (part of Emacs 21) provides todo-lists that can be integrated
with the Emacs calendar.  This module speech-enables todo-mode


File: emacspeak.info,  Node: emacspeak-transient,  Next: emacspeak-twittering,  Prev: emacspeak-todo-mode,  Up: Emacspeak Commands And Options

12.193 emacspeak-transient
==========================

TRANSIENT == Transient commands — used by magit and friends.  This
module speech-enables transient.

12.193.1 Introduction
---------------------

Package Transient is similar to package Hydra in the sense that it can
be used to create a sequence of chained/hierarchical commands that are
invoked via a sequence of keys.  It is used by Magit for dispatching to
the various Git commands.  Speech-enabling package Transient results in
the various interactive commands producing auditory feedback.  Transient
shows an ephemeral window with the currently available commands,
Emacspeak speech-enables transient–show to cache that content so it can
be browsed if desired.

   Finally, this module defines a new minor mode called
transient-emacspeak that enables interactive browsing of the contents
displayed temporarily.  Note that without this functionality, learning
complex packages like Magit would be difficult because the list of
available commands can be very long.

12.193.2 Recommended Customizations
-----------------------------------

I use the following customizations via .custom, adjust to taste, but use
these only after reading the transient info documentations.
   • transient-force-single-column: t
   • transient-show-popup: 1
   • transient-enable-popup-navigation: t

   this pops up the transient buffer after a short delay and lets you
move through the buttons with the up/down arrows.

12.193.3 Browsing Contents Of transient–show
--------------------------------------------

When executing a command defined via Transient — e.g.  command
Magit-dispatch and friends, press ‘C-z’ (transient-suspend) to
temporarily suspend the currently active transient.  Emacspeak now
displays a *transient-emacspeak* buffer that displays the contents of
the most recently displayed transient choices.  Pressing ‘C-c’ resumes
the transient; Pressing ‘C-q’ quits the transient.

12.193.4 Emacspeak-Transient Commands
-------------------------------------

12.193.4.1 emacspeak-transient-mode
...................................

 -- Command: emacspeak-transient-mode

     emacspeak integration with Transient.

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-transient-mode-hook’, as the
     final or penultimate step during initialization.


12.193.4.2 emacspeak-transient-next-section
...........................................

 -- Command: emacspeak-transient-next-section

     Next transient section.

12.193.4.3 emacspeak-transient-previous-section
...............................................

 -- Command: emacspeak-transient-previous-section

     Previous transient section.


File: emacspeak.info,  Node: emacspeak-twittering,  Next: emacspeak-typo,  Prev: emacspeak-transient,  Up: Emacspeak Commands And Options

12.194 emacspeak-twittering
===========================

module twittering-mode.el is found on the emacs wiki This module
speech-enables twittering-mode which works using oauth for
authentication.  Note: As of Thu Sep 2 08:11:25 PDT 2010 twit.el is
broken.

   Advises interactive functions to speak

12.194.1 Emacspeak-Twittering Commands
--------------------------------------

12.194.1.1 emacspeak-twittering-jump-to-following-url
.....................................................

 -- Command: emacspeak-twittering-jump-to-following-url

     Move to and open closest URI  following point.

12.194.1.2 emacspeak-twittering-speak-this-tweet
................................................

 -- Command: emacspeak-twittering-speak-this-tweet (&optional
          copy-as-kill)

     Speak tweet under point.
     With interactive prefix arg ‘copy-as-kill’, copy it to kill ring as well.

     (fn &optional COPY-AS-KILL)

12.194.1.3 emacspeak-twittering-twarc
.....................................

 -- Command: emacspeak-twittering-twarc (&optional whose)

     Download data using credentials  for signed-in user.
     Interactive prefix arg ‘whose’ prompts for a username whose
     timeline we download.

     (fn &optional WHOSE)


File: emacspeak.info,  Node: emacspeak-typo,  Next: emacspeak-url-template,  Prev: emacspeak-twittering,  Up: Emacspeak Commands And Options

12.195 emacspeak-typo
=====================

TYPO == Typographical Editing This module speech-enables typo-mode.
Typo-mode’s magic insertion commands are speech-enabled to speak the
inserted char.


File: emacspeak.info,  Node: emacspeak-url-template,  Next: emacspeak-vdiff,  Prev: emacspeak-typo,  Up: Emacspeak Commands And Options

12.196 emacspeak-url-template
=============================

It is often useful to have “parametrized hot list entries” i.e., hotlist
entries that are “templates” for the actual URL. The user provides
values for the parametrized portions of the URL e.g.  the date.  See
*Note URL Templates::, for details on the URL templates that are
presently defined.

12.196.1 Emacspeak-Url-Template Commands
----------------------------------------

12.196.1.1 emacspeak-url-template-fetch
.......................................

 -- Command: emacspeak-url-template-fetch (&optional documentation)
     ‘C-e u’
     ‘<fn> u’

     Fetch a pre-defined resource.
     Use Emacs completion to obtain a list of available resources.
     Resources typically prompt for the relevant information
     before completing the request.
     Optional interactive prefix arg displays documentation for specified resource.

     (fn &optional DOCUMENTATION)

12.196.1.2 emacspeak-url-template-help
......................................

 -- Command: emacspeak-url-template-help

     Display documentation for a URL template.
     Use Emacs completion to obtain a list of available
     resources.

12.196.1.3 emacspeak-url-template-load
......................................

 -- Command: emacspeak-url-template-load (file)

     Load URL template resources from specified location.

     (fn FILE)

12.196.1.4 emacspeak-url-template-nls-add-to-wishlist
.....................................................

 -- Command: emacspeak-url-template-nls-add-to-wishlist (book)

     Add book under point to wishlist.

     (fn BOOK)

12.196.1.5 emacspeak-url-template-save
......................................

 -- Command: emacspeak-url-template-save (file)

     Save out url templates.

     (fn FILE)


File: emacspeak.info,  Node: emacspeak-vdiff,  Next: emacspeak-vertico,  Prev: emacspeak-url-template,  Up: Emacspeak Commands And Options

12.197 emacspeak-vdiff
======================

VDIFF == vimdiff Installable from melpa, vdiff enables synchronized
movement through diff buffers without resorting to an extra
control-panel as is the case with ediff.  In addition to speech-enabling
interactive commands and setting up face->voice mappings, this module
provides commands that speak the current hunk.  These are bound in
‘vdiff-mode-prefix-map’.
   • ‘emacspeak-vdiff-speak-this-hunk’ bound to ‘SPC’.
   • ‘emacspeak-vdiff-speak-other-hunk’ bound to ‘C-SPC’.
   • ‘emacspeak-vdiff-speak-other-line’ bound to ‘l’.

12.197.1 Emacspeak-Vdiff Commands
---------------------------------

12.197.1.1 emacspeak-vdiff-speak-other-hunk
...........................................

 -- Command: emacspeak-vdiff-speak-other-hunk

     Speak corresponding hunk from other buffer.

12.197.1.2 emacspeak-vdiff-speak-other-line
...........................................

 -- Command: emacspeak-vdiff-speak-other-line

     Speak corresponding line from other buffer.

12.197.1.3 emacspeak-vdiff-speak-this-hunk
..........................................

 -- Command: emacspeak-vdiff-speak-this-hunk

     Speak VDiff hunk under point.


File: emacspeak.info,  Node: emacspeak-vertico,  Next: emacspeak-view,  Prev: emacspeak-vdiff,  Up: Emacspeak Commands And Options

12.198 emacspeak-vertico
========================

Vertico is a modern completion UI that uses Emacs’s native completion
engine This module speech-enables Vertico’s UI


File: emacspeak.info,  Node: emacspeak-view,  Next: emacspeak-vm,  Prev: emacspeak-vertico,  Up: Emacspeak Commands And Options

12.199 emacspeak-view
=====================

Provide additional advice to view-mode

12.199.1 Emacspeak-View Commands
--------------------------------

12.199.1.1 emacspeak-view-line-to-top
.....................................

 -- Command: emacspeak-view-line-to-top

     Moves current line to top of window


File: emacspeak.info,  Node: emacspeak-vm,  Next: emacspeak-vterm,  Prev: emacspeak-view,  Up: Emacspeak Commands And Options

12.200 emacspeak-vm
===================

This module extends the mail reader vm.  Uses voice locking for message
headers and cited messages

12.200.1 Emacspeak-Vm Commands
------------------------------

12.200.1.1 emacspeak-vm-browse-message
......................................

 -- Command: emacspeak-vm-browse-message

     Browse an email message –read it paragraph at a time.

12.200.1.2 emacspeak-vm-catch-up-all-messages
.............................................

 -- Command: emacspeak-vm-catch-up-all-messages

     Mark all messages in folder to be deleted. Use with caution.

12.200.1.3 emacspeak-vm-locate-subject-line
...........................................

 -- Command: emacspeak-vm-locate-subject-line

     Locates the subject line in a message being read.
     Useful when you’re reading a message
     that has been forwarded multiple times.

12.200.1.4 emacspeak-vm-mode-line
.................................

 -- Command: emacspeak-vm-mode-line

     VM mode line information.

12.200.1.5 emacspeak-vm-speak-labels
....................................

 -- Command: emacspeak-vm-speak-labels

     Speak a message’s labels

12.200.1.6 emacspeak-vm-speak-message
.....................................

 -- Command: emacspeak-vm-speak-message

     Move point to the message body.

12.200.1.7 emacspeak-vm-toggle-html-mime-demotion
.................................................

 -- Command: emacspeak-vm-toggle-html-mime-demotion

     Toggle state of HTML Mime promotion/Demotion.

12.200.1.8 emacspeak-vm-yank-header
...................................

 -- Command: emacspeak-vm-yank-header

     Yank specified header into kill ring.

12.200.2 emacspeak-vm Options
-----------------------------

 -- Variable: User Option emacspeak-vm-cal2text
     Executable that converts calendar invitations on standard input to
     plain text.

 -- Variable: User Option emacspeak-vm-customize-mime-settings
     Non-nil will cause Emacspeak to configure VM mime settings to match
     what the author of Emacspeak uses.

 -- Variable: User Option emacspeak-vm-pdf2text
     Executable that converts PDF on standard input to plain text using
     pdftotext.

 -- Variable: User Option emacspeak-vm-use-raman-settings
     Should VM use the customizations used by the author of Emacspeak.

 -- Variable: User Option emacspeak-vm-voice-loc
     Set this to T if you want messages automatically voice locked.
     Note that some badly formed mime messages cause trouble.


File: emacspeak.info,  Node: emacspeak-vterm,  Next: emacspeak-vuiet,  Prev: emacspeak-vm,  Up: Emacspeak Commands And Options

12.201 emacspeak-vterm
======================

VTERM == vterm using native vterm library

12.201.1 Usage
--------------

   • Turn on ‘emacspeak-comint-autospeak’ for using the shell.
   • Turn off ‘emacspeak-comint-autospeak’ when using full-screen
     ncurses apps like ‘vi’.
   • Use ‘vterm-copy-mode’ to review the contents of the terminal — ‘C-c
     C-t’.


File: emacspeak.info,  Node: emacspeak-vuiet,  Next: emacspeak-wdired,  Prev: emacspeak-vterm,  Up: Emacspeak Commands And Options

12.202 emacspeak-vuiet
======================

VUIET == Emacs Music Explorer And Player with last.fm integration This
module speech-enables vuiet.

12.202.1 Emacspeak-Vuiet Commands
---------------------------------

12.202.1.1 emacspeak-vuiet-track-info
.....................................

 -- Command: emacspeak-vuiet-track-info

     Speak current playing state.


File: emacspeak.info,  Node: emacspeak-wdired,  Next: emacspeak-we,  Prev: emacspeak-vuiet,  Up: Emacspeak Commands And Options

12.203 emacspeak-wdired
=======================

Speech-enable wdired to permit in-place renaming of groups of files.


File: emacspeak.info,  Node: emacspeak-we,  Next: emacspeak-websearch,  Prev: emacspeak-wdired,  Up: Emacspeak Commands And Options

12.204 emacspeak-we
===================

we is for webedit Invoke XSLT to edit/transform Web pages before they
get rendered.  we makes emacspeak’s webedit layer independent of a given
Emacs web browser EWW This module will use the abstraction provided by
browse-url to handle Web pages.

12.204.1 Emacspeak-We Commands
------------------------------

12.204.1.1 emacspeak-we-class-filter-and-follow
...............................................

 -- Command: emacspeak-we-class-filter-and-follow (class url &optional
          prompt)
     ‘C-e x e y’
     ‘<fn> x e y’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn CLASS URL &optional PROMPT)

12.204.1.2 emacspeak-we-class-filter-and-follow-link
....................................................

 -- Command: emacspeak-we-class-filter-and-follow-link (&optional
          prompt)
     ‘C-e x e v’
     ‘<fn> x e v’

     Follow url and point, and filter the result by specified class.
     Class can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.204.1.3 emacspeak-we-count-matches
.....................................

 -- Command: emacspeak-we-count-matches (url locator)
     ‘C-e x e C-f’
     ‘<fn> x e C-f’

     Count matches for locator  in Web page.

     (fn URL LOCATOR)

12.204.1.4 emacspeak-we-count-nested-tables
...........................................

 -- Command: emacspeak-we-count-nested-tables (url)
     ‘C-e x e C-x’
     ‘<fn> x e C-x’

     Count nested tables in Web page.

     (fn URL)

12.204.1.5 emacspeak-we-count-tables
....................................

 -- Command: emacspeak-we-count-tables (url)
     ‘C-e x e C-t’
     ‘<fn> x e C-t’

     Count  tables in Web page.

     (fn URL)

12.204.1.6 emacspeak-we-extract-by-class
........................................

 -- Command: emacspeak-we-extract-by-class (class url &optional speak)
     ‘C-e x e c’
     ‘<fn> x e c’

     Extract elements having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.204.1.7 emacspeak-we-extract-by-class-list
.............................................

 -- Command: emacspeak-we-extract-by-class-list (classes url &optional
          speak)
     ‘C-e x e C’
     ‘<fn> x e C’

     Extract elements having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.204.1.8 emacspeak-we-extract-by-id
.....................................

 -- Command: emacspeak-we-extract-by-id (id url &optional speak)
     ‘C-e x e i’
     ‘<fn> x e i’

     Extract elements having specified id attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer.
     Interactive use provides list of id values as completion.

     (fn ID URL &optional SPEAK)

12.204.1.9 emacspeak-we-extract-by-id-list
..........................................

 -- Command: emacspeak-we-extract-by-id-list (ids url &optional speak)
     ‘C-e x e I’
     ‘<fn> x e I’

     Extract elements having id specified in list ‘ids’ from HTML.
     Extracts specified elements from current WWW page and displays it in a
     separate buffer. Interactive use provides list of id values as completion.

     (fn IDS URL &optional SPEAK)

12.204.1.10 emacspeak-we-extract-by-role
........................................

 -- Command: emacspeak-we-extract-by-role (role url &optional speak)
     ‘C-e x e r’
     ‘<fn> x e r’

     Extract elements having specified role attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of role values as completion.

     (fn ROLE URL &optional SPEAK)

12.204.1.11 emacspeak-we-extract-matching-urls
..............................................

 -- Command: emacspeak-we-extract-matching-urls (pattern url &optional
          speak)
     ‘C-e x e u’
     ‘<fn> x e u’

     Extracts links whose URL matches pattern.

     (fn PATTERN URL &optional SPEAK)

12.204.1.12 emacspeak-we-extract-nested-table
.............................................

 -- Command: emacspeak-we-extract-nested-table (index url &optional
          speak)
     ‘C-e x e x’
     ‘<fn> x e x’

     Extract nested table specified by ‘table-index’. Default is to
     operate on current web page when in a browser buffer; otherwise
     prompt for URL. Optional arg ‘speak’ specifies if the result should be
     spoken automatically.

     (fn INDEX URL &optional SPEAK)

12.204.1.13 emacspeak-we-extract-nested-table-list
..................................................

 -- Command: emacspeak-we-extract-nested-table-list (tables url
          &optional speak)
     ‘C-e x e X’
     ‘<fn> x e X’

     Extract specified list of tables from a Web page.

     (fn TABLES URL &optional SPEAK)

12.204.1.14 emacspeak-we-extract-speakable
..........................................

 -- Command: emacspeak-we-extract-speakable (url &optional speak)
     ‘C-e x e z’
     ‘<fn> x e z’

     Extract elements having class‘speakable’ from HTML.

     (fn URL &optional SPEAK)

12.204.1.15 emacspeak-we-extract-table-by-match
...............................................

 -- Command: emacspeak-we-extract-table-by-match (match url &optional
          speak)
     ‘C-e x e m’
     ‘<fn> x e m’

     Extract table containing  specified match.
      Optional arg url specifies the page to extract content from.

     (fn MATCH URL &optional SPEAK)

12.204.1.16 emacspeak-we-extract-table-by-position
..................................................

 -- Command: emacspeak-we-extract-table-by-position (pos url &optional
          speak)
     ‘C-e x e t’
     ‘<fn> x e t’

     Extract table at specified pos.
     Default is to extract from current page.

     (fn POS URL &optional SPEAK)

12.204.1.17 emacspeak-we-extract-tables-by-match-list
.....................................................

 -- Command: emacspeak-we-extract-tables-by-match-list (match-list url
          &optional speak)
     ‘C-e x e M’
     ‘<fn> x e M’

     Extract specified  tables from a WWW page.
     Tables are specified by containing  match pattern
      found in the match list.

     (fn MATCH-LIST URL &optional SPEAK)

12.204.1.18 emacspeak-we-extract-tables-by-position-list
........................................................

 -- Command: emacspeak-we-extract-tables-by-position-list (positions url
          &optional speak)
     ‘C-e x e T’
     ‘<fn> x e T’

     Extract specified list of nested tables from a WWW page.
     Tables are specified by their position in the list
      of nested tables found in the page.

     (fn POSITIONS URL &optional SPEAK)

12.204.1.19 emacspeak-we-follow-and-extract-main
................................................

 -- Command: emacspeak-we-follow-and-extract-main (&optional speak)
     ‘C-e x e P’
     ‘<fn> x e P’

     Follow URL, then extract role=main.

     (fn &optional SPEAK)

12.204.1.20 emacspeak-we-follow-and-filter-by-id
................................................

 -- Command: emacspeak-we-follow-and-filter-by-id (id prompt)
     ‘C-e x e b’
     ‘<fn> x e b’

     Follow url and point, and filter the result by specified id.
     Id can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn ID PROMPT)

12.204.1.21 emacspeak-we-junk-by-class
......................................

 -- Command: emacspeak-we-junk-by-class (class url &optional speak)
     ‘C-e x e d’
     ‘<fn> x e d’

     Extract elements not having specified class attribute from HTML. Extracts
     specified elements from current WWW page and displays it in a separate
     buffer. Interactive use provides list of class values as completion.

     (fn CLASS URL &optional SPEAK)

12.204.1.22 emacspeak-we-junk-by-class-list
...........................................

 -- Command: emacspeak-we-junk-by-class-list (classes url &optional
          speak)
     ‘C-e x e D’
     ‘C-e x e C-c’
     ‘<fn> x e D’
     ‘<fn> x e C-c’

     Extract elements not having class specified in list ‘classes’ from HTML.
     Extracts specified elements from current WWW page and displays it
     in a separate buffer.  Interactive use provides list of class
     values as completion.

     (fn CLASSES URL &optional SPEAK)

12.204.1.23 emacspeak-we-style-filter
.....................................

 -- Command: emacspeak-we-style-filter (style url &optional speak)
     ‘C-e x e S’
     ‘<fn> x e S’

     Extract elements matching specified style
     from HTML.  Extracts specified elements from current WWW
     page and displays it in a separate buffer.  Optional arg url
     specifies the page to extract contents  from.

     (fn STYLE URL &optional SPEAK)

12.204.1.24 emacspeak-we-toggle-xsl-keep-result
...............................................

 -- Command: emacspeak-we-toggle-xsl-keep-result
     ‘C-e x e k’
     ‘<fn> x e k’

     Toggle xsl keep result flag.

12.204.1.25 emacspeak-we-url-expand-and-execute
...............................................

 -- Command: emacspeak-we-url-expand-and-execute (&optional prefix)
     ‘C-e x e e’
     ‘<fn> x e e’

     Applies buffer-specific URL expander/executor function.

     (fn &optional PREFIX)

12.204.1.26 emacspeak-we-url-rewrite-and-follow
...............................................

 -- Command: emacspeak-we-url-rewrite-and-follow (&optional prompt)
     ‘C-e x e ]’
     ‘<fn> x e ]’

     Apply a url rewrite rule as specified in the current buffer
     before following link under point.  If no rewrite rule is
     defined, first prompt for one.  Rewrite rules are of the
     form ‘(from to)’ where from and to are strings.  Typically, the
     rewrite rule is automatically set up by Emacspeak tools like
     websearch where a rewrite rule is known.  Rewrite rules are
     useful in jumping directly to the printer friendly version of an
     article for example.  Optional interactive prefix arg prompts for
     a rewrite rule even if one is already defined.

     (fn &optional PROMPT)

12.204.1.27 emacspeak-we-xpath-filter-and-follow
................................................

 -- Command: emacspeak-we-xpath-filter-and-follow (&optional prompt)
     ‘C-e x e p’
     ‘<fn> x e p’

     Follow url and point, and filter the result by specified xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.204.1.28 emacspeak-we-xpath-junk-and-follow
..............................................

 -- Command: emacspeak-we-xpath-junk-and-follow (&optional prompt)
     ‘C-e x e C-p’
     ‘<fn> x e C-p’

     Follow url and point, and filter the result by junking
     elements specified by xpath.
     XPath can be set locally for a buffer, and overridden with an
     interactive prefix arg. If there is a known rewrite url rule, that is
     used as well.

     (fn &optional PROMPT)

12.204.1.29 emacspeak-we-xsl-toggle
...................................

 -- Command: emacspeak-we-xsl-toggle
     ‘C-e x e o’
     ‘<fn> x e o’

     Toggle  application of XSL transformations.

12.204.1.30 emacspeak-we-xslt-apply
...................................

 -- Command: emacspeak-we-xslt-apply (xsl)
     ‘C-e x e a’
     ‘<fn> x e a’

     Apply specified transformation to current Web page.

     (fn XSL)

12.204.1.31 emacspeak-we-xslt-filter
....................................

 -- Command: emacspeak-we-xslt-filter (path url &optional speak)
     ‘C-e x e f’
     ‘<fn> x e f’

     Extract elements matching specified XPath path locator
     from Web page – default is the current page being viewed.

     (fn PATH URL &optional SPEAK)

12.204.1.32 emacspeak-we-xslt-junk
..................................

 -- Command: emacspeak-we-xslt-junk (path url &optional speak)
     ‘C-e x e j’
     ‘<fn> x e j’

     Junk elements matching specified locator.

     (fn PATH URL &optional SPEAK)

12.204.1.33 emacspeak-we-xslt-select
....................................

 -- Command: emacspeak-we-xslt-select (xsl)
     ‘C-e x e s’
     ‘<fn> x e s’

     Select XSL transformation applied to Web pages before they are displayed .

     (fn XSL)

12.204.2 emacspeak-we Options
-----------------------------

 -- Variable: User Option emacspeak-we-filters-rename-buffer
     Set to T if you want the buffer name to contain the applied filter.


File: emacspeak.info,  Node: emacspeak-websearch,  Next: emacspeak-webspace,  Prev: emacspeak-we,  Up: Emacspeak Commands And Options

12.205 emacspeak-websearch
==========================

This module provides utility functions for searching the WWW

12.205.1 Emacspeak-Websearch Commands
-------------------------------------

12.205.1.1 emacspeak-websearch-accessible-google
................................................

 -- Command: emacspeak-websearch-accessible-google (query &optional
          options)

     Use Google Lite (Experimental).
     Optional prefix arg prompts for toolbelt options.

     (fn QUERY &optional OPTIONS)

12.205.1.2 emacspeak-websearch-amazon-search
............................................

 -- Command: emacspeak-websearch-amazon-search

     Amazon search.

12.205.1.3 emacspeak-websearch-ask-jeeves
.........................................

 -- Command: emacspeak-websearch-ask-jeeves (query)

     Ask Jeeves for the answer.

     (fn QUERY)

12.205.1.4 emacspeak-websearch-biblio-search
............................................

 -- Command: emacspeak-websearch-biblio-search (query)

     Search Computer Science Bibliographies.

     (fn QUERY)

12.205.1.5 emacspeak-websearch-citeseer-search
..............................................

 -- Command: emacspeak-websearch-citeseer-search (term)

     Perform a CiteSeer search.

     (fn TERM)

12.205.1.6 emacspeak-websearch-dispatch
.......................................

 -- Command: emacspeak-websearch-dispatch
     ‘C-e ?’
     ‘<fn> ?’

      Press ‘?’ to list available search engines.
        This interface attempts to speak the most relevant information
        on the result page.

12.205.1.7 emacspeak-websearch-foldoc-search
............................................

 -- Command: emacspeak-websearch-foldoc-search (query)

     Perform a FolDoc search.

     (fn QUERY)

12.205.1.8 emacspeak-websearch-google
.....................................

 -- Command: emacspeak-websearch-google (query &optional flag)

     Perform a Google search.  First optional interactive prefix arg
     ‘flag’ prompts for additional search options. Second interactive
     prefix arg is equivalent to hitting the I’m Feeling Lucky button on Google.

     (fn QUERY &optional FLAG)

12.205.1.9 emacspeak-websearch-google-feeling-lucky
...................................................

 -- Command: emacspeak-websearch-google-feeling-lucky (query)

     Do a I’m Feeling Lucky Google search.

     (fn QUERY)

12.205.1.10 emacspeak-websearch-google-news
...........................................

 -- Command: emacspeak-websearch-google-news

     Invoke Google News url template.

12.205.1.11 emacspeak-websearch-google-search-in-date-range
...........................................................

 -- Command: emacspeak-websearch-google-search-in-date-range

     Use this from inside the calendar to do Google date-range searches.

12.205.1.12 emacspeak-websearch-google-with-toolbelt
....................................................

 -- Command: emacspeak-websearch-google-with-toolbelt (query)
     ‘C-; /’
     ‘C-x @ h /’

     Launch Google search with toolbelt.

     (fn QUERY)

12.205.1.13 emacspeak-websearch-gutenberg
.........................................

 -- Command: emacspeak-websearch-gutenberg (type query)

     Perform an Gutenberg search

     (fn TYPE QUERY)

12.205.1.14 emacspeak-websearch-help
....................................

 -- Command: emacspeak-websearch-help

     Displays key mapping used by Emacspeak Websearch.

12.205.1.15 emacspeak-websearch-merriam-webster-search
......................................................

 -- Command: emacspeak-websearch-merriam-webster-search (query)

     Search the Merriam Webster Dictionary.

     (fn QUERY)

12.205.1.16 emacspeak-websearch-wikipedia-search
................................................

 -- Command: emacspeak-websearch-wikipedia-search (query)

     Search Wikipedia using Google.

     (fn QUERY)

12.205.1.17 emacspeak-websearch-youtube-search
..............................................

 -- Command: emacspeak-websearch-youtube-search (query)

     YouTube search.

     (fn QUERY)


File: emacspeak.info,  Node: emacspeak-webspace,  Next: emacspeak-widget,  Prev: emacspeak-websearch,  Up: Emacspeak Commands And Options

12.206 emacspeak-webspace
=========================

WEBSPACE == Smart Web Gadgets For The Emacspeak Desktop

12.206.1 Emacspeak-Webspace Commands
------------------------------------

12.206.1.1 emacspeak-webspace-feed-reader
.........................................

 -- Command: emacspeak-webspace-feed-reader (&optional refresh)
     ‘C-. R’
     ‘C-' R’
     ‘C-x @ s R’

     Display Feed Reader Feed list in a WebSpace buffer.
     Optional interactive prefix arg forces a refresh.

     (fn &optional REFRESH)

12.206.1.2 emacspeak-webspace-filter
....................................

 -- Command: emacspeak-webspace-filter

     Open headline at point by following its link property and filter for content.

12.206.1.3 emacspeak-webspace-headlines
.......................................

 -- Command: emacspeak-webspace-headlines

     Startup Headlines ticker using RSS/Atom  feeds.

12.206.1.4 emacspeak-webspace-headlines-browse
..............................................

 -- Command: emacspeak-webspace-headlines-browse

     Display buffer of browsable headlines.

12.206.1.5 emacspeak-webspace-headlines-update
..............................................

 -- Command: emacspeak-webspace-headlines-update

     Setup news updates.
     Updated headlines found in emacspeak-webspace-headlines.

12.206.1.6 emacspeak-webspace-mode
..................................

 -- Command: emacspeak-webspace-mode

     Major mode for Webspace interaction.

     Key             Binding
     ——————————————————————————-
     TAB		forward-button
     ’		emacspeak-speak-rest-of-buffer
     .		emacspeak-webspace-filter
     /		search-forward
     <		beginning-of-buffer
     >		end-of-buffer
     ?		search-backward
     b		backward-button
     f		forward-button
     n		forward-button
     p		backward-button
     q		bury-buffer
     y		emacspeak-webspace-yank-link
     <backtab>	backward-button

     C-M-i		backward-button

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-webspace-mode-hook’, as the
     final or penultimate step during initialization.

12.206.1.7 emacspeak-webspace-open
..................................

 -- Command: emacspeak-webspace-open

     Open headline at point by following its link property.

12.206.1.8 emacspeak-webspace-yank-link
.......................................

 -- Command: emacspeak-webspace-yank-link

     Yank link under point into kill ring.

12.206.2 emacspeak-webspace Options
-----------------------------------

 -- Variable: User Option emacspeak-webspace-feeds
     Feeds to use in Headline Ticker.


File: emacspeak.info,  Node: emacspeak-widget,  Next: emacspeak-windmove,  Prev: emacspeak-webspace,  Up: Emacspeak Commands And Options

12.207 emacspeak-widget
=======================

This module implements the necessary extensions to provide talking
widgets.

12.207.1 Emacspeak-Widget Commands
----------------------------------

12.207.1.1 emacspeak-widget-browse-widget-interactively
.......................................................

 -- Command: emacspeak-widget-browse-widget-interactively

     Allows you to browse a widget

12.207.1.2 emacspeak-widget-help
................................

 -- Command: emacspeak-widget-help

     Speak help for widget under point.

12.207.1.3 emacspeak-widget-summarize-parent
............................................

 -- Command: emacspeak-widget-summarize-parent

     Summarize parent of widget at point.

12.207.1.4 emacspeak-widget-summarize-widget-under-point
........................................................

 -- Command: emacspeak-widget-summarize-widget-under-point (&optional
          level)

     Summarize a widget if any under point.
     Optional interactive prefix specifies how many levels to go up from current
     widget before summarizing.

     (fn &optional LEVEL)

12.207.1.5 emacspeak-widget-update-from-minibuffer
..................................................

 -- Command: emacspeak-widget-update-from-minibuffer (pos)

     Sets widget at ‘pos’ by invoking its prompter.

     (fn POS)


File: emacspeak.info,  Node: emacspeak-windmove,  Next: emacspeak-winring,  Prev: emacspeak-widget,  Up: Emacspeak Commands And Options

12.208 emacspeak-windmove
=========================

Package windmove (bundled with Emacs 21) provides commands for
navigating to windows based on relative position.


File: emacspeak.info,  Node: emacspeak-winring,  Next: emacspeak-wizards,  Prev: emacspeak-windmove,  Up: Emacspeak Commands And Options

12.209 emacspeak-winring
========================

window configurations in emacs are very useful you can display the same
file in different windows, and have different portions of the file
displayed.  winring allows you to manage window configurations, and this
module speech-enables it.


File: emacspeak.info,  Node: emacspeak-wizards,  Next: emacspeak-woman,  Prev: emacspeak-winring,  Up: Emacspeak Commands And Options

12.210 emacspeak-wizards
========================

Contains various wizards for the Emacspeak desktop.

12.210.1 Emacspeak-Wizards Commands
-----------------------------------

12.210.1.1 emacspeak-copy-current-file
......................................

 -- Command: emacspeak-copy-current-file
     ‘C-e M-c’
     ‘<fn> M-c’

     Copy file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when copying.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Asks for confirmation if the copy will result in an
       existing file being overwritten.

12.210.1.2 emacspeak-customize
..............................

 -- Command: emacspeak-customize
     ‘C-e C’
     ‘<fn> C’

     Customize Emacspeak.

12.210.1.3 emacspeak-describe-emacspeak
.......................................

 -- Command: emacspeak-describe-emacspeak
     ‘C-h C-e’
     ‘<f1> C-e’
     ‘<help> C-e’

     Give a brief overview of emacspeak.

12.210.1.4 emacspeak-kill-buffer-quietly
........................................

 -- Command: emacspeak-kill-buffer-quietly
     ‘C-e C-t Q’
     ‘<fn> C-t Q’

     Kill current buffer without  confirmation.

12.210.1.5 emacspeak-learn-emacs-mode
.....................................

 -- Command: emacspeak-learn-emacs-mode
     ‘C-e <f1>’
     ‘C-h C-l’
     ‘<fn> <f1>’
     ‘<f1> C-l’
     ‘<help> C-l’

     Helps you learn the keys.  You can press keys and hear what they do.
     To leave, press C-g.

12.210.1.6 emacspeak-link-current-file
......................................

 -- Command: emacspeak-link-current-file
     ‘C-e M-l’
     ‘<fn> M-l’

     Link (hard link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.210.1.7 emacspeak-next-frame-or-buffer
.........................................

 -- Command: emacspeak-next-frame-or-buffer (&optional frame)
     ‘C-<right>’

     Move to next buffer.
     With optional interactive prefix arg ‘frame’, move to next frame instead.

     (fn &optional FRAME)

12.210.1.8 emacspeak-previous-frame-or-buffer
.............................................

 -- Command: emacspeak-previous-frame-or-buffer (&optional frame)
     ‘C-<left>’

     Move to previous buffer.
     With optional interactive prefix arg ‘frame’, move to previous frame instead.

     (fn &optional FRAME)

12.210.1.9 emacspeak-select-this-buffer-next-display
....................................................

 -- Command: emacspeak-select-this-buffer-next-display
     ‘C-e C-<right>’
     ‘<fn> C-<right>’

     Select this buffer as displayed in a ‘next’ frame.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.210.1.10 emacspeak-select-this-buffer-other-window-display
.............................................................

 -- Command: emacspeak-select-this-buffer-other-window-display
          (&optional arg)

     Switch to this buffer as displayed in a different frame.
     Emacs allows you to display the same buffer in multiple windows
     or frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a book
     open at multiple places at once.

     (fn &optional ARG)

12.210.1.11 emacspeak-select-this-buffer-previous-display
.........................................................

 -- Command: emacspeak-select-this-buffer-previous-display
     ‘C-e C-<left>’
     ‘<fn> C-<left>’

     Select this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-select-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.210.1.12 emacspeak-show-property-at-point
............................................

 -- Command: emacspeak-show-property-at-point (&optional property)
     ‘C-e M-p’
     ‘<fn> M-p’

     Show value of PROPERTY at point.
     If optional arg property is not supplied, read it interactively.

     (fn &optional PROPERTY)

12.210.1.13 emacspeak-show-style-at-point
.........................................

 -- Command: emacspeak-show-style-at-point
     ‘C-e M-v’
     ‘<fn> M-v’

     Show value of property personality (and possibly face) at point.

12.210.1.14 emacspeak-skip-blank-lines-backward
...............................................

 -- Command: emacspeak-skip-blank-lines-backward
     ‘S-<up>’

     Move backward  across blank lines, then speak line.

12.210.1.15 emacspeak-skip-blank-lines-forward
..............................................

 -- Command: emacspeak-skip-blank-lines-forward
     ‘S-<down>’

     Move forward across blank lines, then speak line.


12.210.1.16 emacspeak-speak-hostname
....................................

 -- Command: emacspeak-speak-hostname
     ‘C-e M-h’
     ‘<fn> M-h’

     Speak host name.

12.210.1.17 emacspeak-speak-popup-messages
..........................................

 -- Command: emacspeak-speak-popup-messages
     ‘C-h M’
     ‘<f1> M’
     ‘<help> M’

     Pop up Messages  and switch to it.

12.210.1.18 emacspeak-speak-show-active-network-interfaces
..........................................................

 -- Command: emacspeak-speak-show-active-network-interfaces (&optional
          address)
     ‘C-e I’
     ‘<fn> I’

     Shows all active network interfaces in the echo area.
     With interactive prefix argument ADDRESS it prompts for a
     specific interface and shows its address. The address is
     also copied to the kill ring for convenient yanking.

     (fn &optional ADDRESS)

12.210.1.19 emacspeak-speak-telephone-directory
...............................................

 -- Command: emacspeak-speak-telephone-directory (&optional edit)
     ‘C-e x t’
     ‘<fn> x t’

     Lookup and display a phone number.
     With prefix arg, opens the phone book for editing.

     (fn &optional EDIT)

12.210.1.20 emacspeak-speak-this-buffer-next-display
....................................................

 -- Command: emacspeak-speak-this-buffer-next-display
     ‘C-e <right>’
     ‘<fn> <right>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘next’.

12.210.1.21 emacspeak-speak-this-buffer-other-window-display
............................................................

 -- Command: emacspeak-speak-this-buffer-other-window-display (window)
     ‘C-e /’
     ‘<fn> /’

     Speak this buffer as displayed in a different frame or window.  Emacs
     allows you to display the same buffer in multiple windows or
     frames.  These different windows can display different
     portions of the buffer.  This is equivalent to leaving a
     book open at places at once.  This command allows you to
     listen to the places where you have left the book open.

     (fn WINDOW)

12.210.1.22 emacspeak-speak-this-buffer-previous-display
........................................................

 -- Command: emacspeak-speak-this-buffer-previous-display
     ‘C-e <left>’
     ‘<fn> <left>’

     Speak this buffer as displayed in a ‘previous’ window.
     See documentation for command
     ‘emacspeak-speak-this-buffer-other-window-display’ for the
     meaning of ‘previous’.

12.210.1.23 emacspeak-symlink-current-file
..........................................

 -- Command: emacspeak-symlink-current-file
     ‘C-e M-s’
     ‘<fn> M-s’

     Link (symbolic link) file visited in current buffer to new location.
     Prompts for the new location and preserves modification time
       when linking.  If location is a directory, the file is copied
       to that directory under its current name ; if location names
       a file in an existing directory, the specified name is
       used.  Signals an error if target already exists.

12.210.1.24 emacspeak-view-emacspeak-news
.........................................

 -- Command: emacspeak-view-emacspeak-news
     ‘C-e N’
     ‘<fn> N’

     Display emacspeak News for a given version.

12.210.1.25 emacspeak-view-emacspeak-tips
.........................................

 -- Command: emacspeak-view-emacspeak-tips
     ‘C-e T’
     ‘<fn> T’

     Browse  Emacspeak productivity tips.

12.210.1.26 emacspeak-wizards-alpha-vantage-quotes
..................................................

 -- Command: emacspeak-wizards-alpha-vantage-quotes (ticker &optional
          custom)
     ‘C-e x a’
     ‘<fn> x a’

     Retrieve stock quote data from Alpha Vantage. Prompts for ‘ticker’
     — a stock symbol. Optional interactive prefix arg ‘custom’ provides
     access to the various functions provided by alpha-vantage.

     (fn TICKER &optional CUSTOM)

12.210.1.27 emacspeak-wizards-cleanup-shell-path
................................................

 -- Command: emacspeak-wizards-cleanup-shell-path

     Cleans up duplicates in shell path env variable.

12.210.1.28 emacspeak-wizards-color-at-point
............................................

 -- Command: emacspeak-wizards-color-at-point
     ‘C-h ,’
     ‘<f1> ,’
     ‘<help> ,’

     Echo foreground/background color at point.

12.210.1.29 emacspeak-wizards-color-diff-at-point
.................................................

 -- Command: emacspeak-wizards-color-diff-at-point (&optional set)
     ‘C-h \’
     ‘<f1> \’
     ‘<help> \’

     Speak difference between background and foreground color at point.
     With interactive prefix arg, set foreground and background color first.

     (fn &optional SET)

12.210.1.30 emacspeak-wizards-color-wheel
.........................................

 -- Command: emacspeak-wizards-color-wheel (start)
     ‘C-e x c’
     ‘<fn> x c’

     Manipulate a simple color wheel and display the name and shade
       of the resulting color.  Prompts for a color from which to
       start exploration.

     Keyboard Commands During Interaction:
     Up/Down: Increase/Decrement along current axis using specified step-size.
     =: Set value on current axis to number read from minibuffer.
     Left/Right: Switch color axis along which to move.
     b/f: Quit  wheel after setting background/foreground color to current value.
     n: Read color name from minibuffer.
     c: Complement  current color.
     s: Set stepsize to number read from minibuffer.
     q: Quit color wheel, after copying current hex value to kill-ring.

     (fn START)

12.210.1.31 emacspeak-wizards-colors
....................................

 -- Command: emacspeak-wizards-colors
     ‘C-e x C’
     ‘<fn> x C’

     Display list of colors and setup a callback to activate color
     under point as either the foreground or background color.

12.210.1.32 emacspeak-wizards-comma-at-end-of-word
..................................................

 -- Command: emacspeak-wizards-comma-at-end-of-word

     Move to the end of current word and add a comma.

12.210.1.33 emacspeak-wizards-count-slides-in-region
....................................................

 -- Command: emacspeak-wizards-count-slides-in-region (start end)

     Count slides starting from point.

     (fn START END)

12.210.1.34 emacspeak-wizards-customize-saved
.............................................

 -- Command: emacspeak-wizards-customize-saved (pattern)
     ‘C-h C-s’
     ‘<f1> C-s’
     ‘<help> C-s’

     Customize saved options matching ‘pattern’.  This command enables
     updating custom settings for a specific package or group of packages.

     (fn PATTERN)

12.210.1.35 emacspeak-wizards-cycle-to-next-buffer
..................................................

 -- Command: emacspeak-wizards-cycle-to-next-buffer
     ‘C-z n’
     ‘C-; n’
     ‘C-; C-.’
     ‘C-x @ h n’
     ‘C-x @ h C-.’

     Cycles to next buffer having same mode.

12.210.1.36 emacspeak-wizards-cycle-to-previous-buffer
......................................................

 -- Command: emacspeak-wizards-cycle-to-previous-buffer
     ‘C-z p’
     ‘C-; p’
     ‘C-; C-,’
     ‘C-x @ h p’
     ‘C-x @ h C-,’

     Cycles to previous buffer having same mode.

12.210.1.37 emacspeak-wizards-describe-voice
............................................

 -- Command: emacspeak-wizards-describe-voice (personality)
     ‘C-h C-v’
     ‘<f1> C-v’
     ‘<help> C-v’

     Describe  voice — analogous to C-h /.
     When called interactively, ‘personality’ defaults to first
     personality at point.

     (fn PERSONALITY)

12.210.1.38 emacspeak-wizards-end-of-word
.........................................

 -- Command: emacspeak-wizards-end-of-word (arg)

     move to end of word

     (fn ARG)

12.210.1.39 emacspeak-wizards-enumerate-matching-commands
.........................................................

 -- Command: emacspeak-wizards-enumerate-matching-commands (pattern)

     Return list of commands whose names match pattern.

     (fn PATTERN)

12.210.1.40 emacspeak-wizards-enumerate-matching-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-matching-faces (pattern)

     Enumerate  faces matching pattern.

     (fn PATTERN)

12.210.1.41 emacspeak-wizards-enumerate-obsolete-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-obsolete-faces

     utility function to enumerate old, obsolete maps that we have still
     mapped to voices.

12.210.1.42 emacspeak-wizards-enumerate-uncovered-commands
..........................................................

 -- Command: emacspeak-wizards-enumerate-uncovered-commands (pattern
          &optional bound-only)

     Enumerate unadvised commands matching pattern.
     Optional interactive prefix arg ‘bound-only’
     filters out commands that dont have an active key-binding.

     (fn PATTERN &optional BOUND-ONLY)

12.210.1.43 emacspeak-wizards-enumerate-unmapped-faces
......................................................

 -- Command: emacspeak-wizards-enumerate-unmapped-faces (&optional
          pattern)

     Enumerate unmapped faces matching pattern.

     (fn &optional PATTERN)

12.210.1.44 emacspeak-wizards-espeak-line
.........................................

 -- Command: emacspeak-wizards-espeak-line

     Speak line using espeak polyglot wizard.

12.210.1.45 emacspeak-wizards-espeak-region
...........................................

 -- Command: emacspeak-wizards-espeak-region (start end)

     Speak region using ESpeak polyglot wizard.

     (fn START END)

12.210.1.46 emacspeak-wizards-espeak-string
...........................................

 -- Command: emacspeak-wizards-espeak-string (string)

     Speak string in lang via ESpeak.
     Lang is obtained from property ‘lang’ on string, or  via an interactive prompt.

     (fn STRING)

12.210.1.47 emacspeak-wizards-eww-buffer-list
.............................................

 -- Command: emacspeak-wizards-eww-buffer-list
     ‘C-z e’

     Display list of  EWW buffers.

12.210.1.48 emacspeak-wizards-exec-path-from-shell
..................................................

 -- Command: emacspeak-wizards-exec-path-from-shell

     Update exec-path from shell path.

12.210.1.49 emacspeak-wizards-execute-asynchronously
....................................................

 -- Command: emacspeak-wizards-execute-asynchronously (key)
     ‘C-. a’
     ‘C-' a’
     ‘C-x @ s a’

     Read key-sequence, then execute its command on a new thread.

     (fn KEY)

12.210.1.50 emacspeak-wizards-find-file-as-root
...............................................

 -- Command: emacspeak-wizards-find-file-as-root (file)
     ‘C-; r’
     ‘C-x @ h r’

     Automatically edit file with root-privileges (using
     tramp/sudo), if the file is not writable by user.

     (fn FILE)

12.210.1.51 emacspeak-wizards-find-longest-line-in-region
.........................................................

 -- Command: emacspeak-wizards-find-longest-line-in-region (start end)
     ‘C-e x =’
     ‘<fn> x =’

     Find longest line in region and move to it.

     (fn START END)

12.210.1.52 emacspeak-wizards-find-longest-paragraph-in-region
..............................................................

 -- Command: emacspeak-wizards-find-longest-paragraph-in-region (start
          end)

     Find longest paragraph in region, and move to it.

     (fn START END)

12.210.1.53 emacspeak-wizards-find-shortest-line-in-region
..........................................................

 -- Command: emacspeak-wizards-find-shortest-line-in-region (start end)

     Find shortest line in region.
     Moves to the shortest line when called interactively.

     (fn START END)

12.210.1.54 emacspeak-wizards-finder-find
.........................................

 -- Command: emacspeak-wizards-finder-find (directory)

     Run find-dired on specified switches after prompting for the
     directory to where find is to be launched.

     (fn DIRECTORY)

12.210.1.55 emacspeak-wizards-finder-mode
.........................................

 -- Command: emacspeak-wizards-finder-mode

     Emacspeak Finder

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-wizards-finder-mode-hook’, as
     the final or penultimate step during initialization.


12.210.1.56 emacspeak-wizards-frame-colors
..........................................

 -- Command: emacspeak-wizards-frame-colors

     Display frame’s foreground/background color seetting.

12.210.1.57 emacspeak-wizards-free-geo-ip
.........................................

 -- Command: emacspeak-wizards-free-geo-ip (&optional reverse-geocode)

     Return list consisting of city and region_name.
     Optional interactive prefix arg reverse-geocodes using Google Maps.

     (fn &optional REVERSE-GEOCODE)

12.210.1.58 emacspeak-wizards-gen-fn-decl
.........................................

 -- Command: emacspeak-wizards-gen-fn-decl (f &optional ext)

     Generate declare-function call for function ‘f’.
     Optional interactive prefix arg ext says this comes from an
     external package.

     (fn F &optional EXT)

12.210.1.59 emacspeak-wizards-generate-finder
.............................................

 -- Command: emacspeak-wizards-generate-finder

     Generate a widget-enabled finder wizard.

12.210.1.60 emacspeak-wizards-google-headlines
..............................................

 -- Command: emacspeak-wizards-google-headlines
     ‘C-. C-n’
     ‘C-' C-n’
     ‘C-x @ s C-n’

     Display just the headlines from Google News.

12.210.1.61 emacspeak-wizards-google-news
.........................................

 -- Command: emacspeak-wizards-google-news
     ‘C-. n’
     ‘C-' n’
     ‘C-x @ s n’

     Clean up news.google.com.

12.210.1.62 emacspeak-wizards-how-many-matches
..............................................

 -- Command: emacspeak-wizards-how-many-matches (start end &optional
          prefix)
     ‘C-e x h’
     ‘<fn> x h’

     If you define a file local variable
     called ‘emacspeak-occur-pattern’ that holds a regular expression
     that matches  lines of interest, you can use this command to
     run ‘how-many’ to count  matching header lines.
     With interactive prefix arg, prompts for and remembers the file local pattern.

     (fn START END &optional PREFIX)

12.210.1.63 emacspeak-wizards-iex-show-financials
.................................................

 -- Command: emacspeak-wizards-iex-show-financials (symbol &optional
          refresh)

     Show financials for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.210.1.64 emacspeak-wizards-iex-show-metadata
...............................................

 -- Command: emacspeak-wizards-iex-show-metadata

     Account metadata.

12.210.1.65 emacspeak-wizards-iex-show-news
...........................................

 -- Command: emacspeak-wizards-iex-show-news (symbol &optional refresh)

     Show news for specified ticker.
     Checks cache, then makes API call if needed.
     Optional interactive prefix arg refreshes cache.

     (fn SYMBOL &optional REFRESH)

12.210.1.66 emacspeak-wizards-iex-show-price
............................................

 -- Command: emacspeak-wizards-iex-show-price (symbol)
     ‘C-, q’
     ‘C-x @ a q’

     Quick Quote: Just stock price from IEXCloud.

     (fn SYMBOL)

12.210.1.67 emacspeak-wizards-iex-show-quote
............................................

 -- Command: emacspeak-wizards-iex-show-quote (&optional refresh)
     ‘C-. q’
     ‘C-' q’
     ‘C-x @ s q’

     Show portfolio  data from cache.
     Optional interactive prefix arg forces cache refresh.

     The quotes view uses emacspeak’s table mode.
     In addition,  the following  keys are available :

     F: Show financials for current stock.
     N: Show news for current stock.
     P: Show live price for current stock.

     (fn &optional REFRESH)

12.210.1.68 emacspeak-wizards-iex-show-tops
...........................................

 -- Command: emacspeak-wizards-iex-show-tops

     Uses tops/last end-point to show brief portfolio quotes.

12.210.1.69 emacspeak-wizards-iex-this-financials
.................................................

 -- Command: emacspeak-wizards-iex-this-financials

     Show financials for symbol in current row

12.210.1.70 emacspeak-wizards-iex-this-news
...........................................

 -- Command: emacspeak-wizards-iex-this-news

     Show news for symbol in current row

12.210.1.71 emacspeak-wizards-iex-this-price
............................................

 -- Command: emacspeak-wizards-iex-this-price

     Show price for symbol in current row

12.210.1.72 emacspeak-wizards-lacheck-buffer-file
.................................................

 -- Command: emacspeak-wizards-lacheck-buffer-file

     Run Lacheck on current buffer.

12.210.1.73 emacspeak-wizards-mlb-standings
...........................................

 -- Command: emacspeak-wizards-mlb-standings (&optional raw)

     Display MLB standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.210.1.74 emacspeak-wizards-move-and-speak
............................................

 -- Command: emacspeak-wizards-move-and-speak (command count)

     Speaks a chunk of text bounded by point and a target position.
     Target position is specified using a navigation command and a
     count that specifies how many times to execute that command
     first.  Point is left at the target position.  Interactively,
     command is specified by pressing the key that invokes the
     command.

     (fn COMMAND COUNT)

12.210.1.75 emacspeak-wizards-nba-standings
...........................................

 -- Command: emacspeak-wizards-nba-standings (&optional raw)

     Display NBA standings as of today.
     Optional interactive prefix arg shows  unprocessed results.

     (fn &optional RAW)

12.210.1.76 emacspeak-wizards-next-bullet
.........................................

 -- Command: emacspeak-wizards-next-bullet

     Navigate to and speak next ‘bullet’.

12.210.1.77 emacspeak-wizards-next-interactive-defun
....................................................

 -- Command: emacspeak-wizards-next-interactive-defun

     Move point to the next interactive defun

12.210.1.78 emacspeak-wizards-noaa-weather
..........................................

 -- Command: emacspeak-wizards-noaa-weather (&optional ask)
     ‘C-; w’
     ‘C-e x w’
     ‘<fn> x w’
     ‘C-x @ h w’

     Display weather  using NOAA Weather API.
     Data is retrieved only once, subsequent calls switch to previously
     displayed results. Kill that buffer or use an interactive prefix
     arg (C-u) to get new data.  Optional second interactive prefix
     arg (C-u C-u) asks for location address; Default is to display
     weather for ‘gmaps-my-address’.

     (fn &optional ASK)

12.210.1.79 emacspeak-wizards-occur-header-lines
................................................

 -- Command: emacspeak-wizards-occur-header-lines (&optional prefix)
     ‘C-e x o’
     ‘<fn> x o’

     If you define a file local variable called
     ‘emacspeak-occur-pattern’ that holds a regular expression that
     matches header lines, you can use this command to
     run ‘occur’ to find matching header lines. With prefix arg,
     prompts for and sets value of the file local pattern.

     (fn &optional PREFIX)

12.210.1.80 emacspeak-wizards-pdf-open
......................................

 -- Command: emacspeak-wizards-pdf-open (filename &optional ask-pwd)
     ‘C-, p’
     ‘C-x @ a p’

     Open pdf file as text.
     Optional interactive prefix arg ask-pwd prompts for password.

     (fn FILENAME &optional ASK-PWD)

12.210.1.81 emacspeak-wizards-previous-bullet
.............................................

 -- Command: emacspeak-wizards-previous-bullet

     Navigate to and speak previous ‘bullet’.

12.210.1.82 emacspeak-wizards-quote
...................................

 -- Command: emacspeak-wizards-quote (&optional refresh)
     ‘C-e x q’
     ‘<fn> x q’

     Top-level dispatch for  Stock Market information.

     Key : Action
     f   :  Financials
     m   :  Account metadata
     n   :  News
     p   :  Price
     q   :  Quotes
     t   :  tops/last

     (fn &optional REFRESH)

12.210.1.83 emacspeak-wizards-remote-frame
..........................................

 -- Command: emacspeak-wizards-remote-frame
     ‘C-e x f’
     ‘<fn> x f’

     Open a frame on a remote Emacs.
     Remote workstation is  ‘emacspeak-wizards-remote-workstation’.
     Works best when you already are ssh-impel-ed in and have a talking
       remote Emacs in   a local XTerm.

12.210.1.84 emacspeak-wizards-scratch
.....................................

 -- Command: emacspeak-wizards-scratch
     ‘C-. SPC’
     ‘C-' SPC’
     ‘C-x @ s SPC’

     Switch to *scratch* buffer, creating it if necessary.

12.210.1.85 emacspeak-wizards-set-colors
........................................

 -- Command: emacspeak-wizards-set-colors

     Prompt for foreground and background colors.

12.210.1.86 emacspeak-wizards-shell
...................................

 -- Command: emacspeak-wizards-shell (&optional prefix)

     Run Emacs  ‘shell’ command when not in a shell buffer, or
     when called with a prefix argument. When called from a shell buffer,
     switches to ‘next’ shell buffer. When called from outside a shell
     buffer, find the most ‘appropriate shell’ and switch to it. Once
     switched, set default directory in that target shell to the directory
     of the source buffer.

     (fn &optional PREFIX)

12.210.1.87 emacspeak-wizards-shell-by-key
..........................................

 -- Command: emacspeak-wizards-shell-by-key (&optional prefix)
     ‘C-e x 9’
     ‘C-e x 8’
     ‘C-e x 7’
     ‘C-e x 6’
     ‘C-e x 5’
     ‘C-e x 4’
     ‘C-e x 3’
     ‘C-e x 2’
     ‘C-e x 1’
     ‘C-e x 0’
     ‘<fn> x 9’
     ‘<fn> x 8’
     ‘<fn> x 7’
     ‘<fn> x 6’
     ‘<fn> x 5’
     ‘<fn> x 4’
     ‘<fn> x 3’
     ‘<fn> x 2’
     ‘<fn> x 1’
     ‘<fn> x 0’

     Switch to shell buffer by key. This provides a predictable
       means for switching to a specific shell buffer. When invoked
       from a non-shell-mode buffer that is a dired-buffer or is
       visiting a file, invokes ‘cd ’ in the shell to change to the
       value of ‘default-directory’ — if called with a
       prefix-arg. When already in a shell buffer, interactive prefix
       arg ‘prefix’ causes this shell to be re-keyed if appropriate
       — see M-x emacspeak-wizards-shell-re-key for an explanation
       of how re-keying works.

     (fn &optional PREFIX)

12.210.1.88 emacspeak-wizards-shell-command-on-current-file
...........................................................

 -- Command: emacspeak-wizards-shell-command-on-current-file (command)
     ‘C-e &’
     ‘<fn> &’

     Prompts for and runs shell command on current file.

     (fn COMMAND)

12.210.1.89 emacspeak-wizards-shell-directory-reset
...................................................

 -- Command: emacspeak-wizards-shell-directory-reset
     ‘C-. .’
     ‘C-' .’
     ‘C-e x .’
     ‘<fn> x .’
     ‘C-x @ s .’

     Set current directory to this shell’s initial directory if one was defined.

12.210.1.90 emacspeak-wizards-shell-directory-set
.................................................

 -- Command: emacspeak-wizards-shell-directory-set

     Define current directory as this shell’s project directory.

12.210.1.91 emacspeak-wizards-shell-toggle
..........................................

 -- Command: emacspeak-wizards-shell-toggle
     ‘C-e <f11>’
     ‘C-; C-j’
     ‘C-. ,’
     ‘C-' ,’
     ‘<fn> <f11>’
     ‘C-e x ,’
     ‘<fn> x ,’
     ‘C-x @ h C-j’
     ‘C-x @ s ,’

     Switch to  shell  and cd to
       directory of the previously current buffer.

12.210.1.92 emacspeak-wizards-show-eval-result
..............................................

 -- Command: emacspeak-wizards-show-eval-result (form)
     ‘M-ESC :’

     Pretty-print and view Lisp evaluation results.

     (fn FORM)

12.210.1.93 emacspeak-wizards-show-face
.......................................

 -- Command: emacspeak-wizards-show-face (face)

     Show  properties of  face.

     (fn FACE)

12.210.1.94 emacspeak-wizards-show-memory-used
..............................................

 -- Command: emacspeak-wizards-show-memory-used

     Convenience command to view state of memory used in this session so far.

12.210.1.95 emacspeak-wizards-snarf-sexp
........................................

 -- Command: emacspeak-wizards-snarf-sexp (&optional delete)
     ‘C-; DEL’
     ‘C-x @ h DEL’

     Snarf the contents between delimiters at point.
     Optional interactive prefix arg deletes it.

     (fn &optional DELETE)

12.210.1.96 emacspeak-wizards-speak-iso-datetime
................................................

 -- Command: emacspeak-wizards-speak-iso-datetime (iso)

     Speak ISO date-time.

     (fn ISO)

12.210.1.97 emacspeak-wizards-squeeze-blanks
............................................

 -- Command: emacspeak-wizards-squeeze-blanks (start end)
     ‘C-e x |’
     ‘<fn> x |’

     Squeeze multiple blank lines.

     (fn START END)

12.210.1.98 emacspeak-wizards-swap-fg-and-bg
............................................

 -- Command: emacspeak-wizards-swap-fg-and-bg
     ‘C-h =’
     ‘<f1> =’
     ‘<help> =’

     Swap foreground and background.

12.210.1.99 emacspeak-wizards-term
..................................

 -- Command: emacspeak-wizards-term (create)
     ‘C-; C-a’
     ‘C-x @ h C-a’

     Switch to an ansi-term buffer or create one.
     With prefix arg, always creates a new terminal.
     Otherwise cycles through existing terminals, creating the first
     term if needed.

     (fn CREATE)

12.210.1.100 emacspeak-wizards-tex-tie-current-word
...................................................

 -- Command: emacspeak-wizards-tex-tie-current-word (n)

     Tie the next n  words.

     (fn N)

12.210.1.101 emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer
................................................................

 -- Command: emacspeak-wizards-toggle-mm-dd-yyyy-date-pronouncer

     Toggle pronunciation of mm-dd-yyyy dates.

12.210.1.102 emacspeak-wizards-toggle-yyyymmdd-date-pronouncer
..............................................................

 -- Command: emacspeak-wizards-toggle-yyyymmdd-date-pronouncer

     Toggle pronunciation of yyyymmdd  dates.

12.210.1.103 emacspeak-wizards-tune-in-radio-browse
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-browse (&optional category)
     ‘C-, t’
     ‘C-x @ a t’

     Browse Tune-In Radio.
     Optional interactive prefix arg ‘category’ prompts for a category.

     (fn &optional CATEGORY)

12.210.1.104 emacspeak-wizards-tune-in-radio-search
...................................................

 -- Command: emacspeak-wizards-tune-in-radio-search
     ‘C-, s’
     ‘C-x @ a s’

     Search Tune-In Radio.

12.210.1.105 emacspeak-wizards-units
....................................

 -- Command: emacspeak-wizards-units
     ‘C-e x u’
     ‘<fn> x u’

     Run units.

12.210.1.106 emacspeak-wizards-vc-n
...................................

 -- Command: emacspeak-wizards-vc-n

     Accelerator for VC viewer.

12.210.1.107 emacspeak-wizards-vc-view-mode
...........................................

 -- Command: emacspeak-wizards-vc-view-mode

     Major mode for interactively viewing virtual console contents.

     Key             Binding
     ——————————————————————————-
     C-l		emacspeak-wizards-vc-viewer-refresh

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘emacspeak-wizards-vc-view-mode-hook’, as
     the final or penultimate step during initialization.

12.210.1.108 emacspeak-wizards-vc-viewer
........................................

 -- Command: emacspeak-wizards-vc-viewer (console)
     ‘C-e x v’
     ‘<fn> x v’

     View contents of  virtual console.

     (fn CONSOLE)

12.210.1.109 emacspeak-wizards-vc-viewer-refresh
................................................

 -- Command: emacspeak-wizards-vc-viewer-refresh

     Refresh view of VC we’re viewing.

12.210.1.110 emacspeak-wizards-view-buffers-filtered-by-m-player-mode
.....................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-m-player-mode
     ‘C-; :’
     ‘C-x @ h :’

     Buffer menu filtered by  m-player mode.

12.210.1.111 emacspeak-wizards-view-buffers-filtered-by-this-mode
.................................................................

 -- Command: emacspeak-wizards-view-buffers-filtered-by-this-mode
     ‘C-z b’
     ‘C-. m’
     ‘C-' m’
     ‘C-, c’
     ‘C-x @ a c’
     ‘C-x @ s m’

     Buffer menu filtered by  mode of current-buffer.

12.210.2 emacspeak-wizards Options
----------------------------------

 -- Variable: User Option emacspeak-iex-api-key
     Web API key for IEX Finance access.  See IEX Login Console at
     https://iexcloud.io/cloud-login/ for how to get an API key.

 -- Variable: User Option emacspeak-speak-telephone-directory
     File holding telephone directory.  This is just a text file, and we
     use grep to search it.

 -- Variable: User Option emacspeak-wizards-alpha-vantage-api-key
     API Key used to retrieve stock data from alpha-vantage.  Visit
     https://www.alphavantage.co/support/#api-key to get your key.

 -- Variable: User Option emacspeak-wizards-find-switches-widget
     Widget to get find switch.

 -- Variable: User Option emacspeak-wizards-pdf-to-text-options
     options to Command for running pdftotext.

 -- Variable: User Option emacspeak-wizards-personal-portfolio
     Set this to the stock tickers you want to check.  Default is GAFA.
     Tickers are separated by white-space and are automatically sorted
     in lexical order with duplicates removed when saving.

 -- Variable: User Option emacspeak-wizards-project-shells
     List of shell-name/initial-directory pairs.

 -- Variable: User Option emacspeak-wizards-remote-workstation
     Name of remote workstation.


File: emacspeak.info,  Node: emacspeak-woman,  Next: emacspeak-xkcd,  Prev: emacspeak-wizards,  Up: Emacspeak Commands And Options

12.211 emacspeak-woman
======================

WOMAN == Man pages implemented in Emacs Lisp


File: emacspeak.info,  Node: emacspeak-xkcd,  Next: emacspeak-xref,  Prev: emacspeak-woman,  Up: Emacspeak Commands And Options

12.212 emacspeak-xkcd
=====================

XKCD == XKCD In Emacs View XKCD comics in Emacs.  Speech enables package
xkcd Augments it by displaying the alt text and the transcript.

12.212.1 Emacspeak-Xkcd Commands
--------------------------------

12.212.1.1 emacspeak-xkcd-open-explanation-browser
..................................................

 -- Command: emacspeak-xkcd-open-explanation-browser

     Open explanation of current xkcd in default browser


File: emacspeak.info,  Node: emacspeak-xref,  Next: emacspeak-xslt,  Prev: emacspeak-xkcd,  Up: Emacspeak Commands And Options

12.213 emacspeak-xref
=====================

XREF == Cross-references in source code.  This is part of Emacs 25.
This module speech-enables xref


File: emacspeak.info,  Node: emacspeak-xslt,  Next: emacspeak-yaml,  Prev: emacspeak-xref,  Up: Emacspeak Commands And Options

12.214 emacspeak-xslt
=====================

libxml and libxsl are XML libraries for GNOME. xsltproc is a xslt
processor using libxsl this module defines routines for applying xsl
transformations using xsltproc

12.214.1 Emacspeak-Xslt Commands
--------------------------------

12.214.1.1 emacspeak-xslt-view
..............................

 -- Command: emacspeak-xslt-view (style url)

     Browse URL with specified XSL style.

     (fn STYLE URL)

12.214.1.2 emacspeak-xslt-view-file
...................................

 -- Command: emacspeak-xslt-view-file (style file)

     Transform ‘file’ using ‘style’ and preview via browse-url.

     (fn STYLE FILE)

12.214.1.3 emacspeak-xslt-view-region
.....................................

 -- Command: emacspeak-xslt-view-region (style start end &optional
          unescape-charent)

     Browse XML region with specified XSL style.

     (fn STYLE START END &optional UNESCAPE-CHARENT)

12.214.1.4 emacspeak-xslt-view-xml
..................................

 -- Command: emacspeak-xslt-view-xml (style url &optional
          unescape-charent)

     Browse XML URL with specified XSL style.

     (fn STYLE URL &optional UNESCAPE-CHARENT)


File: emacspeak.info,  Node: emacspeak-yaml,  Next: emacspeak-yasnippet,  Prev: emacspeak-xslt,  Up: Emacspeak Commands And Options

12.215 emacspeak-yaml
=====================

YAML == Yet Another Markup Language This module speech-enables
yaml-mode.


File: emacspeak.info,  Node: emacspeak-yasnippet,  Next: espeak-voices,  Prev: emacspeak-yaml,  Up: Emacspeak Commands And Options

12.216 emacspeak-yasnippet
==========================

YASNIPPET == Template based editing using snippets.


File: emacspeak.info,  Node: espeak-voices,  Next: extra-muggles,  Prev: emacspeak-yasnippet,  Up: Emacspeak Commands And Options

12.217 espeak-voices
====================

This module defines the various voices used in voice-lock mode by the
ESpeak TTS engine.

12.217.1 Espeak-Voices Commands
-------------------------------

12.217.1.1 espeak
.................

 -- Command: espeak
     ‘C-e d C-e’
     ‘<fn> d C-e’

     Start ESpeak.

12.217.2 espeak-voices Options
------------------------------

 -- Variable: User Option espeak-default-speech-rate
     Default speech rate for eSpeak.


File: emacspeak.info,  Node: extra-muggles,  Next: g-utils,  Prev: espeak-voices,  Up: Emacspeak Commands And Options

12.218 extra-muggles
====================

MUGGLES == Emacspeak spells for power-users.  These are extra hydras
that I dont use very often, And are being moved here from
emacspeak-muggles to save time at startup.

   This module implements no new functionality — contrast with
emacspeak-wizards.  Instead, it uses package hydra to provide
convenience key-bindings that access existing Emacspeak functionality.

12.218.1 Extra-Muggles Commands
-------------------------------

12.218.1.1 emacspeak-muggles-emacspeak-m-player-mode-map-cmd
............................................................

 -- Command: emacspeak-muggles-emacspeak-m-player-mode-map-cmd
     ‘s-m’

     Temporarily use keymap emacspeak-m-player-mode-map

12.218.1.2 emacspeak-muggles-info-summary/body
..............................................

 -- Command: emacspeak-muggles-info-summary/body

     Call the body in the "emacspeak-muggles-info-summary" hydra.

     The heads for the associated hydra are:

     "]":    ‘Info-forward-node’,
     "[":    ‘Info-backward-node’,
     "n":    ‘Info-next’,
     "p":    ‘Info-prev’,
     "s":    ‘Info-search’,
     "S":    ‘Info-search-case-sensitively’,
     "l":    ‘Info-history-back’,
     "r":    ‘Info-history-forward’,
     "H":    ‘Info-history’,
     "t":    ‘Info-top-node’,
     "<":    ‘Info-top-node’,
     ">":    ‘Info-final-node’,
     "u":    ‘Info-up’,
     "^":    ‘Info-up’,
     "m":    ‘Info-menu’,
     "g":    ‘Info-goto-node’,
     "b":    ‘beginning-of-buffer’,
     "e":    ‘end-of-buffer’,
     "f":    ‘Info-follow-reference’,
     "i":    ‘Info-index’,
     ",":    ‘Info-index-next’,
     "I":    ‘Info-virtual-index’,
     "T":    ‘Info-toc’,
     "d":    ‘Info-directory’,
     "c":    ‘Info-copy-current-node-name’,
     "C":    ‘clone-buffer’,
     "a":    ‘info-apropos’,
     "1":    ‘Info-nth-menu-item’,
     "2":    ‘Info-nth-menu-item’,
     "3":    ‘Info-nth-menu-item’,
     "4":    ‘Info-nth-menu-item’,
     "5":    ‘Info-nth-menu-item’,
     "6":    ‘Info-nth-menu-item’,
     "7":    ‘Info-nth-menu-item’,
     "8":    ‘Info-nth-menu-item’,
     "9":    ‘Info-nth-menu-item’,
     "?":    ‘Info-summary’,
     "h":    ‘Info-help’,
     "q":    ‘quit-window’,
     "C-g":    nil

     The body can be accessed via ‘emacspeak-muggles-info-summary/body’.

12.218.1.3 emacspeak-muggles-m-player/body
..........................................

 -- Command: emacspeak-muggles-m-player/body
     ‘s-;’

     Call the body in the "emacspeak-muggles-m-player" hydra.

     The heads for the associated hydra are:

     ";":    ‘emacspeak-m-player’,
     "+":    ‘emacspeak-m-player-volume-up’,
     ",":    ‘emacspeak-m-player-backward-10s’,
     "%":    ‘emacspeak-m-player-display-percent’,
     "-":    ‘emacspeak-m-player-volume-down’,
     ".":    ‘emacspeak-m-player-forward-10s’,
     "<":    ‘emacspeak-m-player-backward-1min’,
     "<down>":    ‘emacspeak-m-player-forward-1min’,
     "<end>":    ‘emacspeak-m-player-end-of-track’,
     "<home>":    ‘emacspeak-m-player-beginning-of-track’,
     "<left>":    ‘emacspeak-m-player-backward-10s’,
     "<next>":    ‘emacspeak-m-player-forward-10min’,
     "<prior>":    ‘emacspeak-m-player-backward-10min’,
     "<right>":    ‘emacspeak-m-player-forward-10s’,
     "<up>":    ‘emacspeak-m-player-backward-1min’,
     "=":    ‘emacspeak-m-player-volume-up’,
     ">":    ‘emacspeak-m-player-forward-1min’,
     "?":    ‘emacspeak-m-player-display-position’,
     "C":    ‘emacspeak-m-player-clear-filters’,
     "C-m":    ‘emacspeak-m-player-load’,
     "DEL":    ‘emacspeak-m-player-reset-speed’,
     "M-l":    ‘emacspeak-m-player-load-playlist’,
     "O":    ‘emacspeak-m-player-reset-options’,
     "P":    ‘emacspeak-m-player-apply-reverb-preset’,
     "Q":    ‘emacspeak-m-player-quit’,
     "R":    ‘emacspeak-m-player-edit-reverb’,
     "S":    ‘emacspeak-amark-save’,
     "SPC":    ‘emacspeak-m-player-pause’,
     "[":    ‘emacspeak-m-player-slower’,
     "]":    ‘emacspeak-m-player-faster’,
     "a":    ‘emacspeak-m-player-amark-add’,
     "b":    ‘emacspeak-m-player-balance’,
     "c":    ‘emacspeak-m-player-slave-command’,
     "d":    ‘emacspeak-m-player-delete-filter’,
     "e":    ‘emacspeak-m-player-add-equalizer’,
     "f":    ‘emacspeak-m-player-add-filter’,
     "g":    ‘emacspeak-m-player-seek-absolute’,
     "j":    ‘emacspeak-m-player-amark-jump’,
     "l":    ‘emacspeak-m-player-get-length’,
     "m":    ‘emacspeak-m-player-mode-line’,
     "n":    ‘emacspeak-m-player-next-track’,
     "o":    ‘emacspeak-m-player-customize-options’,
     "p":    ‘emacspeak-m-player-previous-track’,
     "q":    ‘bury-buffer’,
     "r":    ‘emacspeak-m-player-seek-relative’,
     "s":    ‘emacspeak-m-player-scale-speed’,
     "t":    ‘emacspeak-m-player-play-tracks-jump’,
     "u":    ‘emacspeak-m-player-url’,
     "v":    ‘emacspeak-m-player-volume-change’,
     "(":    ‘emacspeak-m-player-left-channel’,
     ")":    ‘emacspeak-m-player-right-channel’,
     "{":    ‘emacspeak-m-player-half-speed’,
     "}":    ‘emacspeak-m-player-double-speed’

     The body can be accessed via ‘emacspeak-muggles-m-player/body’.

12.218.1.4 emacspeak-muggles-outliner/body
..........................................

 -- Command: emacspeak-muggles-outliner/body
     ‘C-. o’
     ‘C-' o’
     ‘C-x @ s o’

     Call the body in the "emacspeak-muggles-outliner" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-outliner")’,
     "q":    ‘outline-hide-sublevels’,
     "t":    ‘outline-hide-body’,
     "o":    ‘outline-hide-other’,
     "c":    ‘outline-hide-entry’,
     "l":    ‘outline-hide-leaves’,
     "d":    ‘outline-hide-subtree’,
     "a":    ‘outline-show-all’,
     "e":    ‘outline-show-entry’,
     "i":    ‘outline-show-children’,
     "k":    ‘outline-show-branches’,
     "s":    ‘outline-show-subtree’,
     "u":    ‘outline-up-heading’,
     "n":    ‘outline-next-visible-heading’,
     "p":    ‘outline-previous-visible-heading’,
     "f":    ‘outline-forward-same-level’,
     "b":    ‘outline-backward-same-level’,
     "z":    nil

     The body can be accessed via ‘emacspeak-muggles-outliner/body’.

12.218.1.5 emacspeak-muggles-pianobar-key-map-cmd
.................................................

 -- Command: emacspeak-muggles-pianobar-key-map-cmd
     ‘s-'’

     Temporarily use keymap pianobar-key-map

12.218.1.6 emacspeak-muggles-smartparens/body
.............................................

 -- Command: emacspeak-muggles-smartparens/body
     ‘C-c ,’

     Call the body in the "emacspeak-muggles-smartparens" hydra.

     The heads for the associated hydra are:

     "’":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "’"))’,
     "(":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "("))’,
     "<down>":    ‘sp-splice-sexp-killing-forward’,
     "<left>":    ‘sp-forward-barf-sexp’,
     "<right>":    ‘sp-forward-slurp-sexp’,
     "<up>":    ‘sp-splice-sexp-killing-backward’,
     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-smartparens")’,
     "C-<left>":    ‘sp-backward-barf-sexp’,
     "C-<right>":    ‘sp-backward-slurp-sexp’,
     "R":    ‘sp-splice-sexp’,
     """:    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "\""))’,
     "a":    ‘beginning-of-defun’,
     "b":    ‘sp-backward-sexp’,
     "c":    ‘sp-convolute-sexp’,
     "d":    ‘sp-down-sexp’,
     "e":    ‘end-of-defun’,
     "f":    ‘sp-forward-sexp’,
     "i":    ‘sp-indent-defun’,
     "j":    ‘sp-join-sexp’,
     "k":    ‘sp-kill-sexp’,
     "n":    ‘sp-next-sexp’,
     "p":    ‘sp-previous-sexp’,
     "r":    ‘sp-splice-sexp-killing-around’,
     "s":    ‘sp-split-sexp’,
     "t":    ‘sp-transpose-sexp’,
     "u":    ‘sp-backward-up-sexp’,
     "w":    ‘sp-copy-sexp’,
     "{":    ‘(lambda (_) (interactive "P") (sp-wrap-with-pair "{"))’

     The body can be accessed via ‘emacspeak-muggles-smartparens/body’.

12.218.1.7 emacspeak-muggles-view/body
......................................

 -- Command: emacspeak-muggles-view/body
     ‘C-. v’
     ‘C-' v’
     ‘C-x @ s v’

     Call the body in the "emacspeak-muggles-view" hydra.

     The heads for the associated hydra are:

     "?":    ‘(emacspeak-hydra-self-help "emacspeak-muggles-view")’,
     "$":    ‘set-selective-display’,
     "%":    ‘View-goto-percent’,
     "’":    ‘register-to-point’,
     "(":    ‘backward-sexp’,
     ")":    ‘forward-sexp’,
     ".":    ‘set-mark-command’,
     "/":    ‘View-search-regexp-forward’,
     "<":    ‘beginning-of-buffer’,
     "<return>":    nil,
     "=":    ‘what-line’,
     ">":    ‘end-of-buffer’,
     "@":    ‘View-back-to-mark’,
     "A":    ‘beginning-of-defun’,
     "DEL":    ‘View-scroll-page-backward’,
     "E":    ‘end-of-defun’,
     "J":    ‘(emacspeak-hide-or-expose-block ’all)’,
     "SPC":    ‘View-scroll-page-forward’,
     "[":    ‘backward-page’,
     "\":    ‘View-search-regexp-backward’,
     "]":    ‘forward-page’,
     "a":    ‘move-beginning-of-line’,
     "b":    ‘backward-word’,
     "c":    ‘emacspeak-speak-char’,
     "d":    ‘View-scroll-half-page-forward’,
     "e":    ‘move-end-of-line’,
     "f":    ‘forward-word’,
     "g":    ‘goto-line’,
     "h":    ‘backward-char’,
     "i":    ‘emacspeak-speak-mode-line’,
     "j":    ‘next-line’,
     "k":    ‘previous-line’,
     "l":    ‘forward-char’,
     "m":    ‘point-to-register’,
     "n":    ‘View-search-last-regexp-forward’,
     "p":    ‘View-search-last-regexp-backward’,
     "q":    nil,
     "r":    ‘copy-to-register’,
     "s":    ‘emacspeak-hydra-toggle-talkative’,
     "t":    ‘(recenter 0)’,
     "u":    ‘View-scroll-half-page-backward’,
     "w":    ‘emacspeak-speak-word’,
     "x":    ‘exchange-point-and-mark’,
     "y":    ‘kill-ring-save’,
     "{":    ‘backward-paragraph’,
     "}":    ‘forward-paragraph’

     The body can be accessed via ‘emacspeak-muggles-view/body’.

12.218.1.8 emacspeak-origami/body
.................................

 -- Command: emacspeak-origami/body
     ‘C-, /’
     ‘C-x @ a /’

     Call the body in the "emacspeak-origami" hydra.

     The heads for the associated hydra are:

     "o":    ‘origami-open-node’,
     "c":    ‘origami-close-node’,
     "n":    ‘origami-next-fold’,
     "p":    ‘origami-previous-fold’,
     "f":    ‘origami-forward-toggle-node’,
     "a":    ‘origami-toggle-all-nodes’

     The body can be accessed via ‘emacspeak-origami/body’.


File: emacspeak.info,  Node: g-utils,  Next: gm-nnir,  Prev: extra-muggles,  Up: Emacspeak Commands And Options

12.219 g-utils
==============

Common Code e.g.  helper functions.  Used by modules like gphoto,
gblogger etc.

12.219.1 g-utils Options
------------------------

 -- Variable: User Option g-atom-view-xsl
     XSLT transform to convert Atom feed to HTML.

 -- Variable: User Option g-cookie-jar
     Cookie jar used for Google services.  Customize this to live on
     your local disk.

 -- Variable: User Option g-curl-common-options
     Common options to pass to all Curl invocations.

 -- Variable: User Option g-curl-debug
     Set to T to see Curl stderr output.

 -- Variable: User Option g-xslt-program
     XSLT Processor.


File: emacspeak.info,  Node: gm-nnir,  Next: gmaps,  Prev: g-utils,  Up: Emacspeak Commands And Options

12.220 gm-nnir
==============

Makes search GMail more convenient.  IMap search operators, GMail search
extensions.

12.220.1 Gm-Nnir Commands
-------------------------

12.220.1.1 gm-nnir-group-make-gmail-group
.........................................

 -- Command: gm-nnir-group-make-gmail-group (query)

     Use GMail search syntax exclusively.
     See https://support.google.com/mail/answer/7190?hl=en for syntax.
      note: nnimap-address etc are available as local vars if needed
      in these functions.

     (fn QUERY)


File: emacspeak.info,  Node: gmaps,  Next: ladspa,  Prev: gm-nnir,  Up: Emacspeak Commands And Options

12.221 gmaps
============

Implements the Google Maps API

12.221.1 Gmaps Commands
-----------------------

12.221.1.1 gmaps
................

 -- Command: gmaps
     ‘C-; e’
     ‘C-x @ h e’

     Google Maps Interaction.

     This function has :around advice: ‘ad-Advice-gmaps’.

     (fn)

12.221.1.2 gmaps-bicycling-directions
.....................................

 -- Command: gmaps-bicycling-directions (origin destination)

     Biking directions from Google Maps.

     This function has :around advice: ‘ad-Advice-gmaps-bicycling-directions’.

     (fn ORIGIN DESTINATION)

12.221.1.3 gmaps-directions
...........................

 -- Command: gmaps-directions (origin destination mode)

     Display  directions obtained from Google Maps.

     (fn ORIGIN DESTINATION MODE)

12.221.1.4 gmaps-driving-directions
...................................

 -- Command: gmaps-driving-directions (origin destination)

     Driving directions from Google Maps.

     This function has :around advice: ‘ad-Advice-gmaps-driving-directions’.

     (fn ORIGIN DESTINATION)

12.221.1.5 gmaps-locations-load
...............................

 -- Command: gmaps-locations-load

     Load saved GMaps locations.

12.221.1.6 gmaps-locations-save
...............................

 -- Command: gmaps-locations-save

     Save GMaps Locations.

12.221.1.7 gmaps-mode
.....................

 -- Command: gmaps-mode

     A Google Maps front-end for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘gmaps-mode-hook’, as the final or
     penultimate step during initialization.

     Key             Binding
     ——————————————————————————-
     TAB		forward-button
     SPC		gmaps-place-details
     [		backward-page
     ]		forward-page
     b		gmaps-bicycling-directions
     c		gmaps-set-current-location
     d		gmaps-driving-directions
     f		gmaps-set-current-filter
     n		gmaps-places-nearby
     r		gmaps-set-current-radius
     s		gmaps-places-search
     t		gmaps-transit-directions
     w		gmaps-walking-directions

     M-i		backward-button


12.221.1.8 gmaps-place-details
..............................

 -- Command: gmaps-place-details

     Display details for place at point.
     Insert reviews if already displaying details.

     This function has :around advice: ‘ad-Advice-gmaps-place-details’.

     (fn)

12.221.1.9 gmaps-place-reviews
..............................

 -- Command: gmaps-place-reviews

     Display reviews for place at point.
     Place details need to have been expanded first.

12.221.1.10 gmaps-places-nearby
...............................

 -- Command: gmaps-places-nearby (&optional clear-filter)

     Find places near current location.
     Uses default radius. optional interactive prefix arg clears any active filters.

     This function has :around advice: ‘ad-Advice-gmaps-places-nearby’.

     (fn &optional CLEAR-FILTER)

12.221.1.11 gmaps-places-search
...............................

 -- Command: gmaps-places-search (query &optional clear-filter)

     Perform a places search.
     Use this only if you dont know the locality  of the place you’re looking for.
     Optional  prefix arg clears any active filters.

     This function has :around advice: ‘ad-Advice-gmaps-places-search’.

     (fn QUERY &optional CLEAR-FILTER)

12.221.1.12 gmaps-set-current-filter
....................................

 -- Command: gmaps-set-current-filter (&optional all)

     Set up filter in current buffer.
     Optional interactive prefix arg prompts for all filter fields.

     (fn &optional ALL)

12.221.1.13 gmaps-set-current-location
......................................

 -- Command: gmaps-set-current-location (address)

      Set current location.

     This function has :around advice: ‘ad-Advice-gmaps-set-current-location’.

     (fn ADDRESS)

12.221.1.14 gmaps-set-current-radius
....................................

 -- Command: gmaps-set-current-radius (radius)

     Set current radius

     This function has :around advice: ‘ad-Advice-gmaps-set-current-radius’.

     (fn RADIUS)

12.221.1.15 gmaps-transit-directions
....................................

 -- Command: gmaps-transit-directions (origin destination)

     Transit directions from Google Maps.

     This function has :around advice: ‘ad-Advice-gmaps-transit-directions’.

     (fn ORIGIN DESTINATION)

12.221.1.16 gmaps-walking-directions
....................................

 -- Command: gmaps-walking-directions (origin destination)

     Walking directions from Google Maps.

     This function has :around advice: ‘ad-Advice-gmaps-walking-directions’.

     (fn ORIGIN DESTINATION)

12.221.2 gmaps Options
----------------------

 -- Variable: User Option gmaps-api-key
     Maps API key — goto https://code.google.com/apis/console to get
     one.

 -- Variable: User Option gmaps-my-address
     Location address.  Setting this updates gmaps-my-location
     coordinates via geocoding.


File: emacspeak.info,  Node: ladspa,  Next: mac-voices,  Prev: gmaps,  Up: Emacspeak Commands And Options

12.222 ladspa
=============

This module uses tools from the Ladspa SDK to expose Ladspa plugins in a
consistent way to elisp.  The goal is to make it easy to inspect Ladspa
Plugins, And invoke them easily from Ladspa host applications such as
MPlayer.  See
<http://emacspeak.blogspot.com/2015/12/a-ladspa-work-bench-for-emacspeak.html>

12.222.1 Ladspa Commands
------------------------

12.222.1.1 ladspa
.................

 -- Command: ladspa (&optional refresh)

     Ladspa workbench.

     (fn &optional REFRESH)

12.222.1.2 ladspa-analyse-plugin-at-point
.........................................

 -- Command: ladspa-analyse-plugin-at-point

     Analyse plugin at point.

12.222.1.3 ladspa-edit-control
..............................

 -- Command: ladspa-edit-control

     Edit Ladspa control  at point by prompting for control values.

12.222.1.4 ladspa-instantiate
.............................

 -- Command: ladspa-instantiate

     Instantiate plugin at point by prompting for control values.

12.222.1.5 ladspa-mode
......................

 -- Command: ladspa-mode

     A Ladspa workbench for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘ladspa-mode-hook’, as the final or
     penultimate step during initialization.

     Key             Binding
     ——————————————————————————-
     RET		ladspa-instantiate
     SPC		ladspa-analyse-plugin-at-point
     a		emacspeak-m-player-add-ladspa
     d		emacspeak-m-player-delete-ladspa
     e		ladspa-edit-control
     n		next-line
     p		previous-line



File: emacspeak.info,  Node: mac-voices,  Next: outloud-voices,  Prev: ladspa,  Up: Emacspeak Commands And Options

12.223 mac-voices
=================

This module defines the various voices used in voice-lock mode by Mac
TTS.

12.223.1 mac-voices Options
---------------------------

 -- Variable: User Option mac-default-speech-rate
     Default speech rate for mac.


File: emacspeak.info,  Node: outloud-voices,  Next: plain-voices,  Prev: mac-voices,  Up: Emacspeak Commands And Options

12.224 outloud-voices
=====================

Interface to outloud server.  This module is IBM ViaVoice Outloud
specific.

12.224.1 Outloud-Voices Commands
--------------------------------

12.224.1.1 outloud
..................

 -- Command: outloud (&optional device)
     ‘C-e d C-o’
     ‘<fn> d C-o’

     Start Outloud.

     (fn &optional DEVICE)

12.224.2 outloud-voices Options
-------------------------------

 -- Variable: User Option outloud-default-speech-rate
     Default speech rate.


File: emacspeak.info,  Node: plain-voices,  Next: soundscape,  Prev: outloud-voices,  Up: Emacspeak Commands And Options

12.225 plain-voices
===================

This module defines the various voices used in voice-lock mode.  This
module is Plain i.e.  suitable for a device for which you haven’t yet
implemented appropriate voice-locking controls


File: emacspeak.info,  Node: soundscape,  Next: sox,  Prev: plain-voices,  Up: Emacspeak Commands And Options

12.226 soundscape
=================

Soundscapes <https://en.wikipedia.org/wiki/Soundscape> define an
acoustic environment.  Boodler at <http://boodler.org> is a Python-based
SoundScape generator.  To use this module, first install boodler.  Then
install the soundscape packages (*.boop) files available at
<http://boodler.org/lib>.  Make sure boodler works and produces audio in
your environment.  finally install the Boodler packages from
emacspeak/scapes from the Emacspeak GitHub repository by running ‘cd
emacspeak/scapes; make ’

   When boodler is set up and all packages installed, copy file
emacspeak/scapes/soundscapes to ~/.boodler/Collection.  The above file
lists all installed SoundScapes.  Directory emacspeak/scapes also
contains additional Boodler Agents and SoundScapes that I have created
for use with Emacspeak.

   Module soundscape.el defines Emacs conveniences for running

12.226.1 Soundscape Commands
----------------------------

12.226.1.1 soundscape
.....................

 -- Command: soundscape (scape)
     ‘C-. s’
     ‘C-' s’
     ‘C-x @ s s’

     Play soundscape.

     (fn SCAPE)

12.226.1.2 soundscape-kill
..........................

 -- Command: soundscape-kill

     Stop all running soundscapes.

12.226.1.3 soundscape-listener
..............................

 -- Command: soundscape-listener (&optional restart)

     Start  a Soundscape listener.
     Listener is loaded with all Soundscapes defined in ‘soundscape-default-theme’ .
     Optional interactive prefix arg restarts the listener.

     (fn &optional RESTART)

12.226.1.4 soundscape-listener-shutdown
.......................................

 -- Command: soundscape-listener-shutdown

     Shutdown listener.

12.226.1.5 soundscape-remote
............................

 -- Command: soundscape-remote (names)

     Activate scapes named ‘names’ — a list of strings.

     (fn NAMES)

12.226.1.6 soundscape-restart
.............................

 -- Command: soundscape-restart (&optional prompt)
     ‘C-. r’
     ‘C-' r’
     ‘C-x @ s r’

     Restart Soundscape  environment.
     With prefix arg ‘prompt’, prompt for a alsa/ladspa device and volume.
     The  is then saved to soundscape-device for future use.

     (fn &optional PROMPT)

12.226.1.7 soundscape-stop
..........................

 -- Command: soundscape-stop (scape)

     Stop running Soundscape.

     (fn SCAPE)

12.226.1.8 soundscape-theme
...........................

 -- Command: soundscape-theme

     Shows default theme in a special buffer.

12.226.1.9 soundscape-toggle
............................

 -- Command: soundscape-toggle
     ‘C-. t’
     ‘C-' t’
     ‘C-x @ s t’

     Toggle automatic SoundScapes.
     Run command M-x soundscape-theme to see the default mode->mood mapping.

12.226.1.10 soundscape-update-mood
..................................

 -- Command: soundscape-update-mood (&optional prompt-mode)
     ‘C-. u’
     ‘C-' u’
     ‘C-x @ s u’

     Update mood/scape mapping for current  mode.
     The  updated mapping is not persisted.
     Optional interactive prefix arg ‘prompt-mode’ prompts for the mode.

     (fn &optional PROMPT-MODE)

12.226.2 soundscape Options
---------------------------

 -- Variable: User Option soundscape-data
     Soundscape data directory.

 -- Variable: User Option soundscape-device
     Alsa sound device to use for soundscapes.

 -- Variable: User Option soundscape-idle-delay
     Number of seconds of idle time before soundscapes are synchronized
     with current mode.

 -- Variable: User Option soundscape-manager-options
     User customizable options list passed to boodler.  Defaults specify
     alsa as the output and set master volume


File: emacspeak.info,  Node: sox,  Next: sox-gen,  Prev: soundscape,  Up: Emacspeak Commands And Options

12.227 sox
==========

This module defines a convenient speech-enabled interface for editing
mp3 and wav files using SoX.

   Launching M-x sox creates a special interaction buffer that provides
single keystroke commands for editing and applying effects to a selected
sound file.  For adding mp3 support to sox, do

   sudo apt-get libsox-fmt-mp3 install

   This module provides support for ladspa effects using module
ladspa.el.  To use ladspa effects with SoX, you need a relatively new
build of Sox; The stock SoX that is package for Debian/Ubuntu does not
always work.  This module can be used independent of Emacspeak.

12.227.1 Sox Commands
---------------------

12.227.1.1 sox-add-effect
.........................

 -- Command: sox-add-effect (name)

     Adds  effect at the end of the effect list

     (fn NAME)

12.227.1.2 sox-delete-effect-at-point
.....................................

 -- Command: sox-delete-effect-at-point

     Delete effect at point.

     This function has :around advice: ‘ad-Advice-sox-delete-effect-at-point’.

     (fn)

12.227.1.3 sox-edit-effect-at-point
...................................

 -- Command: sox-edit-effect-at-point

     Edit effect at point.

12.227.1.4 sox-mode
...................

 -- Command: sox-mode

     An audio workbench for the Emacspeak desktop.

     In addition to any hooks its parent mode ‘special-mode’ might have
     run, this mode runs the hook ‘sox-mode-hook’, as the final or
     penultimate step during initialization.


12.227.1.5 sox-open-file
........................

 -- Command: sox-open-file (snd-file)

     Open specified snd-file on the Audio Workbench.

     This function has :around advice: ‘ad-Advice-sox-open-file’.

     (fn SND-FILE)

12.227.1.6 sox-play
...................

 -- Command: sox-play

     Play sound .

12.227.1.7 sox-refresh
......................

 -- Command: sox-refresh

     Redraw Audio Workbench.

     This function has :around advice: ‘ad-Advice-sox-refresh’.

     (fn)

12.227.1.8 sox-save
...................

 -- Command: sox-save (save-file)

     Save context to  file after prompting.

     (fn SAVE-FILE)

12.227.1.9 sox-set-effect
.........................

 -- Command: sox-set-effect (name)

     Set effect.

     (fn NAME)

12.227.1.10 sox-show-timestamp
..............................

 -- Command: sox-show-timestamp

     Show timestamp   in stream.

12.227.1.11 sox-stop
....................

 -- Command: sox-stop

     Stop currently playing  sound from current context.


File: emacspeak.info,  Node: sox-gen,  Next: tetris,  Prev: sox,  Up: Emacspeak Commands And Options

12.228 sox-gen
==============

Provides binaural audio along with pre-defined themes.  This module can
be used independent of Emacspeak.

12.228.1 Binaural Beats Using SoX
---------------------------------

A binaural beat is an auditory illusion perceived when two different
pure-tone sine waves, both with frequencies lower than 1500 Hz, with
less than a 40 Hz difference between them, are presented to a listener
dichotically (one through each ear).  For example, if a 530 Hz pure tone
is presented to a subject’s right ear, while a 520 Hz pure tone is
presented to the subject’s left ear, the listener will perceive the
auditory illusion of a third tone, in addition to the two pure-tones
presented to each ear.  The third sound is called a binaural beat, and
in this example would have a perceived pitch correlating to a frequency
of 10 Hz, that being the difference between the 530 Hz and 520 Hz pure
tones presented to each ear.  For more details, see
<https://en.wikipedia.org/wiki/Binaural_beats>.

   This module implements a set of user-facing commands for generating
binaural beats.  The commands are organized from high-level commands
that play predefined binaural beats to lower-level commands that can be
used to create new effect sequences.

   All binaural beat sequences are played with a relatively low gain —
they are designed to be heard in the background and when effective blend
fully into the background.  You can increase the overall volume of all
binaural beat sequences by customizing
 -- Variable: User Option sox-binaural-gain-offset to a positive value
   — default is 0.

12.228.1.1 High-Level Commands For Pre-Defined Binaural Beats
.............................................................

These commands can be called directly to play one of the predefined
binaural beats.

   • ‘sox-rev-up’: A set of binaural beats designed for use at the start
     of the day.  Transitions from _Dream_ -> _Think_ ->_Act_ ->
     _Focus_.
   • ‘sox-wind-down’: A set of binaural beats for winding down at the
     end of the day.  This can be thought of as the reverse of
     ‘sox-rev-up’ and the sequence transitions from _Act_ -> _Think_ ->
     _Dream_ ->_Sleep_.
   • ‘sox-turn-down’: Designed for falling asleep.  This sequence starts
     with a short period of _Dream_ before moving to _Sleep_.
   • ‘sox-relax’: A variant of the previous sequence, ‘sox-relax’ spends
     equal time in _Dream_ and _Sleep_.
   • ‘sox-binaural’: Provide a completion-based front-end to playing any
     one of the predefined binaural effects (_Delta_, _Theta_, _Alpha_,
     _Beta_, or _Gamma_.  The previously defined sequences are built up
     using these effects.
   • ‘sox-beats-binaural’: Plays a collection of binaural beats,
     prompting for carrier and beat frequencies for each tone.  The
     predefined sequences listed earlier were created after first
     generating experimental beat-sequences using this command.
   • ‘sox-slide-binaural’: Prompts for two binaural effects (see above)
     and generates a binaural beat that _slides_ from the first effect
     to the second over a specified duration.
   • ‘sox-chakras’: Pick amongst one of a predefined set of sequences
     designed for _Chakra_ meditation.
   • ‘sox-tone-binaural’: Generate a simple binaural beat with a single
     carrier frequency.
   • ‘sox-tone-slide-binaural’: Generate a tone that slides from one
     binaural beat to another.

12.228.2 Sox-Gen Commands
-------------------------

12.228.2.1 sox-beats-binaural
.............................

 -- Command: sox-beats-binaural (length beat-spec-list gain)

     Play binaural audio with beat-spec specifying the various tones.
     Param ‘beat-spec-list’ is a list of ‘(carrier beat) tuples.

     (fn LENGTH BEAT-SPEC-LIST GAIN)

12.228.2.2 sox-binaural
.......................

 -- Command: sox-binaural (name duration)
     ‘C-, b’
     ‘C-x @ a b’

     Play specified binaural effect.

     (fn NAME DURATION)

12.228.2.3 sox-chakras
......................

 -- Command: sox-chakras (theme duration)

     Play each chakra for specified duration.
     Parameter ‘theme’ specifies variant.

     (fn THEME DURATION)

12.228.2.4 sox-relax
....................

 -- Command: sox-relax (length)

     Play relax set of  binaural beats for ‘length’ seconds.

     (fn LENGTH)

12.228.2.5 sox-rev-up
.....................

 -- Command: sox-rev-up (length)

     Play rev-up set of  binaural beats for ‘length’ seconds.

     (fn LENGTH)

12.228.2.6 sox-slide-binaural
.............................

 -- Command: sox-slide-binaural (name-1 name-2 duration)

     Play specified binaural slide from ‘name-1’ to ‘name-2’.

     (fn NAME-1 NAME-2 DURATION)

12.228.2.7 sox-tone-binaural
............................

 -- Command: sox-tone-binaural (length freq beat gain)

     Play binaural audio with carrier frequency ‘freq’, beat ‘beat’, and
     gain ‘gain’.

     (fn LENGTH FREQ BEAT GAIN)

12.228.2.8 sox-tone-slide-binaural
..................................

 -- Command: sox-tone-slide-binaural (length freq beat-start beat-end
          gain)

     Play binaural audio with carrier frequency ‘freq’, beat
     ‘beat-start’ -> ‘beat-end’, and gain ‘gain’.

     (fn LENGTH FREQ BEAT-START BEAT-END GAIN)

12.228.2.9 sox-turn-down
........................

 -- Command: sox-turn-down (length)

     Play turn-down set of  binaural beats for ‘length’ seconds.

     (fn LENGTH)

12.228.2.10 sox-wind-down
.........................

 -- Command: sox-wind-down (length)

     Play wind-down set of  binaural beats for ‘length’ seconds.

     (fn LENGTH)

12.228.3 sox-gen Options
------------------------

 -- Variable: User Option sox-binaural-gain-offset
     User specified offset that is added to default gain when generating
     tones using SoX, e.g., for binaural beats.

 -- Variable: User Option sox-binaural-slider-scale
     Scale factor used to compute slide duration when moving from one
     binaural beat to another.


File: emacspeak.info,  Node: tetris,  Next: toy-braille,  Prev: sox-gen,  Up: Emacspeak Commands And Options

12.229 tetris
=============


File: emacspeak.info,  Node: toy-braille,  Next: voice-defs,  Prev: tetris,  Up: Emacspeak Commands And Options

12.230 toy-braille
==================

This is a bit of toy code to write in braille.  To try this, load this
file (‘M-x load-file path/to/toy-braille.el’), then do:

   M-: (get-toy-braille-string "just a test")

   That’s just a toy, meant as an excuse and maybe a tool to learn a bit
of braille, nothing more.

   Unicode fonts are needed.

   You can try:

   M-: (set-default-font "-*-unifont-*-*-*-*-*-*-*-*-*-*-*-*")

   or

   M-: (set-default-font "-*-clearlyu-*-*-*-*-*-*-*-*-*-*-iso10646-*")

   (it will only work if the relative font is installed and properly
configured).

   References:

   http://www.nbp.org/ic/nbp/braille/index.html

   http://www.unicode.org/Public/4.0-Update1/UnicodeData-4.0.1.txt


File: emacspeak.info,  Node: voice-defs,  Next: voice-setup,  Prev: toy-braille,  Up: Emacspeak Commands And Options

12.231 voice-defs
=================

Contains just the voice definitions.  Voices are defined using the macro
‘defvoice’ from module voice-setup.

12.231.1 An Overview Of Voice Design
------------------------------------

Aural CSS defines 4 primary device-independent dimensions.
Average-Pitch, Pitch-Range, Stress, and Richness.  There are ten
possible values along each dimension (0..9), giving a total of 10,000
possible settings.

   Engine-specific modules such as dectalk-voices and outloud-voices map
these dimensions to device-specific parameters and are responsible for
generating the final device-specific codes.

12.231.2 Creating Distinct Voices Via Aural CSS
-----------------------------------------------

Along each dimension, a setting of 5 is mapped to the default setting
for the voice as implemented by a given engine.  Values on either side
of 5 produce opposing effects.  This module defines the following
effects, which can be conceptualized as pairs.
  A. bolden , lighten
  B. animate, monotone
  C. brighten, smoothen
   In addition, we define ‘bolden-and-animate’ as an auditory analog of
‘bold-italic’.  The two additional voices ‘indent’ and ‘annotate’
predate the above and are retained as two _softer_ voices.  Finally,
there are 4 _overlay_ voices, corresponding to the 4 dimensions; these
each set one of the dimensions to ‘8’.  Thus, we have a total of 25
unique voices defined in this module.

12.231.3 Things to note
-----------------------

   • These voices are designed to be distinctive when used in a given
     utterance.
   • Non-goal — to be able to identify each distinct voice in isolation.
   • Audio-formatting is designed to set apart different types of
     content so that when used in context, one can easily pick-out
     distinct parts of the utterance.

12.231.4 voice-defs Options
---------------------------

 -- Variable: User Option voice-animate-extra-settings
     Settings for voice-animate-extra

 -- Variable: User Option voice-animate-medium-settings
     Settings for voice-animate-medium

 -- Variable: User Option voice-animate-settings
     Settings for voice-animate

 -- Variable: User Option voice-annotate-settings
     Settings for voice-annotate

 -- Variable: User Option voice-bolden-and-animate-settings
     Settings for voice-bolden-and-animate

 -- Variable: User Option voice-bolden-extra-settings
     Settings for voice-bolden-extra

 -- Variable: User Option voice-bolden-medium-settings
     Settings for voice-bolden-medium

 -- Variable: User Option voice-bolden-settings
     Settings for voice-bolden

 -- Variable: User Option voice-brighten-extra-settings
     Settings for voice-brighten-extra

 -- Variable: User Option voice-brighten-medium-settings
     Settings for voice-brighten-medium

 -- Variable: User Option voice-brighten-settings
     Settings for voice-brighten

 -- Variable: User Option voice-indent-settings
     Settings for voice-indent

 -- Variable: User Option voice-lighten-extra-settings
     Settings for voice-lighten-extra

 -- Variable: User Option voice-lighten-medium-settings
     Settings for voice-lighten-medium

 -- Variable: User Option voice-lighten-settings
     Settings for voice-lighten

 -- Variable: User Option voice-monotone-extra-settings
     Settings for voice-monotone-extra

 -- Variable: User Option voice-monotone-medium-settings
     Settings for voice-monotone-medium

 -- Variable: User Option voice-monotone-settings
     Settings for voice-monotone

 -- Variable: User Option voice-overlay-0-settings
     Settings for voice-overlay-0

 -- Variable: User Option voice-overlay-1-settings
     Settings for voice-overlay-1

 -- Variable: User Option voice-overlay-2-settings
     Settings for voice-overlay-2

 -- Variable: User Option voice-overlay-3-settings
     Settings for voice-overlay-3

 -- Variable: User Option voice-smoothen-extra-settings
     Settings for voice-smoothen-extra

 -- Variable: User Option voice-smoothen-medium-settings
     Settings for voice-smoothen-medium

 -- Variable: User Option voice-smoothen-settings
     Settings for voice-smoothen


File: emacspeak.info,  Node: voice-setup,  Next: xbacklight,  Prev: voice-defs,  Up: Emacspeak Commands And Options

12.232 voice-setup
==================

A voice is to audio as a font is to a visual display.  A personality is
to audio as a face is to a visual display.

   Voice-lock-mode is a minor mode that causes your comments to be
spoken in one personality, strings in another, reserved words in
another, documentation strings in another, and so on.

   Comments will be spoken in ‘voice-comment-personality’.  Strings will
be spoken in ‘voice-string-personality’.  Function (in their defining
forms) will be spoken in ‘voice-function-name-personality’.  Reserved
words will be spoken in ‘voice-keyword-personality’.

   To audio-format text , use M-x voice-lock-mode.  When this minor mode
is on, the voices of the current line are updated with every insertion
or deletion.

12.232.1 Voice-Lock And Aural CSS
---------------------------------

The CSS Speech Style Sheet specification defines a number of abstract
device independent voice properties.  A setting conforming to the CSS
speech specification can be represented in elisp as a structure.

   We will refer to this structure as a "speech style".  This structure
needs to be mapped to device dependent codes to produce the desired
effect.  This module forms a bridge between emacs packages that wish to
implement audio formatting and Emacspeak’s TTS module.  Emacspeak
produces voice change effects by examining the value of text-property
’personality’, as well as the face/font at point.

   Think of a buffer of formatted text along with the text-property
’personality appropriately set as a "aural display list".  Module
voice-setup.el help applications like EWW produce audio-formatted output
by calling function voice-acss-from-speech-style with a "speech-style"
–a structure as defined in this module and get back a symbol that they
assign to the value of property ’personality.  Emacspeak’s rendering
engine then does the needful at the time speech is produced.  Function
voice-acss-from-speech-style does the following: Takes as input a
"speech style" (1) Computes a symbol that will be used to refer to this
specific speech style.  (2) Examines emacspeak’s internal voice table to
see if this speech style has a voice already defined.  If so it returns
immediately.  Otherwise, it does the additional work of defining a
-voice for future use.  See its use in this module to see how voices are
defined independent of a given TTS engine.  How faces map to voices: TTS
engine specific modules e.g., dectalk-voices.el and outloud-voices.el
map ACSS dimensions to engine-specific codes.  Emacspeak modules use
voice-setup-add-map when defining face->personality mappings.  For use
from other modules.

12.232.2 Voice-Setup Commands
-----------------------------

12.232.2.1 voice-lock-mode
..........................

 -- Command: voice-lock-mode (&optional arg)
     ‘C-e d v’
     ‘<fn> d v’

     Toggle voice lock mode.

     This is a minor mode.  If called interactively, toggle the
     ‘Voice-Lock mode’ mode.  If the prefix argument is positive,
     enable the mode, and if it is zero or negative, disable the mode.

     If called from Lisp, toggle the mode if ARG is ‘toggle’.  Enable
     the mode if ARG is nil, omitted, or is a positive number.
     Disable the mode if ARG is a negative number.

     To check whether the minor mode is enabled in the current buffer,
     evaluate ‘voice-lock-mode’.

     The mode’s hook is called both when the mode is enabled and when
     it is disabled.

     (fn &optional ARG)

12.232.2.2 voice-lock-mode–turn-on
..................................

 -- Command: voice-lock-mode--turn-on

     Turn on Voice Lock mode .

12.232.2.3 voice-setup-toggle-silence-personality
.................................................

 -- Command: voice-setup-toggle-silence-personality
     ‘C-e M-q’
     ‘<fn> M-q’

     Toggle audibility of personality under point  .

12.232.3 voice-setup Options
----------------------------

 -- Variable: User Option voice-lock-mode-hook
     Hook run after entering or leaving ‘voice-lock-mode’.  No problems
     result if this variable is not bound.  ‘add-hook’ automatically
     binds it.  (This is true for all hook variables.)


File: emacspeak.info,  Node: xbacklight,  Next: URL Templates,  Prev: voice-setup,  Up: Emacspeak Commands And Options

12.233 xbacklight
=================

Provide an emacs front-end to xbacklight.  This is a tool that controls
the brightness on laptops.  To install xbacklight, sudo apt-get install
xbacklight

12.233.1 Xbacklight Commands
----------------------------

12.233.1.1 xbacklight-black
...........................

 -- Command: xbacklight-black

     Black screen.

12.233.1.2 xbacklight-decrement
...............................

 -- Command: xbacklight-decrement

     Decrease brightness.

12.233.1.3 xbacklight-get
.........................

 -- Command: xbacklight-get

     Get  brightness level.

12.233.1.4 xbacklight-increment
...............................

 -- Command: xbacklight-increment

     Increase brightness.

12.233.1.5 xbacklight-set
.........................

 -- Command: xbacklight-set (brightness)

     Set brightness.

     (fn BRIGHTNESS)

12.233.1.6 xbacklight-white
...........................

 -- Command: xbacklight-white

     White screen.


File: emacspeak.info,  Node: URL Templates,  Prev: xbacklight,  Up: Emacspeak Commands And Options

12.234 URL Templates
====================

This section documents a total of 74 URL Templates.

   All of these URL templates can be invoked via command ‘M-x
emacspeak-url-template-fetch’ normally bound to ‘C-e u <fn> u’.  This
command prompts for the name of the template, and completion is
available via Emacs’ minibuffer completion.  Each URL template carries
out the following steps:
   • Prompt for the relevant information.
   • Fetch the resulting URL using an appropriate fetcher.
   • Set up the resulting resource with appropriate customizations.

  1. AQI From Wunderground

     Air quality from Wunderground
  2. Air Traffic Control

     Find live streams for Air Traffic Control.
  3. Airport conditions

     Display airport conditions from the FAA.
  4. Amazon Product Details By ASIN

     Retrieve product details from Amazon by either ISBN or ASIN.
  5. Anonymize Google Search

     Logout from Google to do an anonymous search.
  6. ArchWiki Search

     Search Linux ArchWiki
  7. BBC Podcast Directory

     BBC PodCast Directory
  8. BBC World News Summary

     BBC World News Summary
  9. Baseball Box Scores

     Display baseball Play By Play.
  10. Baseball Game Details

     Display baseball Play By Play.
  11. Baseball Game Index

     Display baseball Play By Play.
  12. Baseball Highlights

     Display baseball Video Highlights.
  13. Baseball scores

     Display baseball scores.
  14. Bing News

     Bing News results as RSS feed.
  15. Bing Search

     Bing results as RSS feed.
  16. Bloomberg Stock Lookup

     Lookup Stock Quote information on Bloomberg.  Ticker is of the form
     goog:us
  17. CIA World Fact Book

     Open CIA World Fact Book For Specified Country.
  18. CNBC Using EAF

     Play CNBC Using EAF
  19. CNN Content

     Filter down to CNN content area.
  20. CNN Headlines

     News Headlines From CNN
  21. CNN Market Data

     Market data filtered from CNN Money
  22. Cricinfo Print

     Printer friendly link on Cricinfo
  23. Dictionary Lookup

     Dictionary Lookup
  24. Finance Google

     Lookup ticker on Google Finance.
  25. Finance Summary From Google

     Display top stocks from Google Finance.
  26. FreeSound

     Search FreeSound.
  27. GitHub Search

     Perform a GitHub Search.
  28. GoLang Browse

     Browse GoLang package documentation.
  29. GoLang Lookup

     Lookup GoLang package documentation.
  30. GoLang Search

     Search GoLang package documentation.
  31. Google Basic

     Light-weight Google search.
  32. Google News Search

     Search Google news.
  33. Google Scholar

     Google Scholar Search
  34. Google Trends

     Google Trends
  35. Google Weather

     Light-weight Google search.
  36. Guardian RSS Feeds Directory

     Guardian Feeds Directory
  37. Hacker News Frontpage

     Display Hacker News Front Page
  38. Hacker News Search

     Display Hacker News Front Page
  39. Hoogle Haskell API Search

     Haskell API Search against a local server.
  40. MLB Scorecard

     Show MLB Scorecard.
  41. MLB standings

     Display MLB standings.
  42. Money Headlines From CNN

     Money Headlines From CNN
  43. NBA standings

     Display NBA standings.
  44. NLS Bard Bookshelf

     NLS Bard Catalog: Most Popular.  Login once before using this
     template.
  45. NLS Bard Popular

     NLS Bard Catalog: Most Popular.  Login once before using this
     template.
  46. NLS Bard Recent

     NLS Bard Catalog: Recently Added.  Login once before using this
     template.
  47. NLS Bard Search

     Search NLS Bard Catalog.  Login once before using this template.
  48. NY Times Mobile

     NYTimes Mobile Site
  49. Old Time Radio

     This months Old Time Radio Programming
  50. OpenLibrary

     Open Library Search
  51. Patent Search From Google

     Perform patent search via Google
  52. RadioTime Browser

     RadioTime Entry point.
  53. RadioTime Categories

     RadioTime Categories .
  54. RadioTime Search

     RadioTime Search.
  55. Reddit At Point.

     Open RSS Feed for Reddit URL under point.
  56. Reddit By Topic.

     Open RSS Feed for Reddit Topic.
  57. Reddit Front Page.

     Open Feed for Reddit Front Page.
  58. Reddit Search.

     Reddit Search Results Feed.
  59. Seeking Alpha Stock Search

     Seeking Alpha search.
  60. Sign in to Google

     Login to Google.
  61. StreamWorld Radio

     Play radio stream.  Example: kcbsFM. Format is stationid+AM/FM.
  62. Tech News From CNet

     Display tech news from CNET
  63. TuneIn Radio

     Translate StreamId to playable stream.
  64. Washington Post

     Washington Post Contents
  65. Wiki Data Search

     Search WikiData.
  66. WordNet Search

     Look up term in WordNet.
  67. Yahoo RSSNews

     News From Yahoo As RSS.
  68. html Google News Search

     Search Google news.
  69. sourceforge Download

     Download specified file.
  70. sourceforge browse mirrors

     Retrieve download page at Sourceforge for specified project.
  71. sourceforge project

     Open specified project page at SourceForge.
  72. w3c IRC Logs

     Use this to pull up the archived logs from the W3C IRC. You need to
     know the exact name of the channel.
  73. w3c Lists

     Use this to pull up the archived mail from the W3C list.  You need
     to know the exact name of the list.
  74. world CNN Content

     Filter down to CNN content area.


File: emacspeak.info,  Node: Emacspeak Keyboard Commands,  Next: TTS Servers,  Prev: Emacspeak Commands And Options,  Up: Top

13 Emacspeak Keyboard Commands.
*******************************

This chapter gives an overview of all the keymaps used by Emacspeak.
For a complete reference, see *Note emacspeak::.  For basic usage, see
*Note Basic Usage::.

   Emacspeak uses the following keymaps, each of which are invoked by a
specific prefix key.
‘C-e’
     The main Emacspeak keymap.
‘C-e d’
     The text-to-speech keymap.
‘C-;’
     The Emacspeak hyper keymap.
‘C-'’
     The emacspeak super keymap.
‘C-,’
     The Emacspeak alt keymap.
‘C-.’
     The Emacspeak super keymap.
‘C-e x’
     The emacspeak ‘x’ keymap.
‘C-e C-x’
     The Emacspeak ‘C-x’ keymap.

   Primary Emacspeak commands start with ‘C-e’.  Following ‘C-e’ with
‘d’ invokes commands that control the text-to-speech engine.  Note that
silencing speech is an exception to this rule — Speech silence commands
are placed directly on the primary emacspeak-keymap (‘C-e s’ and ‘C-e
.’).

   In addition, Emacspeak introduces five additional keymaps for binding
its extensive set of facilities to convenient keystrokes.

   When running under a windowing system, Emacs automatically receives
keys ‘C-;’, ‘C-'’, ‘C-,’ and ‘C-.’.  When running on the Linux console,
these keys become available after loading the custom Linux keymap found
in ‘emacspeak/tvr/console-keymaps’ after checking out the emacspeak
repository from <https://github.com/tvraman/emacspeak>.

   Emacspeak defines personal keymaps accessible via ‘C-e x’ and ‘C-e
C-x’.  For now, emacspeak does not bind any commands in keymap ‘C-e C-x’
— this keymap is left for end-user personalization.

   Note that the information presented in the following subsections can
also be viewed via Emacs’ built-in Help system; e.g., Press ‘C-; C-h’ to
get a ‘*Help*’ buffer that displays all keys bound in
‘emacspeak-hyper-keymap’.


File: emacspeak.info,  Node: TTS Servers,  Next: Emacspeak At Twenty,  Prev: Emacspeak Keyboard Commands,  Up: Top

14 TTS Servers
**************

Emacspeak produces spoken output by communicating with one of many
speech servers.  This section documents the communication protocol
between the client application i.e.  Emacspeak, and the TTS (Text to
Speech) server.  This section is primarily intended for developers
wishing to:

   • Create new speech servers that comply with this communication
     protocol

   • Developers of other client applications who wish to use the various
     Emacspeak speech servers.

   For additional notes on how to log and view TTS server commands when
developing a speech server, see
<http://emacspeak.blogspot.com/2015/04/howto-log-speech-server-output-to-aid.html>.

14.1 High-level Overview
========================

The TTS server reads commands from standard input, and script
_speech-server_ can be used to cause a TTS server to communicate via a
TCP socket.  Speech server commands are used by the client application
to make specific requests of the server; the server listens for these
requests in a non-blocking read loop and executes requests as they
become available.  Requests can be classified as follows:

   • Commands that send text to be spoken.

   • Commands that set _state_ of the TTS server.

   All commands are of the form

     commandWord {arguments}

   The braces are optional if the command argument contains no white
space.  The speech server maintains a _current state_ that determines
various characteristics of spoken output such as speech rate,
punctuations mode etc.  (see set of commands that manipulate speech
state for complete list).  The client application _queues_ The text and
non-speech audio output to be produced before asking the server to
_dispatch_ the set of queued requests, i.e.  start producing output.

   Once the server has been asked to produce output, it removes items
from the front of the queue, sends the requisite commands to the
underlying TTS engine, and waits for the engine to acknowledge that the
request has been completely processed.  This is a non-blocking
operation, i.e., if the client application generates additional
requests, these are processed _immediately_.

   The above design allows the Emacspeak TTS server to be _highly_
responsive; Client applications can queue large amounts of text
(typically queued a clause at a time to achieve the best prosody), ask
the TTS server to start speaking, and interrupt the spoken output at any
time.

14.1.1 Commands That Queue Output.
----------------------------------

This section documents commands that either produce spoken output, or
queue output to be produced on demand.  Commands that place the request
on the queue are clearly marked.

     version

   Speaks the _version_ of the TTS engine.  Produces output immediately.

     tts_say text

   Speaks the specified _text_ immediately.  The text is not
pre-processed in any way, contrast this with the primary way of speaking
text which is to queue text before asking the server to process the
queue.

   Note that this command needs to handle the special syntax for
morpheme boundaries ‘[*]’.  The ‘[*]’ syntax is specific to the Dectalk
family of synthesizers; servers for other TTS engines need to map this
pattern to the engine-specific code for each engine.  As an example, see
‘servers/outloud’ A morpheme boundary results in synthesizing compound
words such as _left bracket_ with the right intonation; using a space
would result in that phrase being synthesized as two separate words.

     l c

   Speak _c_ a single character, as a letter.  The character is spoken
immediately.  This command uses the TTS engine’s capability to speak a
single character with the ability to flush speech _immediately_.  Client
applications wishing to produce character-at-a-time output, e.g., when
providing character echo during keyboard input should use this command.

     d

   This command is used to _dispatch_ all queued requests.  It was
renamed to a single character command (like many of the commonly used
TTS server commands) to work more effectively over slow (9600) dialup
lines.  The effect of calling this command is for the TTS server to
start processing items that have been queued via earlier requests.

     s

   Stop speech _immediately_.  Spoken output is interrupted, and all
pending requests are flushed from the queue.

     q text

   Queues text to be spoken.  No spoken output is produced until a
_dispatch_ request is received via execution of command _d_.

     c codes

   Queues synthesis codes to be sent to the TTS engine.  Codes are sent
to the engine with no further transformation or processing.  The codes
are inserted into the output queue and will be dispatched to the TTS
engine at the appropriate point in the output stream.

     a filename

   Cues the audio file identified by filename for playing.

     t freq length

   Queues a tone to be played at the specified frequency and having the
specified length.  Frequency is specified in hertz and length is
specified in milliseconds.

     sh duration

   Queues the specified duration of silence.  Silence is specified in
milliseconds.

14.1.2 Commands That Set State
------------------------------

     tts_reset

   Reset TTS engine to default settings.

     tts_set_punctuations mode

   Sets TTS engine to the specified punctuation mode.  Typically, TTS
servers provide at least three modes:

   • None: Do not speak punctuation characters.

   • Some: Speak some punctuation characters.  Used for English prose.

   • All: Speak out _all_ punctuation characters; useful in programming
     modes.

     tts_set_speech_rate rate

   Sets speech rate.  The interpretation of this value is typically
engine specific.

     tts_set_character_scale factor

   Scale factor applied to speech rate when speaking individual
characters.Thus, setting speech rate to 500 and character scale to 1.2
will cause command _l_ to use a speech rate of _500 * 1.2 = 600_.

     tts_split_caps flag

   Set state of _split caps_ processing.  Turn this on to speak
mixed-case (AKA Camel Case) identifiers.


File: emacspeak.info,  Node: Emacspeak At Twenty,  Next: Acknowledgments,  Prev: TTS Servers,  Up: Top

15 Emacspeak At Twenty.
***********************

This article was originally published to mark the 20th anniversary of
Emacspeak.  It has been incorporated as the final chapter of the
Emacspeak manual for easy reference.  The original article is available
on the Web and in its original source form as an *org* file in the
emacspeak distribution.
* Menu:

* Turning Twenty::
* Using UNIX With Speech Output  —   1994: Using UNIX With Speech Output  ---  1994.
* Key Enabler  ---  Emacs And Lisp Advice::
* Key Component  —   Text To Speech (TTS): Key Component  ---  Text To Speech (TTS).
* Emacspeak And Software Development::
* Emacspeak And Authoring Documents::
* Emacspeak And The Early Days Of The Web::
* Audio Formatting  —   Generalizing Aural CSS: Audio Formatting  ---  Generalizing Aural CSS.
* Conversational Gestures For The Audio Desktop::
* Accessing Media Streams::
* EBooks —    Ubiquitous Access To Books: EBooks ---  Ubiquitous Access To Books.
* Leveraging Computational Tools  —   From SQL And R To IPython Notebooks: Leveraging Computational Tools  ---  From SQL And R To IPython Notebooks.
* Social Web   —  EMail, Instant Messaging, Blogging  And Tweeting Using Open Protocols: Social Web  ---  EMail Instant Messaging Blogging And Tweeting Using Open Protocols.
* The RESTful Web  —   Web Wizards And URL Templates For Faster Access: The RESTful Web  ---  Web Wizards And URL Templates For Faster Access.
* Mashing It Up  —   Leveraging Evolving Web APIs: Mashing It Up  --- Leveraging Evolving Web APIs.
* Conclusion --- Turning Twenty::
* References::


File: emacspeak.info,  Node: Turning Twenty,  Next: Using UNIX With Speech Output --- 1994,  Up: Emacspeak At Twenty

15.1 Turning Twenty
===================

One afternoon in the third week of September 1994, I started writing
myself a small Emacs extension using Lisp Advice to make Emacs speak to
me so I could use a Linux laptop.  As Emacspeak turns twenty, this
article is both a quick look back over the twenty years of lessons
learned, as well as a glimpse into what might be possible as we evolve
to a world of connected, ubiquitous computing.  This article draws on
Learning To Program In 10 Years (http://norvig.com/21-days.html) by
Peter Norvig for some of its inspiration.


File: emacspeak.info,  Node: Using UNIX With Speech Output --- 1994,  Next: Key Enabler --- Emacs And Lisp Advice,  Prev: Turning Twenty,  Up: Emacspeak At Twenty

15.2 Using UNIX With Speech Output — 1994
=========================================

As a graduate student at Cornell
(http://www.cs.cornell.edu/info/people/raman/raman.html), I accessed my
Unix workstation (SunOS) from an Intel 486 PC running IBM Screen-Reader.
There was no means of directly using a UNIX box at the time; after
graduating, I continued doing the same for about six months at Digital
Research in Cambridge — the only difference being that my desktop
workstation was now a DEC-Alpha.  Throughout this time, Emacs was my
environment of choice for everything from software development and
Internet access to writing documents.

   In fall of 1994, I wanted to start using a laptop running Linux; a
colleague (Dave Wecker) was retiring his 386mhz laptop that already had
Linux on it and I decided to inherit it.  But there was only one problem
— until then I had always accessed a UNIX machine from a secondary PC
running a screen-reader — something that would clearly make no sense
with a laptop!

   Another colleague, Win Treese, had pointed out the interesting
possibilities presented by package *advice* in Emacs 19.23 — a few weeks
earlier, he had sent around a small snippet of code that magically
modified Emacs’ version-control primitive to first create an _RCS_
directory if none existed before adding a file to version control.  When
I speculated about using the Linux laptop, Dave remarked — you live in
Emacs anyway — why dont you just make it talk!

   Connecting the dots, I decided to write myself a tool that augmented
Emacs’ default behavior to _speak_ — within about 4 hours, version 0.01
of Emacspeak was up and running.


File: emacspeak.info,  Node: Key Enabler --- Emacs And Lisp Advice,  Next: Key Component --- Text To Speech (TTS),  Prev: Using UNIX With Speech Output --- 1994,  Up: Emacspeak At Twenty

15.3 Key Enabler — Emacs And Lisp Advice
========================================

It took me a couple of weeks to fully recognize the potential of what I
had built with Emacs Lisp Advice.  Until then, I had used screen-readers
to listen to the contents of the visual display — but Lisp Advice let me
do a lot more — it enabled Emacspeak to generate highly context-specific
spoken feedback, augmented by a set of auditory icons.  I later
formalized this design under the name speech-enabled applications
(http://en.wikipedia.org/wiki/Self-voicing).  For a detailed overview of
the architecture of Emacspeak, see the chapter on Emacspeak
(http://emacspeak.sourceforge.net/raman/publications/bc-emacspeak/publish-emacspeak-bc.html)
in the book Beautiful Code
(http://emacspeak.blogspot.com/2007/07/emacspeak-and-beautiful-code.html)
from O’Reilly.

